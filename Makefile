# Makefile.in generated by automake 1.15.1 from Makefile.am.
# src/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994-2017 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



# Copyright (c) 2013-2016 The Bitcoin Core developers
# Distributed under the MIT software license, see the accompanying
# file COPYING or http://www.opensource.org/licenses/mit-license.php.

# Copyright (c) 2016 The Bitcoin Core developers
# Distributed under the MIT software license, see the accompanying
# file COPYING or http://www.opensource.org/licenses/mit-license.php.

# Copyright (c) 2013-2016 The Bitcoin Core developers
# Distributed under the MIT software license, see the accompanying
# file COPYING or http://www.opensource.org/licenses/mit-license.php.

# Copyright (c) 2015-2016 The Bitcoin Core developers
# Distributed under the MIT software license, see the accompanying
# file COPYING or http://www.opensource.org/licenses/mit-license.php.

# Copyright (c) 2013-2016 The Bitcoin Core developers
# Distributed under the MIT software license, see the accompanying
# file COPYING or http://www.opensource.org/licenses/mit-license.php.

# Copyright (c) 2013-2016 The Bitcoin Core developers
# Distributed under the MIT software license, see the accompanying
# file COPYING or http://www.opensource.org/licenses/mit-license.php.




am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/heptafranc
pkgincludedir = $(includedir)/heptafranc
pkglibdir = $(libdir)/heptafranc
pkglibexecdir = $(libexecdir)/heptafranc
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-pc-linux-gnu
host_triplet = x86_64-pc-linux-gnu
am__append_1 = $(LIBHEPTAFRANC_CRYPTO_SSE41)
am__append_2 = $(LIBHEPTAFRANC_CRYPTO_AVX2)
am__append_3 = $(LIBHEPTAFRANC_CRYPTO_SHANI)
bin_PROGRAMS = $(am__EXEEXT_1) $(am__EXEEXT_2) $(am__EXEEXT_3) \
	$(am__EXEEXT_4) $(am__EXEEXT_5) $(am__EXEEXT_6)
noinst_PROGRAMS = $(am__EXEEXT_7)
TESTS = $(am__EXEEXT_6)
am__append_4 = heptafrancd
am__append_5 = heptafranc-cli heptafranc-tx
am__append_6 = crypto/sha256_sse4.cpp
#am__append_7 = compat/glibc_compat.cpp
#am__append_8 = $(COMPAT_LDFLAGS)
#am__append_9 = heptafrancd-res.rc
#am__append_10 = heptafranc-cli-res.rc
#am__append_11 = heptafranc-tx-res.rc
#am__append_12 = compat/glibc_compat.cpp
am__append_13 = $(LIBLEVELDB_INT) \
	$(LIBMEMENV_INT) \
	$(LIBLEVELDB_SSE42_INT)
am__append_14 = $(LIBLEVELDB_INT)
am__append_15 = $(LIBMEMENV_INT)
am__append_16 = -I$(srcdir)/leveldb/include \
	-I$(srcdir)/leveldb/helpers/memenv
#am__append_17 = -DLEVELDB_PLATFORM_WINDOWS -DWINVER=0x0500 -D__USE_MINGW_ANSI_STDIO=1
am__append_18 = -DLEVELDB_PLATFORM_POSIX
#am__append_19 = leveldb/util/env_win.cc \
#	leveldb/port/port_win.cc
am__append_20 = leveldb/port/port_posix.cc
am__append_21 = -DLEVELDB_PLATFORM_POSIX_SSE
am__append_22 = $(SSE42_CXXFLAGS)
#am__append_23 = test/test_heptafranc
#am__append_24 = test/test_heptafranc_fuzzy
#am__append_25 = \
#  wallet/test/accounting_tests.cpp \
#  wallet/test/psbt_wallet_tests.cpp \
#  wallet/test/wallet_tests.cpp \
#  wallet/test/wallet_crypto_tests.cpp \
#  wallet/test/coinselector_tests.cpp

#am__append_26 = \
#  wallet/test/wallet_test_fixture.cpp \
#  wallet/test/wallet_test_fixture.h

#am__append_27 = $(LIBHEPTAFRANC_WALLET)
#am__append_28 = $(ZMQ_LIBS)
#am__append_29 = $(CLEAN_HEPTAFRANC_TEST)
#am__append_30 = bench/bench_heptafranc
#am__append_31 = $(LIBHEPTAFRANC_ZMQ) $(ZMQ_LIBS)
#am__append_32 = bench/coin_selection.cpp
#am__append_33 = $(CLEAN_HEPTAFRANC_BENCH)
am__append_34 = qt/heptafranc-qt
am__append_35 = qt/libheptafrancqt.a
#am__append_36 = $(HEPTAFRANC_QT_WINDOWS_CPP)
am__append_37 = $(HEPTAFRANC_QT_WALLET_CPP)
#am__append_38 = $(HEPTAFRANC_MM)
#am__append_39 = $(HEPTAFRANC_RC)
am__append_40 = $(LIBHEPTAFRANC_UTIL) $(LIBHEPTAFRANC_WALLET)
am__append_41 = $(LIBHEPTAFRANC_ZMQ) $(ZMQ_LIBS)
am__append_42 = $(CLEAN_QT)
#am__append_43 = qt/test/test_heptafranc-qt
#am__append_44 = qt/test/test_heptafranc-qt
#am__append_45 = \
#  qt/test/moc_addressbooktests.cpp \
#  qt/test/moc_paymentservertests.cpp \
#  qt/test/moc_wallettests.cpp

#am__append_46 = \
#  qt/test/addressbooktests.cpp \
#  qt/test/paymentservertests.cpp \
#  qt/test/wallettests.cpp \
#  wallet/test/wallet_test_fixture.cpp

#am__append_47 = $(LIBHEPTAFRANC_UTIL) $(LIBHEPTAFRANC_WALLET)
#am__append_48 = $(LIBHEPTAFRANC_ZMQ) $(ZMQ_LIBS)
#am__append_49 = $(CLEAN_HEPTAFRANC_QT_TEST)
subdir = src
SUBDIRS =
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/build-aux/m4/ax_boost_base.m4 \
	$(top_srcdir)/build-aux/m4/ax_boost_chrono.m4 \
	$(top_srcdir)/build-aux/m4/ax_boost_filesystem.m4 \
	$(top_srcdir)/build-aux/m4/ax_boost_system.m4 \
	$(top_srcdir)/build-aux/m4/ax_boost_thread.m4 \
	$(top_srcdir)/build-aux/m4/ax_boost_unit_test_framework.m4 \
	$(top_srcdir)/build-aux/m4/ax_check_compile_flag.m4 \
	$(top_srcdir)/build-aux/m4/ax_check_link_flag.m4 \
	$(top_srcdir)/build-aux/m4/ax_check_preproc_flag.m4 \
	$(top_srcdir)/build-aux/m4/ax_cxx_compile_stdcxx.m4 \
	$(top_srcdir)/build-aux/m4/ax_gcc_func_attribute.m4 \
	$(top_srcdir)/build-aux/m4/ax_pthread.m4 \
	$(top_srcdir)/build-aux/m4/heptafranc_find_bdb48.m4 \
	$(top_srcdir)/build-aux/m4/heptafranc_qt.m4 \
	$(top_srcdir)/build-aux/m4/heptafranc_subdir_to_include.m4 \
	$(top_srcdir)/build-aux/m4/l_atomic.m4 \
	$(top_srcdir)/build-aux/m4/libtool.m4 \
	$(top_srcdir)/build-aux/m4/ltoptions.m4 \
	$(top_srcdir)/build-aux/m4/ltsugar.m4 \
	$(top_srcdir)/build-aux/m4/ltversion.m4 \
	$(top_srcdir)/build-aux/m4/lt~obsolete.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(am__include_HEADERS_DIST) \
	$(am__DIST_COMMON)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/src/config/heptafranc-config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
AM_V_AR = $(am__v_AR_$(V))
am__v_AR_ = $(am__v_AR_$(AM_DEFAULT_VERBOSITY))
am__v_AR_0 = @echo "  AR      " $@;
am__v_AR_1 = 
crypto_libheptafranc_crypto_avx2_a_AR = $(AR) $(ARFLAGS)
crypto_libheptafranc_crypto_avx2_a_LIBADD =
am__dirstamp = $(am__leading_dot)dirstamp
am_crypto_libheptafranc_crypto_avx2_a_OBJECTS = crypto/crypto_libheptafranc_crypto_avx2_a-sha256_avx2.$(OBJEXT)
crypto_libheptafranc_crypto_avx2_a_OBJECTS =  \
	$(am_crypto_libheptafranc_crypto_avx2_a_OBJECTS)
crypto_libheptafranc_crypto_base_a_AR = $(AR) $(ARFLAGS)
crypto_libheptafranc_crypto_base_a_LIBADD =
am__crypto_libheptafranc_crypto_base_a_SOURCES_DIST = crypto/aes.cpp \
	crypto/aes.h crypto/chacha20.h crypto/chacha20.cpp \
	crypto/common.h crypto/hmac_sha256.cpp crypto/hmac_sha256.h \
	crypto/hmac_sha512.cpp crypto/hmac_sha512.h \
	crypto/ripemd160.cpp crypto/ripemd160.h crypto/sha1.cpp \
	crypto/sha1.h crypto/sha256.cpp crypto/sha256.h \
	crypto/sha512.cpp crypto/sha512.h crypto/sha256_sse4.cpp
am__objects_1 = crypto/crypto_libheptafranc_crypto_base_a-sha256_sse4.$(OBJEXT)
am_crypto_libheptafranc_crypto_base_a_OBJECTS =  \
	crypto/crypto_libheptafranc_crypto_base_a-aes.$(OBJEXT) \
	crypto/crypto_libheptafranc_crypto_base_a-chacha20.$(OBJEXT) \
	crypto/crypto_libheptafranc_crypto_base_a-hmac_sha256.$(OBJEXT) \
	crypto/crypto_libheptafranc_crypto_base_a-hmac_sha512.$(OBJEXT) \
	crypto/crypto_libheptafranc_crypto_base_a-ripemd160.$(OBJEXT) \
	crypto/crypto_libheptafranc_crypto_base_a-sha1.$(OBJEXT) \
	crypto/crypto_libheptafranc_crypto_base_a-sha256.$(OBJEXT) \
	crypto/crypto_libheptafranc_crypto_base_a-sha512.$(OBJEXT) \
	$(am__objects_1)
crypto_libheptafranc_crypto_base_a_OBJECTS =  \
	$(am_crypto_libheptafranc_crypto_base_a_OBJECTS)
crypto_libheptafranc_crypto_shani_a_AR = $(AR) $(ARFLAGS)
crypto_libheptafranc_crypto_shani_a_LIBADD =
am_crypto_libheptafranc_crypto_shani_a_OBJECTS = crypto/crypto_libheptafranc_crypto_shani_a-sha256_shani.$(OBJEXT)
crypto_libheptafranc_crypto_shani_a_OBJECTS =  \
	$(am_crypto_libheptafranc_crypto_shani_a_OBJECTS)
crypto_libheptafranc_crypto_sse41_a_AR = $(AR) $(ARFLAGS)
crypto_libheptafranc_crypto_sse41_a_LIBADD =
am_crypto_libheptafranc_crypto_sse41_a_OBJECTS = crypto/crypto_libheptafranc_crypto_sse41_a-sha256_sse41.$(OBJEXT)
crypto_libheptafranc_crypto_sse41_a_OBJECTS =  \
	$(am_crypto_libheptafranc_crypto_sse41_a_OBJECTS)
leveldb_libleveldb_a_AR = $(AR) $(ARFLAGS)
leveldb_libleveldb_a_LIBADD =
am__leveldb_libleveldb_a_SOURCES_DIST = leveldb/port/atomic_pointer.h \
	leveldb/port/port_example.h leveldb/port/port_posix.h \
	leveldb/port/win/stdint.h leveldb/port/port.h \
	leveldb/port/port_win.h leveldb/port/thread_annotations.h \
	leveldb/include/leveldb/db.h leveldb/include/leveldb/options.h \
	leveldb/include/leveldb/comparator.h \
	leveldb/include/leveldb/filter_policy.h \
	leveldb/include/leveldb/slice.h \
	leveldb/include/leveldb/table_builder.h \
	leveldb/include/leveldb/env.h leveldb/include/leveldb/c.h \
	leveldb/include/leveldb/iterator.h \
	leveldb/include/leveldb/cache.h \
	leveldb/include/leveldb/dumpfile.h \
	leveldb/include/leveldb/table.h \
	leveldb/include/leveldb/write_batch.h \
	leveldb/include/leveldb/status.h leveldb/db/log_format.h \
	leveldb/db/memtable.h leveldb/db/version_set.h \
	leveldb/db/write_batch_internal.h leveldb/db/filename.h \
	leveldb/db/version_edit.h leveldb/db/dbformat.h \
	leveldb/db/builder.h leveldb/db/log_writer.h \
	leveldb/db/db_iter.h leveldb/db/skiplist.h \
	leveldb/db/db_impl.h leveldb/db/table_cache.h \
	leveldb/db/snapshot.h leveldb/db/log_reader.h \
	leveldb/table/filter_block.h leveldb/table/block_builder.h \
	leveldb/table/block.h leveldb/table/two_level_iterator.h \
	leveldb/table/merger.h leveldb/table/format.h \
	leveldb/table/iterator_wrapper.h leveldb/util/crc32c.h \
	leveldb/util/env_posix_test_helper.h leveldb/util/arena.h \
	leveldb/util/random.h leveldb/util/posix_logger.h \
	leveldb/util/hash.h leveldb/util/histogram.h \
	leveldb/util/coding.h leveldb/util/testutil.h \
	leveldb/util/mutexlock.h leveldb/util/logging.h \
	leveldb/util/testharness.h leveldb/db/builder.cc \
	leveldb/db/c.cc leveldb/db/dbformat.cc leveldb/db/db_impl.cc \
	leveldb/db/db_iter.cc leveldb/db/dumpfile.cc \
	leveldb/db/filename.cc leveldb/db/log_reader.cc \
	leveldb/db/log_writer.cc leveldb/db/memtable.cc \
	leveldb/db/repair.cc leveldb/db/table_cache.cc \
	leveldb/db/version_edit.cc leveldb/db/version_set.cc \
	leveldb/db/write_batch.cc leveldb/table/block_builder.cc \
	leveldb/table/block.cc leveldb/table/filter_block.cc \
	leveldb/table/format.cc leveldb/table/iterator.cc \
	leveldb/table/merger.cc leveldb/table/table_builder.cc \
	leveldb/table/table.cc leveldb/table/two_level_iterator.cc \
	leveldb/util/arena.cc leveldb/util/bloom.cc \
	leveldb/util/cache.cc leveldb/util/coding.cc \
	leveldb/util/comparator.cc leveldb/util/crc32c.cc \
	leveldb/util/env.cc leveldb/util/env_posix.cc \
	leveldb/util/filter_policy.cc leveldb/util/hash.cc \
	leveldb/util/histogram.cc leveldb/util/logging.cc \
	leveldb/util/options.cc leveldb/util/status.cc \
	leveldb/util/env_win.cc leveldb/port/port_win.cc \
	leveldb/port/port_posix.cc
#am__objects_2 = leveldb/util/leveldb_libleveldb_a-env_win.$(OBJEXT) \
#	leveldb/port/leveldb_libleveldb_a-port_win.$(OBJEXT)
am__objects_3 = leveldb/port/leveldb_libleveldb_a-port_posix.$(OBJEXT)
am_leveldb_libleveldb_a_OBJECTS = leveldb/db/leveldb_libleveldb_a-builder.$(OBJEXT) \
	leveldb/db/leveldb_libleveldb_a-c.$(OBJEXT) \
	leveldb/db/leveldb_libleveldb_a-dbformat.$(OBJEXT) \
	leveldb/db/leveldb_libleveldb_a-db_impl.$(OBJEXT) \
	leveldb/db/leveldb_libleveldb_a-db_iter.$(OBJEXT) \
	leveldb/db/leveldb_libleveldb_a-dumpfile.$(OBJEXT) \
	leveldb/db/leveldb_libleveldb_a-filename.$(OBJEXT) \
	leveldb/db/leveldb_libleveldb_a-log_reader.$(OBJEXT) \
	leveldb/db/leveldb_libleveldb_a-log_writer.$(OBJEXT) \
	leveldb/db/leveldb_libleveldb_a-memtable.$(OBJEXT) \
	leveldb/db/leveldb_libleveldb_a-repair.$(OBJEXT) \
	leveldb/db/leveldb_libleveldb_a-table_cache.$(OBJEXT) \
	leveldb/db/leveldb_libleveldb_a-version_edit.$(OBJEXT) \
	leveldb/db/leveldb_libleveldb_a-version_set.$(OBJEXT) \
	leveldb/db/leveldb_libleveldb_a-write_batch.$(OBJEXT) \
	leveldb/table/leveldb_libleveldb_a-block_builder.$(OBJEXT) \
	leveldb/table/leveldb_libleveldb_a-block.$(OBJEXT) \
	leveldb/table/leveldb_libleveldb_a-filter_block.$(OBJEXT) \
	leveldb/table/leveldb_libleveldb_a-format.$(OBJEXT) \
	leveldb/table/leveldb_libleveldb_a-iterator.$(OBJEXT) \
	leveldb/table/leveldb_libleveldb_a-merger.$(OBJEXT) \
	leveldb/table/leveldb_libleveldb_a-table_builder.$(OBJEXT) \
	leveldb/table/leveldb_libleveldb_a-table.$(OBJEXT) \
	leveldb/table/leveldb_libleveldb_a-two_level_iterator.$(OBJEXT) \
	leveldb/util/leveldb_libleveldb_a-arena.$(OBJEXT) \
	leveldb/util/leveldb_libleveldb_a-bloom.$(OBJEXT) \
	leveldb/util/leveldb_libleveldb_a-cache.$(OBJEXT) \
	leveldb/util/leveldb_libleveldb_a-coding.$(OBJEXT) \
	leveldb/util/leveldb_libleveldb_a-comparator.$(OBJEXT) \
	leveldb/util/leveldb_libleveldb_a-crc32c.$(OBJEXT) \
	leveldb/util/leveldb_libleveldb_a-env.$(OBJEXT) \
	leveldb/util/leveldb_libleveldb_a-env_posix.$(OBJEXT) \
	leveldb/util/leveldb_libleveldb_a-filter_policy.$(OBJEXT) \
	leveldb/util/leveldb_libleveldb_a-hash.$(OBJEXT) \
	leveldb/util/leveldb_libleveldb_a-histogram.$(OBJEXT) \
	leveldb/util/leveldb_libleveldb_a-logging.$(OBJEXT) \
	leveldb/util/leveldb_libleveldb_a-options.$(OBJEXT) \
	leveldb/util/leveldb_libleveldb_a-status.$(OBJEXT) \
	$(am__objects_2) $(am__objects_3)
leveldb_libleveldb_a_OBJECTS = $(am_leveldb_libleveldb_a_OBJECTS)
leveldb_libleveldb_sse42_a_AR = $(AR) $(ARFLAGS)
leveldb_libleveldb_sse42_a_LIBADD =
am__leveldb_libleveldb_sse42_a_SOURCES_DIST =  \
	leveldb/port/port_posix_sse.cc
am_leveldb_libleveldb_sse42_a_OBJECTS = leveldb/port/leveldb_libleveldb_sse42_a-port_posix_sse.$(OBJEXT)
leveldb_libleveldb_sse42_a_OBJECTS =  \
	$(am_leveldb_libleveldb_sse42_a_OBJECTS)
leveldb_libmemenv_a_AR = $(AR) $(ARFLAGS)
leveldb_libmemenv_a_LIBADD =
am__leveldb_libmemenv_a_SOURCES_DIST =  \
	leveldb/helpers/memenv/memenv.cc \
	leveldb/helpers/memenv/memenv.h
am_leveldb_libmemenv_a_OBJECTS = leveldb/helpers/memenv/leveldb_libmemenv_a-memenv.$(OBJEXT)
leveldb_libmemenv_a_OBJECTS = $(am_leveldb_libmemenv_a_OBJECTS)
libheptafranc_cli_a_AR = $(AR) $(ARFLAGS)
libheptafranc_cli_a_LIBADD =
am__objects_4 =
am_libheptafranc_cli_a_OBJECTS =  \
	rpc/libheptafranc_cli_a-client.$(OBJEXT) $(am__objects_4)
libheptafranc_cli_a_OBJECTS = $(am_libheptafranc_cli_a_OBJECTS)
libheptafranc_common_a_AR = $(AR) $(ARFLAGS)
libheptafranc_common_a_LIBADD =
am_libheptafranc_common_a_OBJECTS =  \
	libheptafranc_common_a-base58.$(OBJEXT) \
	libheptafranc_common_a-bech32.$(OBJEXT) \
	libheptafranc_common_a-chainparams.$(OBJEXT) \
	libheptafranc_common_a-coins.$(OBJEXT) \
	libheptafranc_common_a-compressor.$(OBJEXT) \
	libheptafranc_common_a-core_read.$(OBJEXT) \
	libheptafranc_common_a-core_write.$(OBJEXT) \
	libheptafranc_common_a-key.$(OBJEXT) \
	libheptafranc_common_a-key_io.$(OBJEXT) \
	libheptafranc_common_a-keystore.$(OBJEXT) \
	libheptafranc_common_a-netaddress.$(OBJEXT) \
	libheptafranc_common_a-netbase.$(OBJEXT) \
	policy/libheptafranc_common_a-feerate.$(OBJEXT) \
	libheptafranc_common_a-protocol.$(OBJEXT) \
	libheptafranc_common_a-scheduler.$(OBJEXT) \
	script/libheptafranc_common_a-descriptor.$(OBJEXT) \
	script/libheptafranc_common_a-ismine.$(OBJEXT) \
	script/libheptafranc_common_a-sign.$(OBJEXT) \
	script/libheptafranc_common_a-standard.$(OBJEXT) \
	libheptafranc_common_a-warnings.$(OBJEXT) $(am__objects_4)
libheptafranc_common_a_OBJECTS = $(am_libheptafranc_common_a_OBJECTS)
libheptafranc_consensus_a_AR = $(AR) $(ARFLAGS)
libheptafranc_consensus_a_LIBADD =
am_libheptafranc_consensus_a_OBJECTS =  \
	libheptafranc_consensus_a-arith_uint256.$(OBJEXT) \
	consensus/libheptafranc_consensus_a-merkle.$(OBJEXT) \
	libheptafranc_consensus_a-hash.$(OBJEXT) \
	primitives/libheptafranc_consensus_a-block.$(OBJEXT) \
	primitives/libheptafranc_consensus_a-transaction.$(OBJEXT) \
	libheptafranc_consensus_a-pubkey.$(OBJEXT) \
	script/libheptafranc_consensus_a-heptafrancconsensus.$(OBJEXT) \
	script/libheptafranc_consensus_a-interpreter.$(OBJEXT) \
	script/libheptafranc_consensus_a-script.$(OBJEXT) \
	script/libheptafranc_consensus_a-script_error.$(OBJEXT) \
	libheptafranc_consensus_a-uint256.$(OBJEXT) \
	libheptafranc_consensus_a-utilstrencodings.$(OBJEXT)
libheptafranc_consensus_a_OBJECTS =  \
	$(am_libheptafranc_consensus_a_OBJECTS)
libheptafranc_server_a_AR = $(AR) $(ARFLAGS)
libheptafranc_server_a_LIBADD =
am_libheptafranc_server_a_OBJECTS =  \
	libheptafranc_server_a-addrdb.$(OBJEXT) \
	libheptafranc_server_a-addrman.$(OBJEXT) \
	libheptafranc_server_a-bloom.$(OBJEXT) \
	libheptafranc_server_a-blockencodings.$(OBJEXT) \
	libheptafranc_server_a-chain.$(OBJEXT) \
	libheptafranc_server_a-checkpoints.$(OBJEXT) \
	consensus/libheptafranc_server_a-tx_verify.$(OBJEXT) \
	libheptafranc_server_a-httprpc.$(OBJEXT) \
	libheptafranc_server_a-httpserver.$(OBJEXT) \
	index/libheptafranc_server_a-base.$(OBJEXT) \
	index/libheptafranc_server_a-txindex.$(OBJEXT) \
	libheptafranc_server_a-init.$(OBJEXT) \
	libheptafranc_server_a-dbwrapper.$(OBJEXT) \
	libheptafranc_server_a-merkleblock.$(OBJEXT) \
	libheptafranc_server_a-miner.$(OBJEXT) \
	libheptafranc_server_a-net.$(OBJEXT) \
	libheptafranc_server_a-net_processing.$(OBJEXT) \
	libheptafranc_server_a-noui.$(OBJEXT) \
	libheptafranc_server_a-outputtype.$(OBJEXT) \
	policy/libheptafranc_server_a-fees.$(OBJEXT) \
	policy/libheptafranc_server_a-policy.$(OBJEXT) \
	policy/libheptafranc_server_a-rbf.$(OBJEXT) \
	libheptafranc_server_a-pow.$(OBJEXT) \
	libheptafranc_server_a-rest.$(OBJEXT) \
	rpc/libheptafranc_server_a-blockchain.$(OBJEXT) \
	rpc/libheptafranc_server_a-mining.$(OBJEXT) \
	rpc/libheptafranc_server_a-misc.$(OBJEXT) \
	rpc/libheptafranc_server_a-net.$(OBJEXT) \
	rpc/libheptafranc_server_a-rawtransaction.$(OBJEXT) \
	rpc/libheptafranc_server_a-server.$(OBJEXT) \
	rpc/libheptafranc_server_a-util.$(OBJEXT) \
	script/libheptafranc_server_a-sigcache.$(OBJEXT) \
	libheptafranc_server_a-shutdown.$(OBJEXT) \
	libheptafranc_server_a-timedata.$(OBJEXT) \
	libheptafranc_server_a-torcontrol.$(OBJEXT) \
	libheptafranc_server_a-txdb.$(OBJEXT) \
	libheptafranc_server_a-txmempool.$(OBJEXT) \
	libheptafranc_server_a-ui_interface.$(OBJEXT) \
	libheptafranc_server_a-validation.$(OBJEXT) \
	libheptafranc_server_a-validationinterface.$(OBJEXT) \
	libheptafranc_server_a-versionbits.$(OBJEXT) $(am__objects_4)
libheptafranc_server_a_OBJECTS = $(am_libheptafranc_server_a_OBJECTS)
libheptafranc_util_a_AR = $(AR) $(ARFLAGS)
libheptafranc_util_a_LIBADD =
am__libheptafranc_util_a_SOURCES_DIST = support/lockedpool.cpp \
	chainparamsbase.cpp clientversion.cpp compat/glibc_sanity.cpp \
	compat/glibcxx_sanity.cpp compat/strnlen.cpp fs.cpp \
	interfaces/handler.cpp interfaces/node.cpp logging.cpp \
	random.cpp rpc/protocol.cpp support/cleanse.cpp sync.cpp \
	threadinterrupt.cpp util.cpp utilmoneystr.cpp \
	utilstrencodings.cpp utiltime.cpp addrdb.h addrman.h base58.h \
	bech32.h bloom.h blockencodings.h chain.h chainparams.h \
	chainparamsbase.h chainparamsseeds.h checkpoints.h \
	checkqueue.h clientversion.h coins.h compat.h \
	compat/byteswap.h compat/endian.h compat/sanity.h compressor.h \
	consensus/consensus.h consensus/tx_verify.h core_io.h \
	core_memusage.h cuckoocache.h fs.h httprpc.h httpserver.h \
	index/base.h index/txindex.h indirectmap.h init.h \
	interfaces/handler.h interfaces/node.h interfaces/wallet.h \
	key.h key_io.h keystore.h dbwrapper.h limitedmap.h logging.h \
	memusage.h merkleblock.h miner.h net.h net_processing.h \
	netaddress.h netbase.h netmessagemaker.h noui.h outputtype.h \
	policy/feerate.h policy/fees.h policy/policy.h policy/rbf.h \
	pow.h protocol.h random.h reverse_iterator.h reverselock.h \
	rpc/blockchain.h rpc/client.h rpc/mining.h rpc/protocol.h \
	rpc/server.h rpc/rawtransaction.h rpc/register.h rpc/util.h \
	scheduler.h script/descriptor.h script/ismine.h \
	script/sigcache.h script/sign.h script/standard.h shutdown.h \
	streams.h support/allocators/secure.h \
	support/allocators/zeroafterfree.h support/cleanse.h \
	support/events.h support/lockedpool.h sync.h threadsafety.h \
	threadinterrupt.h timedata.h torcontrol.h txdb.h txmempool.h \
	ui_interface.h undo.h util.h utilmemory.h utilmoneystr.h \
	utiltime.h validation.h validationinterface.h versionbits.h \
	walletinitinterface.h wallet/coincontrol.h wallet/crypter.h \
	wallet/db.h wallet/feebumper.h wallet/fees.h \
	wallet/rpcwallet.h wallet/wallet.h wallet/walletdb.h \
	wallet/walletutil.h wallet/coinselection.h warnings.h \
	zmq/zmqabstractnotifier.h zmq/zmqconfig.h \
	zmq/zmqnotificationinterface.h zmq/zmqpublishnotifier.h \
	zmq/zmqrpc.h compat/glibc_compat.cpp
#am__objects_5 = compat/libheptafranc_util_a-glibc_compat.$(OBJEXT)
am_libheptafranc_util_a_OBJECTS =  \
	support/libheptafranc_util_a-lockedpool.$(OBJEXT) \
	libheptafranc_util_a-chainparamsbase.$(OBJEXT) \
	libheptafranc_util_a-clientversion.$(OBJEXT) \
	compat/libheptafranc_util_a-glibc_sanity.$(OBJEXT) \
	compat/libheptafranc_util_a-glibcxx_sanity.$(OBJEXT) \
	compat/libheptafranc_util_a-strnlen.$(OBJEXT) \
	libheptafranc_util_a-fs.$(OBJEXT) \
	interfaces/libheptafranc_util_a-handler.$(OBJEXT) \
	interfaces/libheptafranc_util_a-node.$(OBJEXT) \
	libheptafranc_util_a-logging.$(OBJEXT) \
	libheptafranc_util_a-random.$(OBJEXT) \
	rpc/libheptafranc_util_a-protocol.$(OBJEXT) \
	support/libheptafranc_util_a-cleanse.$(OBJEXT) \
	libheptafranc_util_a-sync.$(OBJEXT) \
	libheptafranc_util_a-threadinterrupt.$(OBJEXT) \
	libheptafranc_util_a-util.$(OBJEXT) \
	libheptafranc_util_a-utilmoneystr.$(OBJEXT) \
	libheptafranc_util_a-utilstrencodings.$(OBJEXT) \
	libheptafranc_util_a-utiltime.$(OBJEXT) $(am__objects_4) \
	$(am__objects_5)
nodist_libheptafranc_util_a_OBJECTS =
libheptafranc_util_a_OBJECTS = $(am_libheptafranc_util_a_OBJECTS) \
	$(nodist_libheptafranc_util_a_OBJECTS)
libheptafranc_wallet_a_AR = $(AR) $(ARFLAGS)
libheptafranc_wallet_a_LIBADD =
am_libheptafranc_wallet_a_OBJECTS =  \
	interfaces/libheptafranc_wallet_a-wallet.$(OBJEXT) \
	wallet/libheptafranc_wallet_a-coincontrol.$(OBJEXT) \
	wallet/libheptafranc_wallet_a-crypter.$(OBJEXT) \
	wallet/libheptafranc_wallet_a-db.$(OBJEXT) \
	wallet/libheptafranc_wallet_a-feebumper.$(OBJEXT) \
	wallet/libheptafranc_wallet_a-fees.$(OBJEXT) \
	wallet/libheptafranc_wallet_a-init.$(OBJEXT) \
	wallet/libheptafranc_wallet_a-rpcdump.$(OBJEXT) \
	wallet/libheptafranc_wallet_a-rpcwallet.$(OBJEXT) \
	wallet/libheptafranc_wallet_a-wallet.$(OBJEXT) \
	wallet/libheptafranc_wallet_a-walletdb.$(OBJEXT) \
	wallet/libheptafranc_wallet_a-walletutil.$(OBJEXT) \
	wallet/libheptafranc_wallet_a-coinselection.$(OBJEXT) \
	$(am__objects_4)
libheptafranc_wallet_a_OBJECTS = $(am_libheptafranc_wallet_a_OBJECTS)
libheptafranc_zmq_a_AR = $(AR) $(ARFLAGS)
libheptafranc_zmq_a_LIBADD =
am__libheptafranc_zmq_a_SOURCES_DIST = zmq/zmqabstractnotifier.cpp \
	zmq/zmqnotificationinterface.cpp zmq/zmqpublishnotifier.cpp \
	zmq/zmqrpc.cpp
am_libheptafranc_zmq_a_OBJECTS = zmq/libheptafranc_zmq_a-zmqabstractnotifier.$(OBJEXT) \
	zmq/libheptafranc_zmq_a-zmqnotificationinterface.$(OBJEXT) \
	zmq/libheptafranc_zmq_a-zmqpublishnotifier.$(OBJEXT) \
	zmq/libheptafranc_zmq_a-zmqrpc.$(OBJEXT)
libheptafranc_zmq_a_OBJECTS = $(am_libheptafranc_zmq_a_OBJECTS)
qt_libheptafrancqt_a_AR = $(AR) $(ARFLAGS)
qt_libheptafrancqt_a_LIBADD =
am__qt_libheptafrancqt_a_SOURCES_DIST = qt/bantablemodel.cpp \
	qt/heptafrancaddressvalidator.cpp qt/heptafrancamountfield.cpp \
	qt/heptafrancgui.cpp qt/heptafrancunits.cpp qt/clientmodel.cpp \
	qt/csvmodelwriter.cpp qt/guiutil.cpp qt/intro.cpp \
	qt/modaloverlay.cpp qt/networkstyle.cpp qt/notificator.cpp \
	qt/optionsdialog.cpp qt/optionsmodel.cpp qt/peertablemodel.cpp \
	qt/platformstyle.cpp qt/qvalidatedlineedit.cpp \
	qt/qvaluecombobox.cpp qt/rpcconsole.cpp qt/splashscreen.cpp \
	qt/trafficgraphwidget.cpp qt/utilitydialog.cpp \
	qt/winshutdownmonitor.cpp qt/addressbookpage.cpp \
	qt/addresstablemodel.cpp qt/askpassphrasedialog.cpp \
	qt/coincontroldialog.cpp qt/coincontroltreewidget.cpp \
	qt/editaddressdialog.cpp qt/openuridialog.cpp \
	qt/overviewpage.cpp qt/paymentrequestplus.cpp \
	qt/paymentserver.cpp qt/receivecoinsdialog.cpp \
	qt/receiverequestdialog.cpp qt/recentrequeststablemodel.cpp \
	qt/sendcoinsdialog.cpp qt/sendcoinsentry.cpp \
	qt/signverifymessagedialog.cpp qt/transactiondesc.cpp \
	qt/transactiondescdialog.cpp qt/transactionfilterproxy.cpp \
	qt/transactionrecord.cpp qt/transactiontablemodel.cpp \
	qt/transactionview.cpp qt/walletframe.cpp qt/walletmodel.cpp \
	qt/walletmodeltransaction.cpp qt/walletview.cpp \
	qt/addressbookpage.h qt/addresstablemodel.h \
	qt/askpassphrasedialog.h qt/bantablemodel.h \
	qt/heptafrancaddressvalidator.h qt/heptafrancamountfield.h \
	qt/heptafrancgui.h qt/heptafrancunits.h qt/callback.h \
	qt/clientmodel.h qt/coincontroldialog.h \
	qt/coincontroltreewidget.h qt/csvmodelwriter.h \
	qt/editaddressdialog.h qt/guiconstants.h qt/guiutil.h \
	qt/intro.h qt/macdockiconhandler.h qt/macnotificationhandler.h \
	qt/modaloverlay.h qt/networkstyle.h qt/notificator.h \
	qt/openuridialog.h qt/optionsdialog.h qt/optionsmodel.h \
	qt/overviewpage.h qt/paymentrequestplus.h qt/paymentserver.h \
	qt/peertablemodel.h qt/platformstyle.h qt/qvalidatedlineedit.h \
	qt/qvaluecombobox.h qt/receivecoinsdialog.h \
	qt/receiverequestdialog.h qt/recentrequeststablemodel.h \
	qt/rpcconsole.h qt/sendcoinsdialog.h qt/sendcoinsentry.h \
	qt/signverifymessagedialog.h qt/splashscreen.h \
	qt/trafficgraphwidget.h qt/transactiondesc.h \
	qt/transactiondescdialog.h qt/transactionfilterproxy.h \
	qt/transactionrecord.h qt/transactiontablemodel.h \
	qt/transactionview.h qt/utilitydialog.h qt/walletframe.h \
	qt/walletmodel.h qt/walletmodeltransaction.h qt/walletview.h \
	qt/winshutdownmonitor.h qt/forms/addressbookpage.ui \
	qt/forms/askpassphrasedialog.ui qt/forms/coincontroldialog.ui \
	qt/forms/editaddressdialog.ui qt/forms/helpmessagedialog.ui \
	qt/forms/intro.ui qt/forms/modaloverlay.ui \
	qt/forms/openuridialog.ui qt/forms/optionsdialog.ui \
	qt/forms/overviewpage.ui qt/forms/receivecoinsdialog.ui \
	qt/forms/receiverequestdialog.ui qt/forms/debugwindow.ui \
	qt/forms/sendcoinsdialog.ui qt/forms/sendcoinsentry.ui \
	qt/forms/signverifymessagedialog.ui \
	qt/forms/transactiondescdialog.ui qt/heptafranc.qrc \
	qt/heptafranc_locale.qrc qt/locale/heptafranc_af.ts \
	qt/locale/heptafranc_af_ZA.ts qt/locale/heptafranc_ar.ts \
	qt/locale/heptafranc_be_BY.ts qt/locale/heptafranc_bg_BG.ts \
	qt/locale/heptafranc_bg.ts qt/locale/heptafranc_ca_ES.ts \
	qt/locale/heptafranc_ca.ts qt/locale/heptafranc_ca@valencia.ts \
	qt/locale/heptafranc_cs.ts qt/locale/heptafranc_cy.ts \
	qt/locale/heptafranc_da.ts qt/locale/heptafranc_de.ts \
	qt/locale/heptafranc_el_GR.ts qt/locale/heptafranc_el.ts \
	qt/locale/heptafranc_en_GB.ts qt/locale/heptafranc_en.ts \
	qt/locale/heptafranc_eo.ts qt/locale/heptafranc_es_AR.ts \
	qt/locale/heptafranc_es_CL.ts qt/locale/heptafranc_es_CO.ts \
	qt/locale/heptafranc_es_DO.ts qt/locale/heptafranc_es_ES.ts \
	qt/locale/heptafranc_es_MX.ts qt/locale/heptafranc_es.ts \
	qt/locale/heptafranc_es_UY.ts qt/locale/heptafranc_es_VE.ts \
	qt/locale/heptafranc_et_EE.ts qt/locale/heptafranc_et.ts \
	qt/locale/heptafranc_eu_ES.ts qt/locale/heptafranc_fa_IR.ts \
	qt/locale/heptafranc_fa.ts qt/locale/heptafranc_fi.ts \
	qt/locale/heptafranc_fr_CA.ts qt/locale/heptafranc_fr_FR.ts \
	qt/locale/heptafranc_fr.ts qt/locale/heptafranc_gl.ts \
	qt/locale/heptafranc_he.ts qt/locale/heptafranc_hi_IN.ts \
	qt/locale/heptafranc_hr.ts qt/locale/heptafranc_hu.ts \
	qt/locale/heptafranc_id_ID.ts qt/locale/heptafranc_it_IT.ts \
	qt/locale/heptafranc_it.ts qt/locale/heptafranc_ja.ts \
	qt/locale/heptafranc_ka.ts qt/locale/heptafranc_kk_KZ.ts \
	qt/locale/heptafranc_ko_KR.ts qt/locale/heptafranc_ku_IQ.ts \
	qt/locale/heptafranc_ky.ts qt/locale/heptafranc_la.ts \
	qt/locale/heptafranc_lt.ts qt/locale/heptafranc_lv_LV.ts \
	qt/locale/heptafranc_mk_MK.ts qt/locale/heptafranc_mn.ts \
	qt/locale/heptafranc_ms_MY.ts qt/locale/heptafranc_nb.ts \
	qt/locale/heptafranc_ne.ts qt/locale/heptafranc_nl.ts \
	qt/locale/heptafranc_pam.ts qt/locale/heptafranc_pl.ts \
	qt/locale/heptafranc_pt_BR.ts qt/locale/heptafranc_pt_PT.ts \
	qt/locale/heptafranc_ro_RO.ts qt/locale/heptafranc_ro.ts \
	qt/locale/heptafranc_ru_RU.ts qt/locale/heptafranc_ru.ts \
	qt/locale/heptafranc_sk.ts qt/locale/heptafranc_sl_SI.ts \
	qt/locale/heptafranc_sq.ts qt/locale/heptafranc_sr@latin.ts \
	qt/locale/heptafranc_sr.ts qt/locale/heptafranc_sv.ts \
	qt/locale/heptafranc_ta.ts qt/locale/heptafranc_th_TH.ts \
	qt/locale/heptafranc_tr_TR.ts qt/locale/heptafranc_tr.ts \
	qt/locale/heptafranc_uk.ts qt/locale/heptafranc_ur_PK.ts \
	qt/locale/heptafranc_uz@Cyrl.ts qt/locale/heptafranc_vi.ts \
	qt/locale/heptafranc_vi_VN.ts qt/locale/heptafranc_zh_CN.ts \
	qt/locale/heptafranc_zh_HK.ts qt/locale/heptafranc_zh.ts \
	qt/locale/heptafranc_zh_TW.ts qt/paymentrequest.proto \
	qt/res/icons/add.png qt/res/icons/address-book.png \
	qt/res/icons/about.png qt/res/icons/about_qt.png \
	qt/res/icons/heptafranc.ico \
	qt/res/icons/heptafranc_testnet.ico \
	qt/res/icons/heptafranc.png qt/res/icons/chevron.png \
	qt/res/icons/clock1.png qt/res/icons/clock2.png \
	qt/res/icons/clock3.png qt/res/icons/clock4.png \
	qt/res/icons/clock5.png qt/res/icons/configure.png \
	qt/res/icons/connect0.png qt/res/icons/connect1.png \
	qt/res/icons/connect2.png qt/res/icons/connect3.png \
	qt/res/icons/connect4.png qt/res/icons/debugwindow.png \
	qt/res/icons/edit.png qt/res/icons/editcopy.png \
	qt/res/icons/editpaste.png qt/res/icons/export.png \
	qt/res/icons/eye.png qt/res/icons/eye_minus.png \
	qt/res/icons/eye_plus.png qt/res/icons/filesave.png \
	qt/res/icons/fontbigger.png qt/res/icons/fontsmaller.png \
	qt/res/icons/hd_disabled.png qt/res/icons/hd_enabled.png \
	qt/res/icons/history.png qt/res/icons/info.png \
	qt/res/icons/key.png qt/res/icons/lock_closed.png \
	qt/res/icons/lock_open.png qt/res/icons/network_disabled.png \
	qt/res/icons/open.png qt/res/icons/overview.png \
	qt/res/icons/proxy.png qt/res/icons/quit.png \
	qt/res/icons/receive.png qt/res/icons/remove.png \
	qt/res/icons/send.png qt/res/icons/synced.png \
	qt/res/icons/transaction0.png qt/res/icons/transaction2.png \
	qt/res/icons/transaction_abandoned.png \
	qt/res/icons/transaction_conflicted.png \
	qt/res/icons/tx_inout.png qt/res/icons/tx_input.png \
	qt/res/icons/tx_output.png qt/res/icons/tx_mined.png \
	qt/res/icons/warning.png qt/res/icons/verify.png $(wildcard \
	$(srcdir)/qt/res/movies/spinner-*.png)
am__objects_6 = qt/qt_libheptafrancqt_a-bantablemodel.$(OBJEXT) \
	qt/qt_libheptafrancqt_a-heptafrancaddressvalidator.$(OBJEXT) \
	qt/qt_libheptafrancqt_a-heptafrancamountfield.$(OBJEXT) \
	qt/qt_libheptafrancqt_a-heptafrancgui.$(OBJEXT) \
	qt/qt_libheptafrancqt_a-heptafrancunits.$(OBJEXT) \
	qt/qt_libheptafrancqt_a-clientmodel.$(OBJEXT) \
	qt/qt_libheptafrancqt_a-csvmodelwriter.$(OBJEXT) \
	qt/qt_libheptafrancqt_a-guiutil.$(OBJEXT) \
	qt/qt_libheptafrancqt_a-intro.$(OBJEXT) \
	qt/qt_libheptafrancqt_a-modaloverlay.$(OBJEXT) \
	qt/qt_libheptafrancqt_a-networkstyle.$(OBJEXT) \
	qt/qt_libheptafrancqt_a-notificator.$(OBJEXT) \
	qt/qt_libheptafrancqt_a-optionsdialog.$(OBJEXT) \
	qt/qt_libheptafrancqt_a-optionsmodel.$(OBJEXT) \
	qt/qt_libheptafrancqt_a-peertablemodel.$(OBJEXT) \
	qt/qt_libheptafrancqt_a-platformstyle.$(OBJEXT) \
	qt/qt_libheptafrancqt_a-qvalidatedlineedit.$(OBJEXT) \
	qt/qt_libheptafrancqt_a-qvaluecombobox.$(OBJEXT) \
	qt/qt_libheptafrancqt_a-rpcconsole.$(OBJEXT) \
	qt/qt_libheptafrancqt_a-splashscreen.$(OBJEXT) \
	qt/qt_libheptafrancqt_a-trafficgraphwidget.$(OBJEXT) \
	qt/qt_libheptafrancqt_a-utilitydialog.$(OBJEXT)
am__objects_7 = qt/qt_libheptafrancqt_a-winshutdownmonitor.$(OBJEXT)
#am__objects_8 = $(am__objects_7)
am__objects_9 = qt/qt_libheptafrancqt_a-addressbookpage.$(OBJEXT) \
	qt/qt_libheptafrancqt_a-addresstablemodel.$(OBJEXT) \
	qt/qt_libheptafrancqt_a-askpassphrasedialog.$(OBJEXT) \
	qt/qt_libheptafrancqt_a-coincontroldialog.$(OBJEXT) \
	qt/qt_libheptafrancqt_a-coincontroltreewidget.$(OBJEXT) \
	qt/qt_libheptafrancqt_a-editaddressdialog.$(OBJEXT) \
	qt/qt_libheptafrancqt_a-openuridialog.$(OBJEXT) \
	qt/qt_libheptafrancqt_a-overviewpage.$(OBJEXT) \
	qt/qt_libheptafrancqt_a-paymentrequestplus.$(OBJEXT) \
	qt/qt_libheptafrancqt_a-paymentserver.$(OBJEXT) \
	qt/qt_libheptafrancqt_a-receivecoinsdialog.$(OBJEXT) \
	qt/qt_libheptafrancqt_a-receiverequestdialog.$(OBJEXT) \
	qt/qt_libheptafrancqt_a-recentrequeststablemodel.$(OBJEXT) \
	qt/qt_libheptafrancqt_a-sendcoinsdialog.$(OBJEXT) \
	qt/qt_libheptafrancqt_a-sendcoinsentry.$(OBJEXT) \
	qt/qt_libheptafrancqt_a-signverifymessagedialog.$(OBJEXT) \
	qt/qt_libheptafrancqt_a-transactiondesc.$(OBJEXT) \
	qt/qt_libheptafrancqt_a-transactiondescdialog.$(OBJEXT) \
	qt/qt_libheptafrancqt_a-transactionfilterproxy.$(OBJEXT) \
	qt/qt_libheptafrancqt_a-transactionrecord.$(OBJEXT) \
	qt/qt_libheptafrancqt_a-transactiontablemodel.$(OBJEXT) \
	qt/qt_libheptafrancqt_a-transactionview.$(OBJEXT) \
	qt/qt_libheptafrancqt_a-walletframe.$(OBJEXT) \
	qt/qt_libheptafrancqt_a-walletmodel.$(OBJEXT) \
	qt/qt_libheptafrancqt_a-walletmodeltransaction.$(OBJEXT) \
	qt/qt_libheptafrancqt_a-walletview.$(OBJEXT)
am__objects_10 = $(am__objects_9)
am__objects_11 = $(am__objects_6) $(am__objects_8) \
	$(am__objects_10)
am_qt_libheptafrancqt_a_OBJECTS = $(am__objects_11) \
	$(am__objects_4) $(am__objects_4) \
	$(am__objects_4) $(am__objects_4) \
	$(am__objects_4) $(am__objects_4) \
	$(am__objects_4) $(am__objects_4) \
	$(am__objects_4)
am__objects_12 = qt/qt_libheptafrancqt_a-moc_addressbookpage.$(OBJEXT) \
	qt/qt_libheptafrancqt_a-moc_addresstablemodel.$(OBJEXT) \
	qt/qt_libheptafrancqt_a-moc_askpassphrasedialog.$(OBJEXT) \
	qt/qt_libheptafrancqt_a-moc_bantablemodel.$(OBJEXT) \
	qt/qt_libheptafrancqt_a-moc_heptafrancaddressvalidator.$(OBJEXT) \
	qt/qt_libheptafrancqt_a-moc_heptafrancamountfield.$(OBJEXT) \
	qt/qt_libheptafrancqt_a-moc_heptafrancgui.$(OBJEXT) \
	qt/qt_libheptafrancqt_a-moc_heptafrancunits.$(OBJEXT) \
	qt/qt_libheptafrancqt_a-moc_callback.$(OBJEXT) \
	qt/qt_libheptafrancqt_a-moc_clientmodel.$(OBJEXT) \
	qt/qt_libheptafrancqt_a-moc_coincontroldialog.$(OBJEXT) \
	qt/qt_libheptafrancqt_a-moc_coincontroltreewidget.$(OBJEXT) \
	qt/qt_libheptafrancqt_a-moc_csvmodelwriter.$(OBJEXT) \
	qt/qt_libheptafrancqt_a-moc_editaddressdialog.$(OBJEXT) \
	qt/qt_libheptafrancqt_a-moc_guiutil.$(OBJEXT) \
	qt/qt_libheptafrancqt_a-moc_intro.$(OBJEXT) \
	qt/qt_libheptafrancqt_a-moc_macdockiconhandler.$(OBJEXT) \
	qt/qt_libheptafrancqt_a-moc_macnotificationhandler.$(OBJEXT) \
	qt/qt_libheptafrancqt_a-moc_modaloverlay.$(OBJEXT) \
	qt/qt_libheptafrancqt_a-moc_notificator.$(OBJEXT) \
	qt/qt_libheptafrancqt_a-moc_openuridialog.$(OBJEXT) \
	qt/qt_libheptafrancqt_a-moc_optionsdialog.$(OBJEXT) \
	qt/qt_libheptafrancqt_a-moc_optionsmodel.$(OBJEXT) \
	qt/qt_libheptafrancqt_a-moc_overviewpage.$(OBJEXT) \
	qt/qt_libheptafrancqt_a-moc_peertablemodel.$(OBJEXT) \
	qt/qt_libheptafrancqt_a-moc_paymentserver.$(OBJEXT) \
	qt/qt_libheptafrancqt_a-moc_qvalidatedlineedit.$(OBJEXT) \
	qt/qt_libheptafrancqt_a-moc_qvaluecombobox.$(OBJEXT) \
	qt/qt_libheptafrancqt_a-moc_receivecoinsdialog.$(OBJEXT) \
	qt/qt_libheptafrancqt_a-moc_receiverequestdialog.$(OBJEXT) \
	qt/qt_libheptafrancqt_a-moc_recentrequeststablemodel.$(OBJEXT) \
	qt/qt_libheptafrancqt_a-moc_rpcconsole.$(OBJEXT) \
	qt/qt_libheptafrancqt_a-moc_sendcoinsdialog.$(OBJEXT) \
	qt/qt_libheptafrancqt_a-moc_sendcoinsentry.$(OBJEXT) \
	qt/qt_libheptafrancqt_a-moc_signverifymessagedialog.$(OBJEXT) \
	qt/qt_libheptafrancqt_a-moc_splashscreen.$(OBJEXT) \
	qt/qt_libheptafrancqt_a-moc_trafficgraphwidget.$(OBJEXT) \
	qt/qt_libheptafrancqt_a-moc_transactiondesc.$(OBJEXT) \
	qt/qt_libheptafrancqt_a-moc_transactiondescdialog.$(OBJEXT) \
	qt/qt_libheptafrancqt_a-moc_transactionfilterproxy.$(OBJEXT) \
	qt/qt_libheptafrancqt_a-moc_transactiontablemodel.$(OBJEXT) \
	qt/qt_libheptafrancqt_a-moc_transactionview.$(OBJEXT) \
	qt/qt_libheptafrancqt_a-moc_utilitydialog.$(OBJEXT) \
	qt/qt_libheptafrancqt_a-moc_walletframe.$(OBJEXT) \
	qt/qt_libheptafrancqt_a-moc_walletmodel.$(OBJEXT) \
	qt/qt_libheptafrancqt_a-moc_walletview.$(OBJEXT)
am__objects_13 = qt/qt_libheptafrancqt_a-paymentrequest.pb.$(OBJEXT)
am__objects_14 = qt/qt_libheptafrancqt_a-qrc_heptafranc.$(OBJEXT)
am__objects_15 = qt/qt_libheptafrancqt_a-qrc_heptafranc_locale.$(OBJEXT)
nodist_qt_libheptafrancqt_a_OBJECTS =  \
	$(am__objects_12) $(am__objects_4) \
	$(am__objects_13) $(am__objects_4) \
	$(am__objects_14) $(am__objects_15)
qt_libheptafrancqt_a_OBJECTS = $(am_qt_libheptafrancqt_a_OBJECTS) \
	$(nodist_qt_libheptafrancqt_a_OBJECTS)
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
am__installdirs = "$(DESTDIR)$(libdir)" "$(DESTDIR)$(bindir)" \
	"$(DESTDIR)$(includedir)"
LTLIBRARIES = $(lib_LTLIBRARIES)
libheptafrancconsensus_la_DEPENDENCIES =  \
	$(LIBSECP256K1)
am__libheptafrancconsensus_la_SOURCES_DIST = crypto/aes.cpp \
	crypto/aes.h crypto/chacha20.h crypto/chacha20.cpp \
	crypto/common.h crypto/hmac_sha256.cpp crypto/hmac_sha256.h \
	crypto/hmac_sha512.cpp crypto/hmac_sha512.h \
	crypto/ripemd160.cpp crypto/ripemd160.h crypto/sha1.cpp \
	crypto/sha1.h crypto/sha256.cpp crypto/sha256.h \
	crypto/sha512.cpp crypto/sha512.h crypto/sha256_sse4.cpp \
	amount.h arith_uint256.cpp arith_uint256.h \
	consensus/merkle.cpp consensus/merkle.h consensus/params.h \
	consensus/validation.h hash.cpp hash.h prevector.h \
	primitives/block.cpp primitives/block.h \
	primitives/transaction.cpp primitives/transaction.h pubkey.cpp \
	pubkey.h script/heptafrancconsensus.cpp script/interpreter.cpp \
	script/interpreter.h script/script.cpp script/script.h \
	script/script_error.cpp script/script_error.h serialize.h \
	span.h tinyformat.h uint256.cpp uint256.h utilstrencodings.cpp \
	utilstrencodings.h version.h compat/glibc_compat.cpp
am__objects_16 =  \
	crypto/libheptafrancconsensus_la-sha256_sse4.lo
am__objects_17 = crypto/libheptafrancconsensus_la-aes.lo \
	crypto/libheptafrancconsensus_la-chacha20.lo \
	crypto/libheptafrancconsensus_la-hmac_sha256.lo \
	crypto/libheptafrancconsensus_la-hmac_sha512.lo \
	crypto/libheptafrancconsensus_la-ripemd160.lo \
	crypto/libheptafrancconsensus_la-sha1.lo \
	crypto/libheptafrancconsensus_la-sha256.lo \
	crypto/libheptafrancconsensus_la-sha512.lo $(am__objects_16)
am__objects_18 = libheptafrancconsensus_la-arith_uint256.lo \
	consensus/libheptafrancconsensus_la-merkle.lo \
	libheptafrancconsensus_la-hash.lo \
	primitives/libheptafrancconsensus_la-block.lo \
	primitives/libheptafrancconsensus_la-transaction.lo \
	libheptafrancconsensus_la-pubkey.lo \
	script/libheptafrancconsensus_la-heptafrancconsensus.lo \
	script/libheptafrancconsensus_la-interpreter.lo \
	script/libheptafrancconsensus_la-script.lo \
	script/libheptafrancconsensus_la-script_error.lo \
	libheptafrancconsensus_la-uint256.lo \
	libheptafrancconsensus_la-utilstrencodings.lo
#am__objects_19 = compat/libheptafrancconsensus_la-glibc_compat.lo
am_libheptafrancconsensus_la_OBJECTS =  \
	$(am__objects_17) \
	$(am__objects_18) \
	$(am__objects_19)
libheptafrancconsensus_la_OBJECTS =  \
	$(am_libheptafrancconsensus_la_OBJECTS)
AM_V_lt = $(am__v_lt_$(V))
am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))
am__v_lt_0 = --silent
am__v_lt_1 = 
libheptafrancconsensus_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(libheptafrancconsensus_la_CXXFLAGS) $(CXXFLAGS) \
	$(libheptafrancconsensus_la_LDFLAGS) $(LDFLAGS) -o $@
am_libheptafrancconsensus_la_rpath =  \
	-rpath $(libdir)
am__EXEEXT_1 = heptafrancd$(EXEEXT)
am__EXEEXT_2 = heptafranc-cli$(EXEEXT) \
	heptafranc-tx$(EXEEXT)
#am__EXEEXT_3 = test/test_heptafranc$(EXEEXT)
#am__EXEEXT_4 = bench/bench_heptafranc$(EXEEXT)
am__EXEEXT_5 = qt/heptafranc-qt$(EXEEXT)
#am__EXEEXT_6 =  \
#	qt/test/test_heptafranc-qt$(EXEEXT)
#am__EXEEXT_7 = test/test_heptafranc_fuzzy$(EXEEXT)
PROGRAMS = $(bin_PROGRAMS) $(noinst_PROGRAMS)
am__bench_bench_heptafranc_SOURCES_DIST = bench/data/block413567.raw \
	bench/bench_heptafranc.cpp bench/bench.cpp bench/bench.h \
	bench/block_assemble.cpp bench/checkblock.cpp \
	bench/checkqueue.cpp bench/examples.cpp bench/rollingbloom.cpp \
	bench/crypto_hash.cpp bench/ccoins_caching.cpp \
	bench/merkle_root.cpp bench/mempool_eviction.cpp \
	bench/verify_script.cpp bench/base58.cpp bench/bech32.cpp \
	bench/lockedpool.cpp bench/prevector.cpp \
	bench/coin_selection.cpp
#am__objects_20 = bench/bench_bench_heptafranc-coin_selection.$(OBJEXT)
#am_bench_bench_heptafranc_OBJECTS =  \
#	$(am__objects_4) \
#	bench/bench_bench_heptafranc-bench_heptafranc.$(OBJEXT) \
#	bench/bench_bench_heptafranc-bench.$(OBJEXT) \
#	bench/bench_bench_heptafranc-block_assemble.$(OBJEXT) \
#	bench/bench_bench_heptafranc-checkblock.$(OBJEXT) \
#	bench/bench_bench_heptafranc-checkqueue.$(OBJEXT) \
#	bench/bench_bench_heptafranc-examples.$(OBJEXT) \
#	bench/bench_bench_heptafranc-rollingbloom.$(OBJEXT) \
#	bench/bench_bench_heptafranc-crypto_hash.$(OBJEXT) \
#	bench/bench_bench_heptafranc-ccoins_caching.$(OBJEXT) \
#	bench/bench_bench_heptafranc-merkle_root.$(OBJEXT) \
#	bench/bench_bench_heptafranc-mempool_eviction.$(OBJEXT) \
#	bench/bench_bench_heptafranc-verify_script.$(OBJEXT) \
#	bench/bench_bench_heptafranc-base58.$(OBJEXT) \
#	bench/bench_bench_heptafranc-bech32.$(OBJEXT) \
#	bench/bench_bench_heptafranc-lockedpool.$(OBJEXT) \
#	bench/bench_bench_heptafranc-prevector.$(OBJEXT) \
#	$(am__objects_20)
#am__objects_21 = $(am__objects_4)
#nodist_bench_bench_heptafranc_OBJECTS =  \
#	$(am__objects_21)
bench_bench_heptafranc_OBJECTS = $(am_bench_bench_heptafranc_OBJECTS) \
	$(nodist_bench_bench_heptafranc_OBJECTS)
am__DEPENDENCIES_1 = $(am__append_14)
am__DEPENDENCIES_2 = $(am__append_15)
am__DEPENDENCIES_3 =
#am__DEPENDENCIES_4 = $(am__DEPENDENCIES_3)
am__DEPENDENCIES_4 = univalue/libunivalue.la
#am__DEPENDENCIES_5 =  \
#	$(LIBHEPTAFRANC_ZMQ) \
#	$(am__DEPENDENCIES_3)
#bench_bench_heptafranc_DEPENDENCIES =  \
#	$(LIBHEPTAFRANC_WALLET) \
#	$(LIBHEPTAFRANC_SERVER) \
#	$(LIBHEPTAFRANC_COMMON) \
#	$(LIBHEPTAFRANC_UTIL) \
#	$(LIBHEPTAFRANC_CONSENSUS) \
#	$(LIBHEPTAFRANC_CRYPTO) \
#	$(am__DEPENDENCIES_1) $(LIBLEVELDB_SSE42) \
#	$(am__DEPENDENCIES_2) $(LIBSECP256K1) \
#	$(am__DEPENDENCIES_4) $(am__DEPENDENCIES_5) \
#	$(am__DEPENDENCIES_3) $(am__DEPENDENCIES_3) \
#	$(am__DEPENDENCIES_3) $(am__DEPENDENCIES_3) \
#	$(am__DEPENDENCIES_3) $(am__DEPENDENCIES_3) \
#	$(am__DEPENDENCIES_3)
bench_bench_heptafranc_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(bench_bench_heptafranc_CXXFLAGS) $(CXXFLAGS) \
	$(bench_bench_heptafranc_LDFLAGS) $(LDFLAGS) -o $@
am__heptafranc_cli_SOURCES_DIST = heptafranc-cli.cpp \
	heptafranc-cli-res.rc
#am__objects_22 = heptafranc-cli-res.$(OBJEXT)
am_heptafranc_cli_OBJECTS = heptafranc_cli-heptafranc-cli.$(OBJEXT) \
	$(am__objects_22)
heptafranc_cli_OBJECTS = $(am_heptafranc_cli_OBJECTS)
heptafranc_cli_DEPENDENCIES = $(LIBHEPTAFRANC_CLI) \
	$(am__DEPENDENCIES_4) $(LIBHEPTAFRANC_UTIL) \
	$(LIBHEPTAFRANC_CRYPTO) $(am__DEPENDENCIES_3) \
	$(am__DEPENDENCIES_3) $(am__DEPENDENCIES_3) \
	$(am__DEPENDENCIES_3)
heptafranc_cli_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(heptafranc_cli_CXXFLAGS) $(CXXFLAGS) \
	$(heptafranc_cli_LDFLAGS) $(LDFLAGS) -o $@
am__heptafranc_tx_SOURCES_DIST = heptafranc-tx.cpp \
	heptafranc-tx-res.rc
#am__objects_23 = heptafranc-tx-res.$(OBJEXT)
am_heptafranc_tx_OBJECTS = heptafranc_tx-heptafranc-tx.$(OBJEXT) \
	$(am__objects_23)
heptafranc_tx_OBJECTS = $(am_heptafranc_tx_OBJECTS)
heptafranc_tx_DEPENDENCIES = $(am__DEPENDENCIES_4) \
	$(LIBHEPTAFRANC_COMMON) $(LIBHEPTAFRANC_UTIL) \
	$(LIBHEPTAFRANC_CONSENSUS) $(LIBHEPTAFRANC_CRYPTO) \
	$(LIBSECP256K1) $(am__DEPENDENCIES_3) $(am__DEPENDENCIES_3)
heptafranc_tx_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(heptafranc_tx_CXXFLAGS) $(CXXFLAGS) $(heptafranc_tx_LDFLAGS) \
	$(LDFLAGS) -o $@
am__heptafrancd_SOURCES_DIST = heptafrancd.cpp heptafrancd-res.rc
#am__objects_24 = heptafrancd-res.$(OBJEXT)
am_heptafrancd_OBJECTS = heptafrancd-heptafrancd.$(OBJEXT) \
	$(am__objects_24)
heptafrancd_OBJECTS = $(am_heptafrancd_OBJECTS)
heptafrancd_DEPENDENCIES = $(LIBHEPTAFRANC_SERVER) \
	$(LIBHEPTAFRANC_WALLET) $(LIBHEPTAFRANC_COMMON) \
	$(am__DEPENDENCIES_4) $(LIBHEPTAFRANC_UTIL) \
	$(LIBHEPTAFRANC_ZMQ) $(LIBHEPTAFRANC_CONSENSUS) \
	$(LIBHEPTAFRANC_CRYPTO) $(am__DEPENDENCIES_1) \
	$(LIBLEVELDB_SSE42) $(am__DEPENDENCIES_2) $(LIBSECP256K1) \
	$(am__DEPENDENCIES_3) $(am__DEPENDENCIES_3) \
	$(am__DEPENDENCIES_3) $(am__DEPENDENCIES_3) \
	$(am__DEPENDENCIES_3) $(am__DEPENDENCIES_3) \
	$(am__DEPENDENCIES_3) $(am__DEPENDENCIES_3)
heptafrancd_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(heptafrancd_CXXFLAGS) \
	$(CXXFLAGS) $(heptafrancd_LDFLAGS) $(LDFLAGS) -o $@
am__qt_heptafranc_qt_SOURCES_DIST = qt/heptafranc.cpp \
	qt/macdockiconhandler.mm qt/macnotificationhandler.mm \
	qt/res/heptafranc-qt-res.rc
am__objects_25 = qt/qt_heptafranc_qt-macdockiconhandler.$(OBJEXT) \
	qt/qt_heptafranc_qt-macnotificationhandler.$(OBJEXT)
#am__objects_26 =  \
#	$(am__objects_25)
am__objects_27 = qt/res/heptafranc-qt-res.$(OBJEXT)
#am__objects_28 =  \
#	$(am__objects_27)
am_qt_heptafranc_qt_OBJECTS =  \
	qt/qt_heptafranc_qt-heptafranc.$(OBJEXT) \
	$(am__objects_26) $(am__objects_28)
qt_heptafranc_qt_OBJECTS = $(am_qt_heptafranc_qt_OBJECTS)
am__DEPENDENCIES_6 =  \
	$(LIBHEPTAFRANC_ZMQ) \
	$(am__DEPENDENCIES_3)
qt_heptafranc_qt_DEPENDENCIES = qt/libheptafrancqt.a \
	$(LIBHEPTAFRANC_SERVER) $(am__append_40) \
	$(am__DEPENDENCIES_6) $(LIBHEPTAFRANC_CLI) \
	$(LIBHEPTAFRANC_COMMON) $(LIBHEPTAFRANC_UTIL) \
	$(LIBHEPTAFRANC_CONSENSUS) \
	$(LIBHEPTAFRANC_CRYPTO) $(am__DEPENDENCIES_4) \
	$(am__DEPENDENCIES_1) $(LIBLEVELDB_SSE42) \
	$(am__DEPENDENCIES_2) $(am__DEPENDENCIES_3) \
	$(am__DEPENDENCIES_3) $(am__DEPENDENCIES_3) \
	$(am__DEPENDENCIES_3) $(am__DEPENDENCIES_3) \
	$(am__DEPENDENCIES_3) $(am__DEPENDENCIES_3) \
	$(am__DEPENDENCIES_3) $(am__DEPENDENCIES_3) \
	$(LIBSECP256K1) $(am__DEPENDENCIES_3) \
	$(am__DEPENDENCIES_3)
qt_heptafranc_qt_LINK = $(LIBTOOL) $(AM_V_lt) \
	$(qt_heptafranc_qt_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link \
	$(OBJCXXLD) $(AM_OBJCXXFLAGS) $(OBJCXXFLAGS) \
	$(qt_heptafranc_qt_LDFLAGS) $(LDFLAGS) -o $@
am__qt_test_test_heptafranc_qt_SOURCES_DIST = qt/test/compattests.cpp \
	qt/test/rpcnestedtests.cpp qt/test/test_main.cpp \
	qt/test/uritests.cpp qt/test/util.cpp \
	qt/test/addressbooktests.h qt/test/compattests.h \
	qt/test/rpcnestedtests.h qt/test/uritests.h qt/test/util.h \
	qt/test/paymentrequestdata.h qt/test/paymentservertests.h \
	qt/test/wallettests.h test/test_heptafranc.cpp \
	test/test_heptafranc.h qt/test/addressbooktests.cpp \
	qt/test/paymentservertests.cpp qt/test/wallettests.cpp \
	wallet/test/wallet_test_fixture.cpp
#am__objects_29 = test/qt_test_test_heptafranc_qt-test_heptafranc.$(OBJEXT)
#am__objects_30 = qt/test/qt_test_test_heptafranc_qt-addressbooktests.$(OBJEXT) \
#	qt/test/qt_test_test_heptafranc_qt-paymentservertests.$(OBJEXT) \
#	qt/test/qt_test_test_heptafranc_qt-wallettests.$(OBJEXT) \
#	wallet/test/qt_test_test_heptafranc_qt-wallet_test_fixture.$(OBJEXT)
#am_qt_test_test_heptafranc_qt_OBJECTS = qt/test/qt_test_test_heptafranc_qt-compattests.$(OBJEXT) \
#	qt/test/qt_test_test_heptafranc_qt-rpcnestedtests.$(OBJEXT) \
#	qt/test/qt_test_test_heptafranc_qt-test_main.$(OBJEXT) \
#	qt/test/qt_test_test_heptafranc_qt-uritests.$(OBJEXT) \
#	qt/test/qt_test_test_heptafranc_qt-util.$(OBJEXT) \
#	$(am__objects_4) $(am__objects_29) \
#	$(am__objects_4) $(am__objects_30)
#am__objects_31 = qt/test/qt_test_test_heptafranc_qt-moc_addressbooktests.$(OBJEXT) \
#	qt/test/qt_test_test_heptafranc_qt-moc_paymentservertests.$(OBJEXT) \
#	qt/test/qt_test_test_heptafranc_qt-moc_wallettests.$(OBJEXT)
#am__objects_32 = qt/test/qt_test_test_heptafranc_qt-moc_compattests.$(OBJEXT) \
#	qt/test/qt_test_test_heptafranc_qt-moc_rpcnestedtests.$(OBJEXT) \
#	qt/test/qt_test_test_heptafranc_qt-moc_uritests.$(OBJEXT) \
#	$(am__objects_31)
#nodist_qt_test_test_heptafranc_qt_OBJECTS =  \
#	$(am__objects_32)
qt_test_test_heptafranc_qt_OBJECTS =  \
	$(am_qt_test_test_heptafranc_qt_OBJECTS) \
	$(nodist_qt_test_test_heptafranc_qt_OBJECTS)
#am__DEPENDENCIES_7 =  \
#	$(LIBHEPTAFRANC_ZMQ) \
#	$(am__DEPENDENCIES_3)
#qt_test_test_heptafranc_qt_DEPENDENCIES =  \
#	$(LIBHEPTAFRANCQT) \
#	$(LIBHEPTAFRANC_SERVER) $(am__append_47) \
#	$(am__DEPENDENCIES_7) \
#	$(LIBHEPTAFRANC_CLI) \
#	$(LIBHEPTAFRANC_COMMON) \
#	$(LIBHEPTAFRANC_UTIL) \
#	$(LIBHEPTAFRANC_CONSENSUS) \
#	$(LIBHEPTAFRANC_CRYPTO) \
#	$(am__DEPENDENCIES_4) \
#	$(am__DEPENDENCIES_1) \
#	$(LIBLEVELDB_SSE42) \
#	$(am__DEPENDENCIES_2) \
#	$(am__DEPENDENCIES_3) \
#	$(am__DEPENDENCIES_3) \
#	$(am__DEPENDENCIES_3) \
#	$(am__DEPENDENCIES_3) \
#	$(am__DEPENDENCIES_3) \
#	$(am__DEPENDENCIES_3) \
#	$(am__DEPENDENCIES_3) \
#	$(am__DEPENDENCIES_3) \
#	$(am__DEPENDENCIES_3) \
#	$(am__DEPENDENCIES_3) $(LIBSECP256K1) \
#	$(am__DEPENDENCIES_3) \
#	$(am__DEPENDENCIES_3)
qt_test_test_heptafranc_qt_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(qt_test_test_heptafranc_qt_CXXFLAGS) $(CXXFLAGS) \
	$(qt_test_test_heptafranc_qt_LDFLAGS) $(LDFLAGS) -o $@
am__test_test_heptafranc_SOURCES_DIST = test/test_heptafranc_main.cpp \
	test/test_heptafranc.h test/test_heptafranc.cpp \
	wallet/test/wallet_test_fixture.cpp \
	wallet/test/wallet_test_fixture.h test/arith_uint256_tests.cpp \
	test/scriptnum10.h test/addrman_tests.cpp \
	test/amount_tests.cpp test/allocator_tests.cpp \
	test/base32_tests.cpp test/base58_tests.cpp \
	test/base64_tests.cpp test/bech32_tests.cpp \
	test/bip32_tests.cpp test/blockchain_tests.cpp \
	test/blockencodings_tests.cpp test/bloom_tests.cpp \
	test/bswap_tests.cpp test/checkqueue_tests.cpp \
	test/coins_tests.cpp test/compress_tests.cpp \
	test/crypto_tests.cpp test/cuckoocache_tests.cpp \
	test/denialofservice_tests.cpp test/descriptor_tests.cpp \
	test/getarg_tests.cpp test/hash_tests.cpp \
	test/key_io_tests.cpp test/key_tests.cpp \
	test/limitedmap_tests.cpp test/dbwrapper_tests.cpp \
	test/main_tests.cpp test/mempool_tests.cpp \
	test/merkle_tests.cpp test/merkleblock_tests.cpp \
	test/miner_tests.cpp test/multisig_tests.cpp \
	test/net_tests.cpp test/netbase_tests.cpp test/pmt_tests.cpp \
	test/policyestimator_tests.cpp test/pow_tests.cpp \
	test/prevector_tests.cpp test/raii_event_tests.cpp \
	test/random_tests.cpp test/reverselock_tests.cpp \
	test/rpc_tests.cpp test/sanity_tests.cpp \
	test/scheduler_tests.cpp test/script_p2sh_tests.cpp \
	test/script_tests.cpp test/script_standard_tests.cpp \
	test/scriptnum_tests.cpp test/serialize_tests.cpp \
	test/sighash_tests.cpp test/sigopcount_tests.cpp \
	test/skiplist_tests.cpp test/streams_tests.cpp \
	test/timedata_tests.cpp test/torcontrol_tests.cpp \
	test/transaction_tests.cpp test/txindex_tests.cpp \
	test/txvalidation_tests.cpp test/txvalidationcache_tests.cpp \
	test/uint256_tests.cpp test/util_tests.cpp \
	test/validation_block_tests.cpp test/versionbits_tests.cpp \
	wallet/test/accounting_tests.cpp \
	wallet/test/psbt_wallet_tests.cpp wallet/test/wallet_tests.cpp \
	wallet/test/wallet_crypto_tests.cpp \
	wallet/test/coinselector_tests.cpp \
	test/data/base58_encode_decode.json \
	test/data/key_io_valid.json test/data/key_io_invalid.json \
	test/data/script_tests.json test/data/sighash.json \
	test/data/tx_invalid.json test/data/tx_valid.json
#am__objects_33 = wallet/test/test_test_heptafranc-wallet_test_fixture.$(OBJEXT)
#am__objects_34 = test/test_test_heptafranc-test_heptafranc_main.$(OBJEXT) \
#	test/test_test_heptafranc-test_heptafranc.$(OBJEXT) \
#	$(am__objects_33)
#am__objects_35 = wallet/test/test_test_heptafranc-accounting_tests.$(OBJEXT) \
#	wallet/test/test_test_heptafranc-psbt_wallet_tests.$(OBJEXT) \
#	wallet/test/test_test_heptafranc-wallet_tests.$(OBJEXT) \
#	wallet/test/test_test_heptafranc-wallet_crypto_tests.$(OBJEXT) \
#	wallet/test/test_test_heptafranc-coinselector_tests.$(OBJEXT)
#am__objects_36 = test/test_test_heptafranc-arith_uint256_tests.$(OBJEXT) \
#	test/test_test_heptafranc-addrman_tests.$(OBJEXT) \
#	test/test_test_heptafranc-amount_tests.$(OBJEXT) \
#	test/test_test_heptafranc-allocator_tests.$(OBJEXT) \
#	test/test_test_heptafranc-base32_tests.$(OBJEXT) \
#	test/test_test_heptafranc-base58_tests.$(OBJEXT) \
#	test/test_test_heptafranc-base64_tests.$(OBJEXT) \
#	test/test_test_heptafranc-bech32_tests.$(OBJEXT) \
#	test/test_test_heptafranc-bip32_tests.$(OBJEXT) \
#	test/test_test_heptafranc-blockchain_tests.$(OBJEXT) \
#	test/test_test_heptafranc-blockencodings_tests.$(OBJEXT) \
#	test/test_test_heptafranc-bloom_tests.$(OBJEXT) \
#	test/test_test_heptafranc-bswap_tests.$(OBJEXT) \
#	test/test_test_heptafranc-checkqueue_tests.$(OBJEXT) \
#	test/test_test_heptafranc-coins_tests.$(OBJEXT) \
#	test/test_test_heptafranc-compress_tests.$(OBJEXT) \
#	test/test_test_heptafranc-crypto_tests.$(OBJEXT) \
#	test/test_test_heptafranc-cuckoocache_tests.$(OBJEXT) \
#	test/test_test_heptafranc-denialofservice_tests.$(OBJEXT) \
#	test/test_test_heptafranc-descriptor_tests.$(OBJEXT) \
#	test/test_test_heptafranc-getarg_tests.$(OBJEXT) \
#	test/test_test_heptafranc-hash_tests.$(OBJEXT) \
#	test/test_test_heptafranc-key_io_tests.$(OBJEXT) \
#	test/test_test_heptafranc-key_tests.$(OBJEXT) \
#	test/test_test_heptafranc-limitedmap_tests.$(OBJEXT) \
#	test/test_test_heptafranc-dbwrapper_tests.$(OBJEXT) \
#	test/test_test_heptafranc-main_tests.$(OBJEXT) \
#	test/test_test_heptafranc-mempool_tests.$(OBJEXT) \
#	test/test_test_heptafranc-merkle_tests.$(OBJEXT) \
#	test/test_test_heptafranc-merkleblock_tests.$(OBJEXT) \
#	test/test_test_heptafranc-miner_tests.$(OBJEXT) \
#	test/test_test_heptafranc-multisig_tests.$(OBJEXT) \
#	test/test_test_heptafranc-net_tests.$(OBJEXT) \
#	test/test_test_heptafranc-netbase_tests.$(OBJEXT) \
#	test/test_test_heptafranc-pmt_tests.$(OBJEXT) \
#	test/test_test_heptafranc-policyestimator_tests.$(OBJEXT) \
#	test/test_test_heptafranc-pow_tests.$(OBJEXT) \
#	test/test_test_heptafranc-prevector_tests.$(OBJEXT) \
#	test/test_test_heptafranc-raii_event_tests.$(OBJEXT) \
#	test/test_test_heptafranc-random_tests.$(OBJEXT) \
#	test/test_test_heptafranc-reverselock_tests.$(OBJEXT) \
#	test/test_test_heptafranc-rpc_tests.$(OBJEXT) \
#	test/test_test_heptafranc-sanity_tests.$(OBJEXT) \
#	test/test_test_heptafranc-scheduler_tests.$(OBJEXT) \
#	test/test_test_heptafranc-script_p2sh_tests.$(OBJEXT) \
#	test/test_test_heptafranc-script_tests.$(OBJEXT) \
#	test/test_test_heptafranc-script_standard_tests.$(OBJEXT) \
#	test/test_test_heptafranc-scriptnum_tests.$(OBJEXT) \
#	test/test_test_heptafranc-serialize_tests.$(OBJEXT) \
#	test/test_test_heptafranc-sighash_tests.$(OBJEXT) \
#	test/test_test_heptafranc-sigopcount_tests.$(OBJEXT) \
#	test/test_test_heptafranc-skiplist_tests.$(OBJEXT) \
#	test/test_test_heptafranc-streams_tests.$(OBJEXT) \
#	test/test_test_heptafranc-timedata_tests.$(OBJEXT) \
#	test/test_test_heptafranc-torcontrol_tests.$(OBJEXT) \
#	test/test_test_heptafranc-transaction_tests.$(OBJEXT) \
#	test/test_test_heptafranc-txindex_tests.$(OBJEXT) \
#	test/test_test_heptafranc-txvalidation_tests.$(OBJEXT) \
#	test/test_test_heptafranc-txvalidationcache_tests.$(OBJEXT) \
#	test/test_test_heptafranc-uint256_tests.$(OBJEXT) \
#	test/test_test_heptafranc-util_tests.$(OBJEXT) \
#	test/test_test_heptafranc-validation_block_tests.$(OBJEXT) \
#	test/test_test_heptafranc-versionbits_tests.$(OBJEXT) \
#	$(am__objects_35)
#am_test_test_heptafranc_OBJECTS =  \
#	$(am__objects_34) $(am__objects_36) \
#	$(am__objects_4) $(am__objects_4)
#am__objects_37 = $(am__objects_4) $(am__objects_4)
#nodist_test_test_heptafranc_OBJECTS =  \
#	$(am__objects_37)
test_test_heptafranc_OBJECTS = $(am_test_test_heptafranc_OBJECTS) \
	$(nodist_test_test_heptafranc_OBJECTS)
#am__DEPENDENCIES_8 =  \
#	$(am__DEPENDENCIES_3)
#test_test_heptafranc_DEPENDENCIES =  \
#	$(am__append_27) $(LIBHEPTAFRANC_SERVER) \
#	$(LIBHEPTAFRANC_CLI) \
#	$(LIBHEPTAFRANC_COMMON) \
#	$(LIBHEPTAFRANC_UTIL) \
#	$(LIBHEPTAFRANC_CONSENSUS) \
#	$(LIBHEPTAFRANC_CRYPTO) \
#	$(am__DEPENDENCIES_4) $(am__DEPENDENCIES_1) \
#	$(LIBLEVELDB_SSE42) $(am__DEPENDENCIES_2) \
#	$(am__DEPENDENCIES_3) $(am__DEPENDENCIES_3) \
#	$(LIBSECP256K1) $(am__DEPENDENCIES_3) \
#	$(am__DEPENDENCIES_3) \
#	$(LIBHEPTAFRANC_CONSENSUS) \
#	$(am__DEPENDENCIES_3) $(am__DEPENDENCIES_3) \
#	$(am__DEPENDENCIES_3) $(am__DEPENDENCIES_3) \
#	$(am__DEPENDENCIES_8)
test_test_heptafranc_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) \
	$(test_test_heptafranc_LDFLAGS) $(LDFLAGS) -o $@
am__test_test_heptafranc_fuzzy_SOURCES_DIST =  \
	test/test_heptafranc_fuzzy.cpp
#am_test_test_heptafranc_fuzzy_OBJECTS = test/test_test_heptafranc_fuzzy-test_heptafranc_fuzzy.$(OBJEXT)
test_test_heptafranc_fuzzy_OBJECTS =  \
	$(am_test_test_heptafranc_fuzzy_OBJECTS)
#test_test_heptafranc_fuzzy_DEPENDENCIES =  \
#	$(am__DEPENDENCIES_4) \
#	$(LIBHEPTAFRANC_SERVER) \
#	$(LIBHEPTAFRANC_COMMON) \
#	$(LIBHEPTAFRANC_UTIL) \
#	$(LIBHEPTAFRANC_CONSENSUS) \
#	$(LIBHEPTAFRANC_CRYPTO) \
#	$(LIBHEPTAFRANC_CRYPTO_SSE41) \
#	$(LIBHEPTAFRANC_CRYPTO_AVX2) \
#	$(LIBHEPTAFRANC_CRYPTO_SHANI) \
#	$(LIBSECP256K1) $(am__DEPENDENCIES_3) \
#	$(am__DEPENDENCIES_3)
test_test_heptafranc_fuzzy_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(test_test_heptafranc_fuzzy_CXXFLAGS) $(CXXFLAGS) \
	$(test_test_heptafranc_fuzzy_LDFLAGS) $(LDFLAGS) -o $@
AM_V_P = $(am__v_P_$(V))
am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I. -I$(top_builddir)/src/config
depcomp = $(SHELL) $(top_srcdir)/build-aux/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS)
AM_V_CXX = $(am__v_CXX_$(V))
am__v_CXX_ = $(am__v_CXX_$(AM_DEFAULT_VERBOSITY))
am__v_CXX_0 = @echo "  CXX     " $@;
am__v_CXX_1 = 
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CXXLD = $(am__v_CXXLD_$(V))
am__v_CXXLD_ = $(am__v_CXXLD_$(AM_DEFAULT_VERBOSITY))
am__v_CXXLD_0 = @echo "  CXXLD   " $@;
am__v_CXXLD_1 = 
OBJCXXCOMPILE = $(OBJCXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_OBJCXXFLAGS) $(OBJCXXFLAGS)
LTOBJCXXCOMPILE = $(LIBTOOL) $(AM_V_lt) $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(OBJCXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_OBJCXXFLAGS) $(OBJCXXFLAGS)
AM_V_OBJCXX = $(am__v_OBJCXX_$(V))
am__v_OBJCXX_ = $(am__v_OBJCXX_$(AM_DEFAULT_VERBOSITY))
am__v_OBJCXX_0 = @echo "  OBJCXX  " $@;
am__v_OBJCXX_1 = 
OBJCXXLD = $(OBJCXX)
OBJCXXLINK = $(LIBTOOL) $(AM_V_lt) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(OBJCXXLD) $(AM_OBJCXXFLAGS) $(OBJCXXFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_OBJCXXLD = $(am__v_OBJCXXLD_$(V))
am__v_OBJCXXLD_ = $(am__v_OBJCXXLD_$(AM_DEFAULT_VERBOSITY))
am__v_OBJCXXLD_0 = @echo "  OBJCXXLD" $@;
am__v_OBJCXXLD_1 = 
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_$(V))
am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_$(V))
am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
SOURCES = $(crypto_libheptafranc_crypto_avx2_a_SOURCES) \
	$(crypto_libheptafranc_crypto_base_a_SOURCES) \
	$(crypto_libheptafranc_crypto_shani_a_SOURCES) \
	$(crypto_libheptafranc_crypto_sse41_a_SOURCES) \
	$(leveldb_libleveldb_a_SOURCES) \
	$(leveldb_libleveldb_sse42_a_SOURCES) \
	$(leveldb_libmemenv_a_SOURCES) $(libheptafranc_cli_a_SOURCES) \
	$(libheptafranc_common_a_SOURCES) \
	$(libheptafranc_consensus_a_SOURCES) \
	$(libheptafranc_server_a_SOURCES) \
	$(libheptafranc_util_a_SOURCES) \
	$(nodist_libheptafranc_util_a_SOURCES) \
	$(libheptafranc_wallet_a_SOURCES) \
	$(libheptafranc_zmq_a_SOURCES) $(qt_libheptafrancqt_a_SOURCES) \
	$(nodist_qt_libheptafrancqt_a_SOURCES) \
	$(libheptafrancconsensus_la_SOURCES) \
	$(bench_bench_heptafranc_SOURCES) \
	$(nodist_bench_bench_heptafranc_SOURCES) \
	$(heptafranc_cli_SOURCES) $(heptafranc_tx_SOURCES) \
	$(heptafrancd_SOURCES) $(qt_heptafranc_qt_SOURCES) \
	$(qt_test_test_heptafranc_qt_SOURCES) \
	$(nodist_qt_test_test_heptafranc_qt_SOURCES) \
	$(test_test_heptafranc_SOURCES) \
	$(nodist_test_test_heptafranc_SOURCES) \
	$(test_test_heptafranc_fuzzy_SOURCES)
DIST_SOURCES = $(crypto_libheptafranc_crypto_avx2_a_SOURCES) \
	$(am__crypto_libheptafranc_crypto_base_a_SOURCES_DIST) \
	$(crypto_libheptafranc_crypto_shani_a_SOURCES) \
	$(crypto_libheptafranc_crypto_sse41_a_SOURCES) \
	$(am__leveldb_libleveldb_a_SOURCES_DIST) \
	$(am__leveldb_libleveldb_sse42_a_SOURCES_DIST) \
	$(am__leveldb_libmemenv_a_SOURCES_DIST) \
	$(libheptafranc_cli_a_SOURCES) \
	$(libheptafranc_common_a_SOURCES) \
	$(libheptafranc_consensus_a_SOURCES) \
	$(libheptafranc_server_a_SOURCES) \
	$(am__libheptafranc_util_a_SOURCES_DIST) \
	$(libheptafranc_wallet_a_SOURCES) \
	$(am__libheptafranc_zmq_a_SOURCES_DIST) \
	$(am__qt_libheptafrancqt_a_SOURCES_DIST) \
	$(am__libheptafrancconsensus_la_SOURCES_DIST) \
	$(am__bench_bench_heptafranc_SOURCES_DIST) \
	$(am__heptafranc_cli_SOURCES_DIST) \
	$(am__heptafranc_tx_SOURCES_DIST) \
	$(am__heptafrancd_SOURCES_DIST) \
	$(am__qt_heptafranc_qt_SOURCES_DIST) \
	$(am__qt_test_test_heptafranc_qt_SOURCES_DIST) \
	$(am__test_test_heptafranc_SOURCES_DIST) \
	$(am__test_test_heptafranc_fuzzy_SOURCES_DIST)
RECURSIVE_TARGETS = all-recursive check-recursive cscopelist-recursive \
	ctags-recursive dvi-recursive html-recursive info-recursive \
	install-data-recursive install-dvi-recursive \
	install-exec-recursive install-html-recursive \
	install-info-recursive install-pdf-recursive \
	install-ps-recursive install-recursive installcheck-recursive \
	installdirs-recursive pdf-recursive ps-recursive \
	tags-recursive uninstall-recursive
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
am__include_HEADERS_DIST = script/heptafrancconsensus.h
HEADERS = $(include_HEADERS)
RECURSIVE_CLEAN_TARGETS = mostlyclean-recursive clean-recursive	\
  distclean-recursive maintainer-clean-recursive
am__recursive_targets = \
  $(RECURSIVE_TARGETS) \
  $(RECURSIVE_CLEAN_TARGETS) \
  $(am__extra_recursive_targets)
AM_RECURSIVE_TARGETS = $(am__recursive_targets:-recursive=) TAGS CTAGS \
	check recheck distdir
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
am__tty_colors_dummy = \
  mgn= red= grn= lgn= blu= brg= std=; \
  am__color_tests=no
am__tty_colors = { \
  $(am__tty_colors_dummy); \
  if test "X$(AM_COLOR_TESTS)" = Xno; then \
    am__color_tests=no; \
  elif test "X$(AM_COLOR_TESTS)" = Xalways; then \
    am__color_tests=yes; \
  elif test "X$$TERM" != Xdumb && { test -t 1; } 2>/dev/null; then \
    am__color_tests=yes; \
  fi; \
  if test $$am__color_tests = yes; then \
    red='[0;31m'; \
    grn='[0;32m'; \
    lgn='[1;32m'; \
    blu='[1;34m'; \
    mgn='[0;35m'; \
    brg='[1m'; \
    std='[m'; \
  fi; \
}
am__recheck_rx = ^[ 	]*:recheck:[ 	]*
am__global_test_result_rx = ^[ 	]*:global-test-result:[ 	]*
am__copy_in_global_log_rx = ^[ 	]*:copy-in-global-log:[ 	]*
# A command that, given a newline-separated list of test names on the
# standard input, print the name of the tests that are to be re-run
# upon "make recheck".
am__list_recheck_tests = $(AWK) '{ \
  recheck = 1; \
  while ((rc = (getline line < ($$0 ".trs"))) != 0) \
    { \
      if (rc < 0) \
        { \
          if ((getline line2 < ($$0 ".log")) < 0) \
	    recheck = 0; \
          break; \
        } \
      else if (line ~ /$(am__recheck_rx)[nN][Oo]/) \
        { \
          recheck = 0; \
          break; \
        } \
      else if (line ~ /$(am__recheck_rx)[yY][eE][sS]/) \
        { \
          break; \
        } \
    }; \
  if (recheck) \
    print $$0; \
  close ($$0 ".trs"); \
  close ($$0 ".log"); \
}'
# A command that, given a newline-separated list of test names on the
# standard input, create the global log from their .trs and .log files.
am__create_global_log = $(AWK) ' \
function fatal(msg) \
{ \
  print "fatal: making $@: " msg | "cat >&2"; \
  exit 1; \
} \
function rst_section(header) \
{ \
  print header; \
  len = length(header); \
  for (i = 1; i <= len; i = i + 1) \
    printf "="; \
  printf "\n\n"; \
} \
{ \
  copy_in_global_log = 1; \
  global_test_result = "RUN"; \
  while ((rc = (getline line < ($$0 ".trs"))) != 0) \
    { \
      if (rc < 0) \
         fatal("failed to read from " $$0 ".trs"); \
      if (line ~ /$(am__global_test_result_rx)/) \
        { \
          sub("$(am__global_test_result_rx)", "", line); \
          sub("[ 	]*$$", "", line); \
          global_test_result = line; \
        } \
      else if (line ~ /$(am__copy_in_global_log_rx)[nN][oO]/) \
        copy_in_global_log = 0; \
    }; \
  if (copy_in_global_log) \
    { \
      rst_section(global_test_result ": " $$0); \
      while ((rc = (getline line < ($$0 ".log"))) != 0) \
      { \
        if (rc < 0) \
          fatal("failed to read from " $$0 ".log"); \
        print line; \
      }; \
      printf "\n"; \
    }; \
  close ($$0 ".trs"); \
  close ($$0 ".log"); \
}'
# Restructured Text title.
am__rst_title = { sed 's/.*/   &   /;h;s/./=/g;p;x;s/ *$$//;p;g' && echo; }
# Solaris 10 'make', and several other traditional 'make' implementations,
# pass "-e" to $(SHELL), and POSIX 2008 even requires this.  Work around it
# by disabling -e (using the XSI extension "set +e") if it's set.
am__sh_e_setup = case $$- in *e*) set +e;; esac
# Default flags passed to test drivers.
am__common_driver_flags = \
  --color-tests "$$am__color_tests" \
  --enable-hard-errors "$$am__enable_hard_errors" \
  --expect-failure "$$am__expect_failure"
# To be inserted before the command running the test.  Creates the
# directory for the log if needed.  Stores in $dir the directory
# containing $f, in $tst the test, in $log the log.  Executes the
# developer- defined test setup AM_TESTS_ENVIRONMENT (if any), and
# passes TESTS_ENVIRONMENT.  Set up options for the wrapper that
# will run the test scripts (or their associated LOG_COMPILER, if
# thy have one).
am__check_pre = \
$(am__sh_e_setup);					\
$(am__vpath_adj_setup) $(am__vpath_adj)			\
$(am__tty_colors);					\
srcdir=$(srcdir); export srcdir;			\
case "$@" in						\
  */*) am__odir=`echo "./$@" | sed 's|/[^/]*$$||'`;;	\
    *) am__odir=.;; 					\
esac;							\
test "x$$am__odir" = x"." || test -d "$$am__odir" 	\
  || $(MKDIR_P) "$$am__odir" || exit $$?;		\
if test -f "./$$f"; then dir=./;			\
elif test -f "$$f"; then dir=;				\
else dir="$(srcdir)/"; fi;				\
tst=$$dir$$f; log='$@'; 				\
if test -n '$(DISABLE_HARD_ERRORS)'; then		\
  am__enable_hard_errors=no; 				\
else							\
  am__enable_hard_errors=yes; 				\
fi; 							\
case " $(XFAIL_TESTS) " in				\
  *[\ \	]$$f[\ \	]* | *[\ \	]$$dir$$f[\ \	]*) \
    am__expect_failure=yes;;				\
  *)							\
    am__expect_failure=no;;				\
esac; 							\
$(AM_TESTS_ENVIRONMENT) $(TESTS_ENVIRONMENT)
# A shell command to get the names of the tests scripts with any registered
# extension removed (i.e., equivalently, the names of the test logs, with
# the '.log' extension removed).  The result is saved in the shell variable
# '$bases'.  This honors runtime overriding of TESTS and TEST_LOGS.  Sadly,
# we cannot use something simpler, involving e.g., "$(TEST_LOGS:.log=)",
# since that might cause problem with VPATH rewrites for suffix-less tests.
# See also 'test-harness-vpath-rewrite.sh' and 'test-trs-basic.sh'.
am__set_TESTS_bases = \
  bases='$(TEST_LOGS)'; \
  bases=`for i in $$bases; do echo $$i; done | sed 's/\.log$$//'`; \
  bases=`echo $$bases`
RECHECK_LOGS = $(TEST_LOGS)
TEST_SUITE_LOG = test-suite.log
TEST_EXTENSIONS =  .test
LOG_DRIVER = $(SHELL) $(top_srcdir)/build-aux/test-driver
LOG_COMPILE = $(LOG_COMPILER) $(AM_LOG_FLAGS) $(LOG_FLAGS)
am__set_b = \
  case '$@' in \
    */*) \
      case '$*' in \
        */*) b='$*';; \
          *) b=`echo '$@' | sed 's/\.log$$//'`; \
       esac;; \
    *) \
      b='$*';; \
  esac
am__test_logs1 = $(TESTS:=.log)
am__test_logs2 = $(am__test_logs1:.log=.log)
TEST_LOGS = $(am__test_logs2:.test.log=.log)
TEST_LOG_DRIVER = $(SHELL) $(top_srcdir)/build-aux/test-driver
TEST_LOG_COMPILE = $(TEST_LOG_COMPILER) $(AM_TEST_LOG_FLAGS) \
	$(TEST_LOG_FLAGS)
am__DIST_COMMON = $(srcdir)/Makefile.bench.include \
	$(srcdir)/Makefile.in $(srcdir)/Makefile.leveldb.include \
	$(srcdir)/Makefile.qt.include \
	$(srcdir)/Makefile.qttest.include \
	$(srcdir)/Makefile.test.include \
	$(top_srcdir)/build-aux/depcomp \
	$(top_srcdir)/build-aux/test-driver
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
am__relativize = \
  dir0=`pwd`; \
  sed_first='s,^\([^/]*\)/.*$$,\1,'; \
  sed_rest='s,^[^/]*/*,,'; \
  sed_last='s,^.*/\([^/]*\)$$,\1,'; \
  sed_butlast='s,/*[^/]*$$,,'; \
  while test -n "$$dir1"; do \
    first=`echo "$$dir1" | sed -e "$$sed_first"`; \
    if test "$$first" != "."; then \
      if test "$$first" = ".."; then \
        dir2=`echo "$$dir0" | sed -e "$$sed_last"`/"$$dir2"; \
        dir0=`echo "$$dir0" | sed -e "$$sed_butlast"`; \
      else \
        first2=`echo "$$dir2" | sed -e "$$sed_first"`; \
        if test "$$first2" = "$$first"; then \
          dir2=`echo "$$dir2" | sed -e "$$sed_rest"`; \
        else \
          dir2="../$$dir2"; \
        fi; \
        dir0="$$dir0"/"$$first"; \
      fi; \
    fi; \
    dir1=`echo "$$dir1" | sed -e "$$sed_rest"`; \
  done; \
  reldir="$$dir2"
ACLOCAL = ${SHELL} /tmp/custom-compile/heptafranc-source/build-aux/missing aclocal-1.15
AMTAR = $${TAR-tar}
AM_DEFAULT_VERBOSITY = 0
AR = /usr/bin/ar
ARFLAGS = cr
AUTOCONF = ${SHELL} /tmp/custom-compile/heptafranc-source/build-aux/missing autoconf
AUTOHEADER = ${SHELL} /tmp/custom-compile/heptafranc-source/build-aux/missing autoheader
AUTOMAKE = ${SHELL} /tmp/custom-compile/heptafranc-source/build-aux/missing automake-1.15
AVX2_CXXFLAGS = -mavx -mavx2
AWK = gawk
BDB_CFLAGS = 
BDB_CPPFLAGS = 
BDB_LIBS = -ldb_cxx-4.8
BOOST_CHRONO_LIB = -lboost_chrono
BOOST_CPPFLAGS = -DBOOST_SP_USE_STD_ATOMIC -DBOOST_AC_USE_STD_ATOMIC -pthread -I/usr/include
BOOST_FILESYSTEM_LIB = -lboost_filesystem
BOOST_LDFLAGS = -L/usr/lib/x86_64-linux-gnu
BOOST_LIBS = -L/usr/lib/x86_64-linux-gnu -lboost_system -lboost_filesystem -lboost_thread -lboost_chrono
BOOST_SYSTEM_LIB = -lboost_system
BOOST_THREAD_LIB = -lboost_thread
BOOST_UNIT_TEST_FRAMEWORK_LIB = 
BREW = 
CC = gcc
CCACHE = 
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2
CLIENT_VERSION_BUILD = 0
CLIENT_VERSION_IS_RELEASE = true
CLIENT_VERSION_MAJOR = 1
CLIENT_VERSION_MINOR = 0
CLIENT_VERSION_REVISION = 0
COMPAT_LDFLAGS = 
COPYRIGHT_HOLDERS = The %s developers
COPYRIGHT_HOLDERS_FINAL = The HeptaFranc Core developers
COPYRIGHT_HOLDERS_SUBSTITUTION = HeptaFranc Core
COPYRIGHT_YEAR = 2019
CPP = gcc -E
CPPFILT = /usr/bin/c++filt
CPPFLAGS =  -DHAVE_BUILD_INFO -D__STDC_FORMAT_MACROS
CRYPTO_CFLAGS = 
CRYPTO_LIBS = -lcrypto
CXX = g++ -std=c++11
CXXCPP = g++ -std=c++11 -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -g -O2
CYGPATH_W = echo
DEBUG_CPPFLAGS = 
DEBUG_CXXFLAGS = 
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DLLTOOL = false
DOXYGEN = /usr/bin/doxygen
DSYMUTIL = 
DUMPBIN = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
ERROR_CXXFLAGS = 
EVENT_CFLAGS = 
EVENT_LIBS = -levent
EVENT_PTHREADS_CFLAGS = -pthread
EVENT_PTHREADS_LIBS = -levent_pthreads -levent
EXEEXT = 
EXTENDED_FUNCTIONAL_TESTS = 
FGREP = /bin/grep -F
GCOV = /usr/bin/gcov
GENHTML = 
GENISOIMAGE = 
GIT = /usr/bin/git
GPROF_CXXFLAGS = 
GPROF_LDFLAGS = 
GREP = /bin/grep
HARDENED_CPPFLAGS =  -U_FORTIFY_SOURCE -D_FORTIFY_SOURCE=2
HARDENED_CXXFLAGS =  -Wstack-protector -fstack-protector-all
HARDENED_LDFLAGS =  -Wl,-z,relro -Wl,-z,now -pie
HAVE_CXX11 = 1
HEPTAFRANC_CLI_NAME = heptafranc-cli
HEPTAFRANC_DAEMON_NAME = heptafrancd
HEPTAFRANC_GUI_NAME = heptafranc-qt
HEPTAFRANC_TX_NAME = heptafranc-tx
HEXDUMP = /usr/bin/hexdump
IMAGEMAGICK_CONVERT = 
INSTALL = /usr/bin/install -c
INSTALLNAMETOOL = 
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LCOV = 
LCOV_OPTS = 
LD = /usr/bin/ld -m elf_x86_64
LDFLAGS = 
LEVELDB_CPPFLAGS =  $(am__append_16)
LEVELDB_TARGET_FLAGS = -DOS_LINUX
LIBLEVELDB =  $(am__append_14)
LIBMEMENV =  $(am__append_15)
LIBOBJS = 
LIBS = 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIBTOOL_APP_LDFLAGS = 
LIPO = 
LN_S = ln -s
LRELEASE = /usr/lib/qt5/bin/lrelease
LTLIBOBJS = 
LT_SYS_LIBRARY_PATH = 
LUPDATE = /usr/lib/qt5/bin/lupdate
MAINT = 
MAKEINFO = ${SHELL} /tmp/custom-compile/heptafranc-source/build-aux/missing makeinfo
MAKENSIS = 
MANIFEST_TOOL = :
MINIUPNPC_CPPFLAGS = 
MINIUPNPC_LIBS = -lminiupnpc
MKDIR_P = /bin/mkdir -p
MOC = /usr/lib/qt5/bin/moc
MOC_DEFS = -DHAVE_CONFIG_H -I$(srcdir)
NM = /usr/bin/nm -B
NMEDIT = 
NOWARN_CXXFLAGS =  -Wno-unused-parameter -Wno-implicit-fallthrough
OBJCOPY = /usr/bin/objcopy
OBJCXX = g++ -std=c++11
OBJCXXDEPMODE = depmode=gcc3
OBJCXXFLAGS = 
OBJDUMP = objdump
OBJEXT = o
OTOOL = 
OTOOL64 = 
PACKAGE = heptafranc
PACKAGE_BUGREPORT = https://github.com/heptafranc/heptafranc/issues
PACKAGE_NAME = HeptaFranc Core
PACKAGE_STRING = HeptaFranc Core 1.0.0
PACKAGE_TARNAME = heptafranc
PACKAGE_URL = https://heptafranccore.org/
PACKAGE_VERSION = 1.0.0
PATH_SEPARATOR = :
PIC_FLAGS = -fPIC
PIE_FLAGS = -fPIE
PKG_CONFIG = /usr/bin/pkg-config
PKG_CONFIG_LIBDIR = 
PKG_CONFIG_PATH = 
PORT = 
PROTOBUF_CFLAGS = -pthread
PROTOBUF_LIBS = -lprotobuf -pthread -lpthread
PROTOC = /usr/bin/protoc
PTHREAD_CC = gcc
PTHREAD_CFLAGS = -pthread
PTHREAD_LIBS = 
PYTHON = /usr/bin/python3.6
PYTHONPATH = 
QR_CFLAGS = 
QR_LIBS = -lqrencode
QT5_CFLAGS = -I/usr/include/x86_64-linux-gnu/qt5/QtNetwork -I/usr/include/x86_64-linux-gnu/qt5 -I/usr/include/x86_64-linux-gnu/qt5/QtWidgets -I/usr/include/x86_64-linux-gnu/qt5 -I/usr/include/x86_64-linux-gnu/qt5/QtGui -I/usr/include/x86_64-linux-gnu/qt5 -I/usr/include/x86_64-linux-gnu/qt5/QtCore -I/usr/include/x86_64-linux-gnu/qt5
QT5_LIBS = -lQt5Network -lQt5Widgets -lQt5Gui -lQt5Core
QTACCESSIBILITY_CFLAGS = 
QTACCESSIBILITY_LIBS = 
QTCGL_CFLAGS = 
QTCGL_LIBS = 
QTCLIPBOARD_CFLAGS = 
QTCLIPBOARD_LIBS = 
QTDEVICEDISCOVERY_CFLAGS = 
QTDEVICEDISCOVERY_LIBS = 
QTEVENTDISPATCHER_CFLAGS = 
QTEVENTDISPATCHER_LIBS = 
QTFB_CFLAGS = 
QTFB_LIBS = 
QTFONTDATABASE_CFLAGS = 
QTFONTDATABASE_LIBS = 
QTGRAPHICS_CFLAGS = 
QTGRAPHICS_LIBS = 
QTPLATFORM_CFLAGS = 
QTPLATFORM_LIBS = 
QTTHEME_CFLAGS = 
QTTHEME_LIBS = 
QTXCBQPA_CFLAGS = 
QTXCBQPA_LIBS = 
QT_DBUS_CFLAGS = -I/usr/include/x86_64-linux-gnu/qt5/QtDBus -I/usr/include/x86_64-linux-gnu/qt5 -I/usr/include/x86_64-linux-gnu/qt5/QtCore -I/usr/include/x86_64-linux-gnu/qt5
QT_DBUS_INCLUDES = -I/usr/include/x86_64-linux-gnu/qt5/QtDBus -I/usr/include/x86_64-linux-gnu/qt5 -I/usr/include/x86_64-linux-gnu/qt5/QtCore -I/usr/include/x86_64-linux-gnu/qt5
QT_DBUS_LIBS = -lQt5DBus -lQt5Core
QT_INCLUDES = -I/usr/include/x86_64-linux-gnu/qt5/QtNetwork -I/usr/include/x86_64-linux-gnu/qt5 -I/usr/include/x86_64-linux-gnu/qt5/QtWidgets -I/usr/include/x86_64-linux-gnu/qt5 -I/usr/include/x86_64-linux-gnu/qt5/QtGui -I/usr/include/x86_64-linux-gnu/qt5 -I/usr/include/x86_64-linux-gnu/qt5/QtCore -I/usr/include/x86_64-linux-gnu/qt5
QT_LDFLAGS = 
QT_LIBS = -lQt5Network -lQt5Widgets -lQt5Gui -lQt5Core
QT_PIE_FLAGS = -fPIC
QT_SELECT = qt5
QT_TEST_CFLAGS = -I/usr/include/x86_64-linux-gnu/qt5/QtTest -I/usr/include/x86_64-linux-gnu/qt5 -I/usr/include/x86_64-linux-gnu/qt5/QtCore -I/usr/include/x86_64-linux-gnu/qt5
QT_TEST_INCLUDES = -I/usr/include/x86_64-linux-gnu/qt5/QtTest -I/usr/include/x86_64-linux-gnu/qt5 -I/usr/include/x86_64-linux-gnu/qt5/QtCore -I/usr/include/x86_64-linux-gnu/qt5
QT_TEST_LIBS = -lQt5Test -lQt5Core
QT_TRANSLATION_DIR = 
RANLIB = /usr/bin/ranlib
RCC = /usr/lib/qt5/bin/rcc
READELF = /usr/bin/readelf
RELDFLAGS = 
RSVG_CONVERT = 
SANITIZER_CXXFLAGS = 
SANITIZER_LDFLAGS = 
SED = /bin/sed
SET_MAKE = 
SHANI_CXXFLAGS = -msse4 -msha
SHELL = /bin/bash
SSE41_CXXFLAGS = -msse4.1
SSE42_CXXFLAGS = -msse4.2
SSL_CFLAGS = 
SSL_LIBS = -lssl
STRIP = /usr/bin/strip
TESTDEFS = 
TIFFCP = 
UIC = /usr/lib/qt5/bin/uic
UNIVALUE_CFLAGS = -I$(srcdir)/univalue/include
UNIVALUE_LIBS = univalue/libunivalue.la
USE_QRCODE = 
USE_UPNP = 
VERSION = 1.0.0
WARN_CXXFLAGS =  -Wall -Wextra -Wformat -Wvla -Wformat-security
WINDOWS_BITS = 
WINDRES = 
X11XCB_CFLAGS = 
X11XCB_LIBS = 
XGETTEXT = 
ZMQ_CFLAGS = 
ZMQ_LIBS = -lzmq
abs_builddir = /tmp/custom-compile/heptafranc-source/src
abs_srcdir = /tmp/custom-compile/heptafranc-source/src
abs_top_builddir = /tmp/custom-compile/heptafranc-source
abs_top_srcdir = /tmp/custom-compile/heptafranc-source
ac_ct_AR = ar
ac_ct_CC = gcc
ac_ct_CXX = g++
ac_ct_DUMPBIN = 
ac_ct_OBJCXX = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = $${TAR-tar} chof - "$$tardir"
am__untar = $${TAR-tar} xf -
ax_pthread_config = 
bindir = ${exec_prefix}/bin
build = x86_64-pc-linux-gnu
build_alias = 
build_cpu = x86_64
build_os = linux-gnu
build_vendor = pc
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = x86_64-pc-linux-gnu
host_alias = 
host_cpu = x86_64
host_os = linux-gnu
host_vendor = pc
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /tmp/custom-compile/heptafranc-source/build-aux/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = $(MKDIR_P)
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /
program_transform_name = s,x,x,
psdir = ${docdir}
runstatedir = ${localstatedir}/run
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
subdirs =  src/univalue src/secp256k1
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = ../
top_builddir = ..
top_srcdir = ..
DIST_SUBDIRS = secp256k1 univalue
AM_LDFLAGS = $(PTHREAD_CFLAGS) $(LIBTOOL_LDFLAGS) $(HARDENED_LDFLAGS) \
	$(GPROF_LDFLAGS) $(SANITIZER_LDFLAGS) $(am__append_8)
AM_CXXFLAGS = $(DEBUG_CXXFLAGS) $(HARDENED_CXXFLAGS) $(WARN_CXXFLAGS) $(NOWARN_CXXFLAGS) $(ERROR_CXXFLAGS) $(GPROF_CXXFLAGS) $(SANITIZER_CXXFLAGS)
AM_CPPFLAGS = $(DEBUG_CPPFLAGS) $(HARDENED_CPPFLAGS)
AM_LIBTOOLFLAGS = --preserve-dup-deps

# Make is not made aware of per-object dependencies to avoid limiting building parallelization
# But to build the less dependent modules first, we manually select their order here:
EXTRA_LIBRARIES = $(LIBHEPTAFRANC_CRYPTO) $(LIBHEPTAFRANC_UTIL) \
	$(LIBHEPTAFRANC_COMMON) $(LIBHEPTAFRANC_CONSENSUS) \
	$(LIBHEPTAFRANC_SERVER) $(LIBHEPTAFRANC_CLI) \
	$(LIBHEPTAFRANC_WALLET) $(LIBHEPTAFRANC_ZMQ) $(am__append_13) \
	$(am__append_35)
#LIBUNIVALUE = $(UNIVALUE_LIBS)
LIBUNIVALUE = univalue/libunivalue.la
HEPTAFRANC_INCLUDES = -I$(builddir) $(BDB_CPPFLAGS) $(BOOST_CPPFLAGS) \
	$(LEVELDB_CPPFLAGS) $(CRYPTO_CFLAGS) $(SSL_CFLAGS) \
	-I$(srcdir)/secp256k1/include $(UNIVALUE_CFLAGS)
LIBHEPTAFRANC_SERVER = libheptafranc_server.a
LIBHEPTAFRANC_COMMON = libheptafranc_common.a
LIBHEPTAFRANC_CONSENSUS = libheptafranc_consensus.a
LIBHEPTAFRANC_CLI = libheptafranc_cli.a
LIBHEPTAFRANC_UTIL = libheptafranc_util.a
LIBHEPTAFRANC_CRYPTO_BASE = crypto/libheptafranc_crypto_base.a
LIBHEPTAFRANCQT = qt/libheptafrancqt.a
LIBSECP256K1 = secp256k1/libsecp256k1.la
LIBHEPTAFRANC_ZMQ = libheptafranc_zmq.a
LIBHEPTAFRANCCONSENSUS = libheptafrancconsensus.la
LIBHEPTAFRANC_WALLET = libheptafranc_wallet.a
LIBHEPTAFRANC_CRYPTO = $(LIBHEPTAFRANC_CRYPTO_BASE) $(am__append_1) \
	$(am__append_2) $(am__append_3)
LIBHEPTAFRANC_CRYPTO_SSE41 = crypto/libheptafranc_crypto_sse41.a
LIBHEPTAFRANC_CRYPTO_AVX2 = crypto/libheptafranc_crypto_avx2.a
LIBHEPTAFRANC_CRYPTO_SHANI = crypto/libheptafranc_crypto_shani.a
lib_LTLIBRARIES = $(LIBHEPTAFRANCCONSENSUS)
BENCHMARKS = 
# heptafranc core #
HEPTAFRANC_CORE_H = \
  addrdb.h \
  addrman.h \
  base58.h \
  bech32.h \
  bloom.h \
  blockencodings.h \
  chain.h \
  chainparams.h \
  chainparamsbase.h \
  chainparamsseeds.h \
  checkpoints.h \
  checkqueue.h \
  clientversion.h \
  coins.h \
  compat.h \
  compat/byteswap.h \
  compat/endian.h \
  compat/sanity.h \
  compressor.h \
  consensus/consensus.h \
  consensus/tx_verify.h \
  core_io.h \
  core_memusage.h \
  cuckoocache.h \
  fs.h \
  httprpc.h \
  httpserver.h \
  index/base.h \
  index/txindex.h \
  indirectmap.h \
  init.h \
  interfaces/handler.h \
  interfaces/node.h \
  interfaces/wallet.h \
  key.h \
  key_io.h \
  keystore.h \
  dbwrapper.h \
  limitedmap.h \
  logging.h \
  memusage.h \
  merkleblock.h \
  miner.h \
  net.h \
  net_processing.h \
  netaddress.h \
  netbase.h \
  netmessagemaker.h \
  noui.h \
  outputtype.h \
  policy/feerate.h \
  policy/fees.h \
  policy/policy.h \
  policy/rbf.h \
  pow.h \
  protocol.h \
  random.h \
  reverse_iterator.h \
  reverselock.h \
  rpc/blockchain.h \
  rpc/client.h \
  rpc/mining.h \
  rpc/protocol.h \
  rpc/server.h \
  rpc/rawtransaction.h \
  rpc/register.h \
  rpc/util.h \
  scheduler.h \
  script/descriptor.h \
  script/ismine.h \
  script/sigcache.h \
  script/sign.h \
  script/standard.h \
  shutdown.h \
  streams.h \
  support/allocators/secure.h \
  support/allocators/zeroafterfree.h \
  support/cleanse.h \
  support/events.h \
  support/lockedpool.h \
  sync.h \
  threadsafety.h \
  threadinterrupt.h \
  timedata.h \
  torcontrol.h \
  txdb.h \
  txmempool.h \
  ui_interface.h \
  undo.h \
  util.h \
  utilmemory.h \
  utilmoneystr.h \
  utiltime.h \
  validation.h \
  validationinterface.h \
  versionbits.h \
  walletinitinterface.h \
  wallet/coincontrol.h \
  wallet/crypter.h \
  wallet/db.h \
  wallet/feebumper.h \
  wallet/fees.h \
  wallet/rpcwallet.h \
  wallet/wallet.h \
  wallet/walletdb.h \
  wallet/walletutil.h \
  wallet/coinselection.h \
  warnings.h \
  zmq/zmqabstractnotifier.h \
  zmq/zmqconfig.h\
  zmq/zmqnotificationinterface.h \
  zmq/zmqpublishnotifier.h \
  zmq/zmqrpc.h


# server: shared between heptafrancd and heptafranc-qt
libheptafranc_server_a_CPPFLAGS = $(AM_CPPFLAGS) $(HEPTAFRANC_INCLUDES) $(MINIUPNPC_CPPFLAGS) $(EVENT_CFLAGS) $(EVENT_PTHREADS_CFLAGS)
libheptafranc_server_a_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)
libheptafranc_server_a_SOURCES = \
  addrdb.cpp \
  addrman.cpp \
  bloom.cpp \
  blockencodings.cpp \
  chain.cpp \
  checkpoints.cpp \
  consensus/tx_verify.cpp \
  httprpc.cpp \
  httpserver.cpp \
  index/base.cpp \
  index/txindex.cpp \
  init.cpp \
  dbwrapper.cpp \
  merkleblock.cpp \
  miner.cpp \
  net.cpp \
  net_processing.cpp \
  noui.cpp \
  outputtype.cpp \
  policy/fees.cpp \
  policy/policy.cpp \
  policy/rbf.cpp \
  pow.cpp \
  rest.cpp \
  rpc/blockchain.cpp \
  rpc/mining.cpp \
  rpc/misc.cpp \
  rpc/net.cpp \
  rpc/rawtransaction.cpp \
  rpc/server.cpp \
  rpc/util.cpp \
  script/sigcache.cpp \
  shutdown.cpp \
  timedata.cpp \
  torcontrol.cpp \
  txdb.cpp \
  txmempool.cpp \
  ui_interface.cpp \
  validation.cpp \
  validationinterface.cpp \
  versionbits.cpp \
  $(HEPTAFRANC_CORE_H)

libheptafranc_zmq_a_CPPFLAGS = $(HEPTAFRANC_INCLUDES) $(ZMQ_CFLAGS)
libheptafranc_zmq_a_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)
libheptafranc_zmq_a_SOURCES = \
  zmq/zmqabstractnotifier.cpp \
  zmq/zmqnotificationinterface.cpp \
  zmq/zmqpublishnotifier.cpp \
  zmq/zmqrpc.cpp


# wallet: shared between heptafrancd and heptafranc-qt, but only linked
# when wallet enabled
libheptafranc_wallet_a_CPPFLAGS = $(AM_CPPFLAGS) $(HEPTAFRANC_INCLUDES)
libheptafranc_wallet_a_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)
libheptafranc_wallet_a_SOURCES = \
  interfaces/wallet.cpp \
  wallet/coincontrol.cpp \
  wallet/crypter.cpp \
  wallet/db.cpp \
  wallet/feebumper.cpp \
  wallet/fees.cpp \
  wallet/init.cpp \
  wallet/rpcdump.cpp \
  wallet/rpcwallet.cpp \
  wallet/wallet.cpp \
  wallet/walletdb.cpp \
  wallet/walletutil.cpp \
  wallet/coinselection.cpp \
  $(HEPTAFRANC_CORE_H)


# crypto primitives library
crypto_libheptafranc_crypto_base_a_CPPFLAGS = $(AM_CPPFLAGS)
crypto_libheptafranc_crypto_base_a_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)
crypto_libheptafranc_crypto_base_a_SOURCES = crypto/aes.cpp \
	crypto/aes.h crypto/chacha20.h crypto/chacha20.cpp \
	crypto/common.h crypto/hmac_sha256.cpp crypto/hmac_sha256.h \
	crypto/hmac_sha512.cpp crypto/hmac_sha512.h \
	crypto/ripemd160.cpp crypto/ripemd160.h crypto/sha1.cpp \
	crypto/sha1.h crypto/sha256.cpp crypto/sha256.h \
	crypto/sha512.cpp crypto/sha512.h $(am__append_6)
crypto_libheptafranc_crypto_sse41_a_CXXFLAGS = $(AM_CXXFLAGS) \
	$(PIE_FLAGS) $(SSE41_CXXFLAGS)
crypto_libheptafranc_crypto_sse41_a_CPPFLAGS = $(AM_CPPFLAGS) \
	-DENABLE_SSE41
crypto_libheptafranc_crypto_sse41_a_SOURCES = crypto/sha256_sse41.cpp
crypto_libheptafranc_crypto_avx2_a_CXXFLAGS = $(AM_CXXFLAGS) \
	$(PIE_FLAGS) $(AVX2_CXXFLAGS)
crypto_libheptafranc_crypto_avx2_a_CPPFLAGS = $(AM_CPPFLAGS) \
	-DENABLE_AVX2
crypto_libheptafranc_crypto_avx2_a_SOURCES = crypto/sha256_avx2.cpp
crypto_libheptafranc_crypto_shani_a_CXXFLAGS = $(AM_CXXFLAGS) \
	$(PIE_FLAGS) $(SHANI_CXXFLAGS)
crypto_libheptafranc_crypto_shani_a_CPPFLAGS = $(AM_CPPFLAGS) \
	-DENABLE_SHANI
crypto_libheptafranc_crypto_shani_a_SOURCES = crypto/sha256_shani.cpp

# consensus: shared between all executables that validate any consensus rules.
libheptafranc_consensus_a_CPPFLAGS = $(AM_CPPFLAGS) $(HEPTAFRANC_INCLUDES)
libheptafranc_consensus_a_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)
libheptafranc_consensus_a_SOURCES = \
  amount.h \
  arith_uint256.cpp \
  arith_uint256.h \
  consensus/merkle.cpp \
  consensus/merkle.h \
  consensus/params.h \
  consensus/validation.h \
  hash.cpp \
  hash.h \
  prevector.h \
  primitives/block.cpp \
  primitives/block.h \
  primitives/transaction.cpp \
  primitives/transaction.h \
  pubkey.cpp \
  pubkey.h \
  script/heptafrancconsensus.cpp \
  script/interpreter.cpp \
  script/interpreter.h \
  script/script.cpp \
  script/script.h \
  script/script_error.cpp \
  script/script_error.h \
  serialize.h \
  span.h \
  tinyformat.h \
  uint256.cpp \
  uint256.h \
  utilstrencodings.cpp \
  utilstrencodings.h \
  version.h


# common: shared between heptafrancd, and heptafranc-qt and non-server tools
libheptafranc_common_a_CPPFLAGS = $(AM_CPPFLAGS) $(HEPTAFRANC_INCLUDES)
libheptafranc_common_a_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)
libheptafranc_common_a_SOURCES = \
  base58.cpp \
  bech32.cpp \
  chainparams.cpp \
  coins.cpp \
  compressor.cpp \
  core_read.cpp \
  core_write.cpp \
  key.cpp \
  key_io.cpp \
  keystore.cpp \
  netaddress.cpp \
  netbase.cpp \
  policy/feerate.cpp \
  protocol.cpp \
  scheduler.cpp \
  script/descriptor.cpp \
  script/ismine.cpp \
  script/sign.cpp \
  script/standard.cpp \
  warnings.cpp \
  $(HEPTAFRANC_CORE_H)


# util: shared between all executables.
# This library *must* be included to make sure that the glibc
# backward-compatibility objects and their sanity checks are linked.
libheptafranc_util_a_CPPFLAGS = $(AM_CPPFLAGS) $(HEPTAFRANC_INCLUDES)
libheptafranc_util_a_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)
libheptafranc_util_a_SOURCES = support/lockedpool.cpp \
	chainparamsbase.cpp clientversion.cpp compat/glibc_sanity.cpp \
	compat/glibcxx_sanity.cpp compat/strnlen.cpp fs.cpp \
	interfaces/handler.cpp interfaces/node.cpp logging.cpp \
	random.cpp rpc/protocol.cpp support/cleanse.cpp sync.cpp \
	threadinterrupt.cpp util.cpp utilmoneystr.cpp \
	utilstrencodings.cpp utiltime.cpp $(HEPTAFRANC_CORE_H) \
	$(am__append_7)

# cli: shared between heptafranc-cli and heptafranc-qt
libheptafranc_cli_a_CPPFLAGS = $(AM_CPPFLAGS) $(HEPTAFRANC_INCLUDES)
libheptafranc_cli_a_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)
libheptafranc_cli_a_SOURCES = \
  rpc/client.cpp \
  $(HEPTAFRANC_CORE_H)

nodist_libheptafranc_util_a_SOURCES = $(srcdir)/obj/build.h
#

# heptafrancd binary #
heptafrancd_SOURCES = heptafrancd.cpp $(am__append_9)
heptafrancd_CPPFLAGS = $(AM_CPPFLAGS) $(HEPTAFRANC_INCLUDES)
heptafrancd_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)
heptafrancd_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)
heptafrancd_LDADD = $(LIBHEPTAFRANC_SERVER) $(LIBHEPTAFRANC_WALLET) \
	$(LIBHEPTAFRANC_COMMON) $(LIBUNIVALUE) $(LIBHEPTAFRANC_UTIL) \
	$(LIBHEPTAFRANC_ZMQ) $(LIBHEPTAFRANC_CONSENSUS) \
	$(LIBHEPTAFRANC_CRYPTO) $(LIBLEVELDB) $(LIBLEVELDB_SSE42) \
	$(LIBMEMENV) $(LIBSECP256K1) $(BOOST_LIBS) $(BDB_LIBS) \
	$(SSL_LIBS) $(CRYPTO_LIBS) $(MINIUPNPC_LIBS) \
	$(EVENT_PTHREADS_LIBS) $(EVENT_LIBS) $(ZMQ_LIBS)

# heptafranc-cli binary #
heptafranc_cli_SOURCES = heptafranc-cli.cpp $(am__append_10)
heptafranc_cli_CPPFLAGS = $(AM_CPPFLAGS) $(HEPTAFRANC_INCLUDES) $(EVENT_CFLAGS)
heptafranc_cli_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)
heptafranc_cli_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)
heptafranc_cli_LDADD = $(LIBHEPTAFRANC_CLI) $(LIBUNIVALUE) \
	$(LIBHEPTAFRANC_UTIL) $(LIBHEPTAFRANC_CRYPTO) $(BOOST_LIBS) \
	$(SSL_LIBS) $(CRYPTO_LIBS) $(EVENT_LIBS)
#

# heptafranc-tx binary #
heptafranc_tx_SOURCES = heptafranc-tx.cpp $(am__append_11)
heptafranc_tx_CPPFLAGS = $(AM_CPPFLAGS) $(HEPTAFRANC_INCLUDES)
heptafranc_tx_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)
heptafranc_tx_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)
heptafranc_tx_LDADD = $(LIBUNIVALUE) $(LIBHEPTAFRANC_COMMON) \
	$(LIBHEPTAFRANC_UTIL) $(LIBHEPTAFRANC_CONSENSUS) \
	$(LIBHEPTAFRANC_CRYPTO) $(LIBSECP256K1) $(BOOST_LIBS) \
	$(CRYPTO_LIBS)
#

# heptafrancconsensus library #
include_HEADERS = script/heptafrancconsensus.h
libheptafrancconsensus_la_SOURCES = $(crypto_libheptafranc_crypto_base_a_SOURCES) \
	$(libheptafranc_consensus_a_SOURCES) \
	$(am__append_12)
libheptafrancconsensus_la_LDFLAGS = $(AM_LDFLAGS) -no-undefined $(RELDFLAGS)
libheptafrancconsensus_la_LIBADD = $(LIBSECP256K1)
libheptafrancconsensus_la_CPPFLAGS = $(AM_CPPFLAGS) -I$(builddir)/obj -I$(srcdir)/secp256k1/include -DBUILD_HEPTAFRANC_INTERNAL
libheptafrancconsensus_la_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)

#
CTAES_DIST = crypto/ctaes/bench.c crypto/ctaes/ctaes.c \
	crypto/ctaes/ctaes.h crypto/ctaes/README.md \
	crypto/ctaes/test.c
CLEANFILES = $(EXTRA_LIBRARIES) *.gcda *.gcno compat/*.gcda \
	compat/*.gcno consensus/*.gcda consensus/*.gcno crypto/*.gcda \
	crypto/*.gcno policy/*.gcda policy/*.gcno primitives/*.gcda \
	primitives/*.gcno script/*.gcda script/*.gcno support/*.gcda \
	support/*.gcno univalue/*.gcda univalue/*.gcno wallet/*.gcda \
	wallet/*.gcno wallet/test/*.gcda wallet/test/*.gcno zmq/*.gcda \
	zmq/*.gcno obj/build.h $(am__append_29) $(am__append_33) \
	$(am__append_42) $(am__append_49)
EXTRA_DIST = $(CTAES_DIST)
LIBLEVELDB_INT = leveldb/libleveldb.a
LIBMEMENV_INT = leveldb/libmemenv.a
LIBLEVELDB_SSE42_INT = leveldb/libleveldb_sse42.a
LIBLEVELDB_SSE42 = $(LIBLEVELDB_SSE42_INT)
LEVELDB_CPPFLAGS_INT = -I$(srcdir)/leveldb \
	$(LEVELDB_TARGET_FLAGS) \
	-DLEVELDB_ATOMIC_PRESENT \
	-D__STDC_LIMIT_MACROS $(am__append_17) \
	$(am__append_18)
leveldb_libleveldb_a_CPPFLAGS = $(AM_CPPFLAGS) $(LEVELDB_CPPFLAGS_INT) $(LEVELDB_CPPFLAGS)
leveldb_libleveldb_a_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)
leveldb_libleveldb_a_SOURCES =  \
	leveldb/port/atomic_pointer.h \
	leveldb/port/port_example.h \
	leveldb/port/port_posix.h \
	leveldb/port/win/stdint.h \
	leveldb/port/port.h \
	leveldb/port/port_win.h \
	leveldb/port/thread_annotations.h \
	leveldb/include/leveldb/db.h \
	leveldb/include/leveldb/options.h \
	leveldb/include/leveldb/comparator.h \
	leveldb/include/leveldb/filter_policy.h \
	leveldb/include/leveldb/slice.h \
	leveldb/include/leveldb/table_builder.h \
	leveldb/include/leveldb/env.h \
	leveldb/include/leveldb/c.h \
	leveldb/include/leveldb/iterator.h \
	leveldb/include/leveldb/cache.h \
	leveldb/include/leveldb/dumpfile.h \
	leveldb/include/leveldb/table.h \
	leveldb/include/leveldb/write_batch.h \
	leveldb/include/leveldb/status.h \
	leveldb/db/log_format.h \
	leveldb/db/memtable.h \
	leveldb/db/version_set.h \
	leveldb/db/write_batch_internal.h \
	leveldb/db/filename.h \
	leveldb/db/version_edit.h \
	leveldb/db/dbformat.h \
	leveldb/db/builder.h \
	leveldb/db/log_writer.h \
	leveldb/db/db_iter.h \
	leveldb/db/skiplist.h \
	leveldb/db/db_impl.h \
	leveldb/db/table_cache.h \
	leveldb/db/snapshot.h \
	leveldb/db/log_reader.h \
	leveldb/table/filter_block.h \
	leveldb/table/block_builder.h \
	leveldb/table/block.h \
	leveldb/table/two_level_iterator.h \
	leveldb/table/merger.h \
	leveldb/table/format.h \
	leveldb/table/iterator_wrapper.h \
	leveldb/util/crc32c.h \
	leveldb/util/env_posix_test_helper.h \
	leveldb/util/arena.h \
	leveldb/util/random.h \
	leveldb/util/posix_logger.h \
	leveldb/util/hash.h \
	leveldb/util/histogram.h \
	leveldb/util/coding.h \
	leveldb/util/testutil.h \
	leveldb/util/mutexlock.h \
	leveldb/util/logging.h \
	leveldb/util/testharness.h \
	leveldb/db/builder.cc leveldb/db/c.cc \
	leveldb/db/dbformat.cc \
	leveldb/db/db_impl.cc \
	leveldb/db/db_iter.cc \
	leveldb/db/dumpfile.cc \
	leveldb/db/filename.cc \
	leveldb/db/log_reader.cc \
	leveldb/db/log_writer.cc \
	leveldb/db/memtable.cc \
	leveldb/db/repair.cc \
	leveldb/db/table_cache.cc \
	leveldb/db/version_edit.cc \
	leveldb/db/version_set.cc \
	leveldb/db/write_batch.cc \
	leveldb/table/block_builder.cc \
	leveldb/table/block.cc \
	leveldb/table/filter_block.cc \
	leveldb/table/format.cc \
	leveldb/table/iterator.cc \
	leveldb/table/merger.cc \
	leveldb/table/table_builder.cc \
	leveldb/table/table.cc \
	leveldb/table/two_level_iterator.cc \
	leveldb/util/arena.cc \
	leveldb/util/bloom.cc \
	leveldb/util/cache.cc \
	leveldb/util/coding.cc \
	leveldb/util/comparator.cc \
	leveldb/util/crc32c.cc \
	leveldb/util/env.cc \
	leveldb/util/env_posix.cc \
	leveldb/util/filter_policy.cc \
	leveldb/util/hash.cc \
	leveldb/util/histogram.cc \
	leveldb/util/logging.cc \
	leveldb/util/options.cc \
	leveldb/util/status.cc $(am__append_19) \
	$(am__append_20)
leveldb_libmemenv_a_CPPFLAGS = $(leveldb_libleveldb_a_CPPFLAGS)
leveldb_libmemenv_a_CXXFLAGS = $(leveldb_libleveldb_a_CXXFLAGS)
leveldb_libmemenv_a_SOURCES =  \
	leveldb/helpers/memenv/memenv.cc \
	leveldb/helpers/memenv/memenv.h
leveldb_libleveldb_sse42_a_CPPFLAGS =  \
	$(leveldb_libleveldb_a_CPPFLAGS) \
	$(am__append_21)
leveldb_libleveldb_sse42_a_CXXFLAGS =  \
	$(leveldb_libleveldb_a_CXXFLAGS) \
	$(am__append_22)
leveldb_libleveldb_sse42_a_SOURCES = leveldb/port/port_posix_sse.cc
#TEST_SRCDIR = test
#TEST_BINARY = test/test_heptafranc$(EXEEXT)
#JSON_TEST_FILES = \
#  test/data/base58_encode_decode.json \
#  test/data/key_io_valid.json \
#  test/data/key_io_invalid.json \
#  test/data/script_tests.json \
#  test/data/sighash.json \
#  test/data/tx_invalid.json \
#  test/data/tx_valid.json

#RAW_TEST_FILES = 
#GENERATED_TEST_FILES = $(JSON_TEST_FILES:.json=.json.h) $(RAW_TEST_FILES:.raw=.raw.h)
#HEPTAFRANC_TEST_SUITE =  \
#	test/test_heptafranc_main.cpp \
#	test/test_heptafranc.h \
#	test/test_heptafranc.cpp $(am__append_26)

# test_heptafranc binary #
#HEPTAFRANC_TESTS = test/arith_uint256_tests.cpp \
#	test/scriptnum10.h test/addrman_tests.cpp \
#	test/amount_tests.cpp \
#	test/allocator_tests.cpp \
#	test/base32_tests.cpp test/base58_tests.cpp \
#	test/base64_tests.cpp test/bech32_tests.cpp \
#	test/bip32_tests.cpp \
#	test/blockchain_tests.cpp \
#	test/blockencodings_tests.cpp \
#	test/bloom_tests.cpp test/bswap_tests.cpp \
#	test/checkqueue_tests.cpp \
#	test/coins_tests.cpp \
#	test/compress_tests.cpp \
#	test/crypto_tests.cpp \
#	test/cuckoocache_tests.cpp \
#	test/denialofservice_tests.cpp \
#	test/descriptor_tests.cpp \
#	test/getarg_tests.cpp test/hash_tests.cpp \
#	test/key_io_tests.cpp test/key_tests.cpp \
#	test/limitedmap_tests.cpp \
#	test/dbwrapper_tests.cpp \
#	test/main_tests.cpp test/mempool_tests.cpp \
#	test/merkle_tests.cpp \
#	test/merkleblock_tests.cpp \
#	test/miner_tests.cpp \
#	test/multisig_tests.cpp test/net_tests.cpp \
#	test/netbase_tests.cpp test/pmt_tests.cpp \
#	test/policyestimator_tests.cpp \
#	test/pow_tests.cpp test/prevector_tests.cpp \
#	test/raii_event_tests.cpp \
#	test/random_tests.cpp \
#	test/reverselock_tests.cpp \
#	test/rpc_tests.cpp test/sanity_tests.cpp \
#	test/scheduler_tests.cpp \
#	test/script_p2sh_tests.cpp \
#	test/script_tests.cpp \
#	test/script_standard_tests.cpp \
#	test/scriptnum_tests.cpp \
#	test/serialize_tests.cpp \
#	test/sighash_tests.cpp \
#	test/sigopcount_tests.cpp \
#	test/skiplist_tests.cpp \
#	test/streams_tests.cpp \
#	test/timedata_tests.cpp \
#	test/torcontrol_tests.cpp \
#	test/transaction_tests.cpp \
#	test/txindex_tests.cpp \
#	test/txvalidation_tests.cpp \
#	test/txvalidationcache_tests.cpp \
#	test/uint256_tests.cpp test/util_tests.cpp \
#	test/validation_block_tests.cpp \
#	test/versionbits_tests.cpp $(am__append_25)
#test_test_heptafranc_SOURCES = $(HEPTAFRANC_TEST_SUITE) $(HEPTAFRANC_TESTS) $(JSON_TEST_FILES) $(RAW_TEST_FILES)
#test_test_heptafranc_CPPFLAGS = $(AM_CPPFLAGS) $(HEPTAFRANC_INCLUDES) $(TESTDEFS) $(EVENT_CFLAGS)
#test_test_heptafranc_LDADD = $(am__append_27) \
#	$(LIBHEPTAFRANC_SERVER) \
#	$(LIBHEPTAFRANC_CLI) \
#	$(LIBHEPTAFRANC_COMMON) \
#	$(LIBHEPTAFRANC_UTIL) \
#	$(LIBHEPTAFRANC_CONSENSUS) \
#	$(LIBHEPTAFRANC_CRYPTO) $(LIBUNIVALUE) \
#	$(LIBLEVELDB) $(LIBLEVELDB_SSE42) \
#	$(LIBMEMENV) $(BOOST_LIBS) \
#	$(BOOST_UNIT_TEST_FRAMEWORK_LIB) \
#	$(LIBSECP256K1) $(EVENT_LIBS) \
#	$(EVENT_PTHREADS_LIBS) \
#	$(LIBHEPTAFRANC_CONSENSUS) $(BDB_LIBS) \
#	$(SSL_LIBS) $(CRYPTO_LIBS) \
#	$(MINIUPNPC_LIBS) $(am__append_28)
#test_test_heptafranc_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)
#test_test_heptafranc_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS) -static
#

# test_heptafranc_fuzzy binary #
#test_test_heptafranc_fuzzy_SOURCES = test/test_heptafranc_fuzzy.cpp
#test_test_heptafranc_fuzzy_CPPFLAGS = $(AM_CPPFLAGS) $(HEPTAFRANC_INCLUDES)
#test_test_heptafranc_fuzzy_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)
#test_test_heptafranc_fuzzy_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)
#test_test_heptafranc_fuzzy_LDADD = $(LIBUNIVALUE) \
#	$(LIBHEPTAFRANC_SERVER) \
#	$(LIBHEPTAFRANC_COMMON) \
#	$(LIBHEPTAFRANC_UTIL) \
#	$(LIBHEPTAFRANC_CONSENSUS) \
#	$(LIBHEPTAFRANC_CRYPTO) \
#	$(LIBHEPTAFRANC_CRYPTO_SSE41) \
#	$(LIBHEPTAFRANC_CRYPTO_AVX2) \
#	$(LIBHEPTAFRANC_CRYPTO_SHANI) \
#	$(LIBSECP256K1) $(BOOST_LIBS) \
#	$(CRYPTO_LIBS)
#
#nodist_test_test_heptafranc_SOURCES = $(GENERATED_TEST_FILES)
#CLEAN_HEPTAFRANC_TEST = test/*.gcda test/*.gcno $(GENERATED_TEST_FILES)
#BENCH_SRCDIR = bench
#BENCH_BINARY = bench/bench_heptafranc$(EXEEXT)
#RAW_BENCH_FILES = \
#  bench/data/block413567.raw

#GENERATED_BENCH_FILES = $(RAW_BENCH_FILES:.raw=.raw.h)
#bench_bench_heptafranc_SOURCES =  \
#	$(RAW_BENCH_FILES) \
#	bench/bench_heptafranc.cpp bench/bench.cpp \
#	bench/bench.h bench/block_assemble.cpp \
#	bench/checkblock.cpp bench/checkqueue.cpp \
#	bench/examples.cpp bench/rollingbloom.cpp \
#	bench/crypto_hash.cpp \
#	bench/ccoins_caching.cpp \
#	bench/merkle_root.cpp \
#	bench/mempool_eviction.cpp \
#	bench/verify_script.cpp bench/base58.cpp \
#	bench/bech32.cpp bench/lockedpool.cpp \
#	bench/prevector.cpp $(am__append_32)
#nodist_bench_bench_heptafranc_SOURCES = $(GENERATED_BENCH_FILES)
#bench_bench_heptafranc_CPPFLAGS = $(AM_CPPFLAGS) $(HEPTAFRANC_INCLUDES) $(EVENT_CLFAGS) $(EVENT_PTHREADS_CFLAGS) -I$(builddir)/bench/
#bench_bench_heptafranc_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)
#bench_bench_heptafranc_LDADD =  \
#	$(LIBHEPTAFRANC_WALLET) \
#	$(LIBHEPTAFRANC_SERVER) \
#	$(LIBHEPTAFRANC_COMMON) \
#	$(LIBHEPTAFRANC_UTIL) \
#	$(LIBHEPTAFRANC_CONSENSUS) \
#	$(LIBHEPTAFRANC_CRYPTO) $(LIBLEVELDB) \
#	$(LIBLEVELDB_SSE42) $(LIBMEMENV) \
#	$(LIBSECP256K1) $(LIBUNIVALUE) \
#	$(am__append_31) $(BOOST_LIBS) $(BDB_LIBS) \
#	$(SSL_LIBS) $(CRYPTO_LIBS) \
#	$(MINIUPNPC_LIBS) $(EVENT_PTHREADS_LIBS) \
#	$(EVENT_LIBS)
#bench_bench_heptafranc_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)
#CLEAN_HEPTAFRANC_BENCH = bench/*.gcda bench/*.gcno $(GENERATED_BENCH_FILES)

# heptafranc qt core #
QT_TS = \
  qt/locale/heptafranc_af.ts \
  qt/locale/heptafranc_af_ZA.ts \
  qt/locale/heptafranc_ar.ts \
  qt/locale/heptafranc_be_BY.ts \
  qt/locale/heptafranc_bg_BG.ts \
  qt/locale/heptafranc_bg.ts \
  qt/locale/heptafranc_ca_ES.ts \
  qt/locale/heptafranc_ca.ts \
  qt/locale/heptafranc_ca@valencia.ts \
  qt/locale/heptafranc_cs.ts \
  qt/locale/heptafranc_cy.ts \
  qt/locale/heptafranc_da.ts \
  qt/locale/heptafranc_de.ts \
  qt/locale/heptafranc_el_GR.ts \
  qt/locale/heptafranc_el.ts \
  qt/locale/heptafranc_en_GB.ts \
  qt/locale/heptafranc_en.ts \
  qt/locale/heptafranc_eo.ts \
  qt/locale/heptafranc_es_AR.ts \
  qt/locale/heptafranc_es_CL.ts \
  qt/locale/heptafranc_es_CO.ts \
  qt/locale/heptafranc_es_DO.ts \
  qt/locale/heptafranc_es_ES.ts \
  qt/locale/heptafranc_es_MX.ts \
  qt/locale/heptafranc_es.ts \
  qt/locale/heptafranc_es_UY.ts \
  qt/locale/heptafranc_es_VE.ts \
  qt/locale/heptafranc_et_EE.ts \
  qt/locale/heptafranc_et.ts \
  qt/locale/heptafranc_eu_ES.ts \
  qt/locale/heptafranc_fa_IR.ts \
  qt/locale/heptafranc_fa.ts \
  qt/locale/heptafranc_fi.ts \
  qt/locale/heptafranc_fr_CA.ts \
  qt/locale/heptafranc_fr_FR.ts \
  qt/locale/heptafranc_fr.ts \
  qt/locale/heptafranc_gl.ts \
  qt/locale/heptafranc_he.ts \
  qt/locale/heptafranc_hi_IN.ts \
  qt/locale/heptafranc_hr.ts \
  qt/locale/heptafranc_hu.ts \
  qt/locale/heptafranc_id_ID.ts \
  qt/locale/heptafranc_it_IT.ts \
  qt/locale/heptafranc_it.ts \
  qt/locale/heptafranc_ja.ts \
  qt/locale/heptafranc_ka.ts \
  qt/locale/heptafranc_kk_KZ.ts \
  qt/locale/heptafranc_ko_KR.ts \
  qt/locale/heptafranc_ku_IQ.ts \
  qt/locale/heptafranc_ky.ts \
  qt/locale/heptafranc_la.ts \
  qt/locale/heptafranc_lt.ts \
  qt/locale/heptafranc_lv_LV.ts \
  qt/locale/heptafranc_mk_MK.ts \
  qt/locale/heptafranc_mn.ts \
  qt/locale/heptafranc_ms_MY.ts \
  qt/locale/heptafranc_nb.ts \
  qt/locale/heptafranc_ne.ts \
  qt/locale/heptafranc_nl.ts \
  qt/locale/heptafranc_pam.ts \
  qt/locale/heptafranc_pl.ts \
  qt/locale/heptafranc_pt_BR.ts \
  qt/locale/heptafranc_pt_PT.ts \
  qt/locale/heptafranc_ro_RO.ts \
  qt/locale/heptafranc_ro.ts \
  qt/locale/heptafranc_ru_RU.ts \
  qt/locale/heptafranc_ru.ts \
  qt/locale/heptafranc_sk.ts \
  qt/locale/heptafranc_sl_SI.ts \
  qt/locale/heptafranc_sq.ts \
  qt/locale/heptafranc_sr@latin.ts \
  qt/locale/heptafranc_sr.ts \
  qt/locale/heptafranc_sv.ts \
  qt/locale/heptafranc_ta.ts \
  qt/locale/heptafranc_th_TH.ts \
  qt/locale/heptafranc_tr_TR.ts \
  qt/locale/heptafranc_tr.ts \
  qt/locale/heptafranc_uk.ts \
  qt/locale/heptafranc_ur_PK.ts \
  qt/locale/heptafranc_uz@Cyrl.ts \
  qt/locale/heptafranc_vi.ts \
  qt/locale/heptafranc_vi_VN.ts \
  qt/locale/heptafranc_zh_CN.ts \
  qt/locale/heptafranc_zh_HK.ts \
  qt/locale/heptafranc_zh.ts \
  qt/locale/heptafranc_zh_TW.ts

QT_FORMS_UI = \
  qt/forms/addressbookpage.ui \
  qt/forms/askpassphrasedialog.ui \
  qt/forms/coincontroldialog.ui \
  qt/forms/editaddressdialog.ui \
  qt/forms/helpmessagedialog.ui \
  qt/forms/intro.ui \
  qt/forms/modaloverlay.ui \
  qt/forms/openuridialog.ui \
  qt/forms/optionsdialog.ui \
  qt/forms/overviewpage.ui \
  qt/forms/receivecoinsdialog.ui \
  qt/forms/receiverequestdialog.ui \
  qt/forms/debugwindow.ui \
  qt/forms/sendcoinsdialog.ui \
  qt/forms/sendcoinsentry.ui \
  qt/forms/signverifymessagedialog.ui \
  qt/forms/transactiondescdialog.ui

QT_MOC_CPP = \
  qt/moc_addressbookpage.cpp \
  qt/moc_addresstablemodel.cpp \
  qt/moc_askpassphrasedialog.cpp \
  qt/moc_bantablemodel.cpp \
  qt/moc_heptafrancaddressvalidator.cpp \
  qt/moc_heptafrancamountfield.cpp \
  qt/moc_heptafrancgui.cpp \
  qt/moc_heptafrancunits.cpp \
  qt/moc_callback.cpp \
  qt/moc_clientmodel.cpp \
  qt/moc_coincontroldialog.cpp \
  qt/moc_coincontroltreewidget.cpp \
  qt/moc_csvmodelwriter.cpp \
  qt/moc_editaddressdialog.cpp \
  qt/moc_guiutil.cpp \
  qt/moc_intro.cpp \
  qt/moc_macdockiconhandler.cpp \
  qt/moc_macnotificationhandler.cpp \
  qt/moc_modaloverlay.cpp \
  qt/moc_notificator.cpp \
  qt/moc_openuridialog.cpp \
  qt/moc_optionsdialog.cpp \
  qt/moc_optionsmodel.cpp \
  qt/moc_overviewpage.cpp \
  qt/moc_peertablemodel.cpp \
  qt/moc_paymentserver.cpp \
  qt/moc_qvalidatedlineedit.cpp \
  qt/moc_qvaluecombobox.cpp \
  qt/moc_receivecoinsdialog.cpp \
  qt/moc_receiverequestdialog.cpp \
  qt/moc_recentrequeststablemodel.cpp \
  qt/moc_rpcconsole.cpp \
  qt/moc_sendcoinsdialog.cpp \
  qt/moc_sendcoinsentry.cpp \
  qt/moc_signverifymessagedialog.cpp \
  qt/moc_splashscreen.cpp \
  qt/moc_trafficgraphwidget.cpp \
  qt/moc_transactiondesc.cpp \
  qt/moc_transactiondescdialog.cpp \
  qt/moc_transactionfilterproxy.cpp \
  qt/moc_transactiontablemodel.cpp \
  qt/moc_transactionview.cpp \
  qt/moc_utilitydialog.cpp \
  qt/moc_walletframe.cpp \
  qt/moc_walletmodel.cpp \
  qt/moc_walletview.cpp

HEPTAFRANC_MM = \
  qt/macdockiconhandler.mm \
  qt/macnotificationhandler.mm

QT_MOC = \
  qt/heptafranc.moc \
  qt/heptafrancamountfield.moc \
  qt/callback.moc \
  qt/intro.moc \
  qt/overviewpage.moc \
  qt/rpcconsole.moc

QT_QRC_CPP = qt/qrc_heptafranc.cpp
QT_QRC = qt/heptafranc.qrc
QT_QRC_LOCALE_CPP = qt/qrc_heptafranc_locale.cpp
QT_QRC_LOCALE = qt/heptafranc_locale.qrc
PROTOBUF_CC = qt/paymentrequest.pb.cc
PROTOBUF_H = qt/paymentrequest.pb.h
PROTOBUF_PROTO = qt/paymentrequest.proto
HEPTAFRANC_QT_H = \
  qt/addressbookpage.h \
  qt/addresstablemodel.h \
  qt/askpassphrasedialog.h \
  qt/bantablemodel.h \
  qt/heptafrancaddressvalidator.h \
  qt/heptafrancamountfield.h \
  qt/heptafrancgui.h \
  qt/heptafrancunits.h \
  qt/callback.h \
  qt/clientmodel.h \
  qt/coincontroldialog.h \
  qt/coincontroltreewidget.h \
  qt/csvmodelwriter.h \
  qt/editaddressdialog.h \
  qt/guiconstants.h \
  qt/guiutil.h \
  qt/intro.h \
  qt/macdockiconhandler.h \
  qt/macnotificationhandler.h \
  qt/modaloverlay.h \
  qt/networkstyle.h \
  qt/notificator.h \
  qt/openuridialog.h \
  qt/optionsdialog.h \
  qt/optionsmodel.h \
  qt/overviewpage.h \
  qt/paymentrequestplus.h \
  qt/paymentserver.h \
  qt/peertablemodel.h \
  qt/platformstyle.h \
  qt/qvalidatedlineedit.h \
  qt/qvaluecombobox.h \
  qt/receivecoinsdialog.h \
  qt/receiverequestdialog.h \
  qt/recentrequeststablemodel.h \
  qt/rpcconsole.h \
  qt/sendcoinsdialog.h \
  qt/sendcoinsentry.h \
  qt/signverifymessagedialog.h \
  qt/splashscreen.h \
  qt/trafficgraphwidget.h \
  qt/transactiondesc.h \
  qt/transactiondescdialog.h \
  qt/transactionfilterproxy.h \
  qt/transactionrecord.h \
  qt/transactiontablemodel.h \
  qt/transactionview.h \
  qt/utilitydialog.h \
  qt/walletframe.h \
  qt/walletmodel.h \
  qt/walletmodeltransaction.h \
  qt/walletview.h \
  qt/winshutdownmonitor.h

RES_ICONS = \
  qt/res/icons/add.png \
  qt/res/icons/address-book.png \
  qt/res/icons/about.png \
  qt/res/icons/about_qt.png \
  qt/res/icons/heptafranc.ico \
  qt/res/icons/heptafranc_testnet.ico \
  qt/res/icons/heptafranc.png \
  qt/res/icons/chevron.png \
  qt/res/icons/clock1.png \
  qt/res/icons/clock2.png \
  qt/res/icons/clock3.png \
  qt/res/icons/clock4.png \
  qt/res/icons/clock5.png \
  qt/res/icons/configure.png \
  qt/res/icons/connect0.png \
  qt/res/icons/connect1.png \
  qt/res/icons/connect2.png \
  qt/res/icons/connect3.png \
  qt/res/icons/connect4.png \
  qt/res/icons/debugwindow.png \
  qt/res/icons/edit.png \
  qt/res/icons/editcopy.png \
  qt/res/icons/editpaste.png \
  qt/res/icons/export.png \
  qt/res/icons/eye.png \
  qt/res/icons/eye_minus.png \
  qt/res/icons/eye_plus.png \
  qt/res/icons/filesave.png \
  qt/res/icons/fontbigger.png \
  qt/res/icons/fontsmaller.png \
  qt/res/icons/hd_disabled.png \
  qt/res/icons/hd_enabled.png \
  qt/res/icons/history.png \
  qt/res/icons/info.png \
  qt/res/icons/key.png \
  qt/res/icons/lock_closed.png \
  qt/res/icons/lock_open.png \
  qt/res/icons/network_disabled.png \
  qt/res/icons/open.png \
  qt/res/icons/overview.png \
  qt/res/icons/proxy.png \
  qt/res/icons/quit.png \
  qt/res/icons/receive.png \
  qt/res/icons/remove.png \
  qt/res/icons/send.png \
  qt/res/icons/synced.png \
  qt/res/icons/transaction0.png \
  qt/res/icons/transaction2.png \
  qt/res/icons/transaction_abandoned.png \
  qt/res/icons/transaction_conflicted.png \
  qt/res/icons/tx_inout.png \
  qt/res/icons/tx_input.png \
  qt/res/icons/tx_output.png \
  qt/res/icons/tx_mined.png \
  qt/res/icons/warning.png \
  qt/res/icons/verify.png

HEPTAFRANC_QT_BASE_CPP = \
  qt/bantablemodel.cpp \
  qt/heptafrancaddressvalidator.cpp \
  qt/heptafrancamountfield.cpp \
  qt/heptafrancgui.cpp \
  qt/heptafrancunits.cpp \
  qt/clientmodel.cpp \
  qt/csvmodelwriter.cpp \
  qt/guiutil.cpp \
  qt/intro.cpp \
  qt/modaloverlay.cpp \
  qt/networkstyle.cpp \
  qt/notificator.cpp \
  qt/optionsdialog.cpp \
  qt/optionsmodel.cpp \
  qt/peertablemodel.cpp \
  qt/platformstyle.cpp \
  qt/qvalidatedlineedit.cpp \
  qt/qvaluecombobox.cpp \
  qt/rpcconsole.cpp \
  qt/splashscreen.cpp \
  qt/trafficgraphwidget.cpp \
  qt/utilitydialog.cpp

HEPTAFRANC_QT_WINDOWS_CPP = qt/winshutdownmonitor.cpp
HEPTAFRANC_QT_WALLET_CPP = \
  qt/addressbookpage.cpp \
  qt/addresstablemodel.cpp \
  qt/askpassphrasedialog.cpp \
  qt/coincontroldialog.cpp \
  qt/coincontroltreewidget.cpp \
  qt/editaddressdialog.cpp \
  qt/openuridialog.cpp \
  qt/overviewpage.cpp \
  qt/paymentrequestplus.cpp \
  qt/paymentserver.cpp \
  qt/receivecoinsdialog.cpp \
  qt/receiverequestdialog.cpp \
  qt/recentrequeststablemodel.cpp \
  qt/sendcoinsdialog.cpp \
  qt/sendcoinsentry.cpp \
  qt/signverifymessagedialog.cpp \
  qt/transactiondesc.cpp \
  qt/transactiondescdialog.cpp \
  qt/transactionfilterproxy.cpp \
  qt/transactionrecord.cpp \
  qt/transactiontablemodel.cpp \
  qt/transactionview.cpp \
  qt/walletframe.cpp \
  qt/walletmodel.cpp \
  qt/walletmodeltransaction.cpp \
  qt/walletview.cpp

HEPTAFRANC_QT_CPP = $(HEPTAFRANC_QT_BASE_CPP) \
	$(am__append_36) $(am__append_37)
RES_IMAGES = 
RES_MOVIES = $(wildcard $(srcdir)/qt/res/movies/spinner-*.png)
HEPTAFRANC_RC = qt/res/heptafranc-qt-res.rc
HEPTAFRANC_QT_INCLUDES = -DQT_NO_KEYWORDS
qt_libheptafrancqt_a_CPPFLAGS = $(AM_CPPFLAGS) $(HEPTAFRANC_INCLUDES) $(HEPTAFRANC_QT_INCLUDES) \
  $(QT_INCLUDES) $(QT_DBUS_INCLUDES) $(PROTOBUF_CFLAGS) $(QR_CFLAGS)

qt_libheptafrancqt_a_CXXFLAGS = $(AM_CXXFLAGS) $(QT_PIE_FLAGS)
qt_libheptafrancqt_a_OBJCXXFLAGS = $(AM_OBJCXXFLAGS) $(QT_PIE_FLAGS)
qt_libheptafrancqt_a_SOURCES = $(HEPTAFRANC_QT_CPP) $(HEPTAFRANC_QT_H) $(QT_FORMS_UI) \
  $(QT_QRC) $(QT_QRC_LOCALE) $(QT_TS) $(PROTOBUF_PROTO) $(RES_ICONS) $(RES_IMAGES) $(RES_MOVIES)

nodist_qt_libheptafrancqt_a_SOURCES = $(QT_MOC_CPP) $(QT_MOC) $(PROTOBUF_CC) \
  $(PROTOBUF_H) $(QT_QRC_CPP) $(QT_QRC_LOCALE_CPP)


# forms/foo.h -> forms/ui_foo.h
QT_FORMS_H = $(join $(dir $(QT_FORMS_UI)),$(addprefix ui_, $(notdir $(QT_FORMS_UI:.ui=.h))))

# heptafranc-qt binary #
qt_heptafranc_qt_CPPFLAGS = $(AM_CPPFLAGS) $(HEPTAFRANC_INCLUDES) $(HEPTAFRANC_QT_INCLUDES) \
  $(QT_INCLUDES) $(PROTOBUF_CFLAGS) $(QR_CFLAGS)

qt_heptafranc_qt_CXXFLAGS = $(AM_CXXFLAGS) $(QT_PIE_FLAGS)
qt_heptafranc_qt_SOURCES = qt/heptafranc.cpp \
	$(am__append_38) $(am__append_39)
qt_heptafranc_qt_LDADD = qt/libheptafrancqt.a \
	$(LIBHEPTAFRANC_SERVER) $(am__append_40) \
	$(am__append_41) $(LIBHEPTAFRANC_CLI) \
	$(LIBHEPTAFRANC_COMMON) $(LIBHEPTAFRANC_UTIL) \
	$(LIBHEPTAFRANC_CONSENSUS) \
	$(LIBHEPTAFRANC_CRYPTO) $(LIBUNIVALUE) \
	$(LIBLEVELDB) $(LIBLEVELDB_SSE42) $(LIBMEMENV) \
	$(BOOST_LIBS) $(QT_LIBS) $(QT_DBUS_LIBS) \
	$(QR_LIBS) $(PROTOBUF_LIBS) $(BDB_LIBS) \
	$(SSL_LIBS) $(CRYPTO_LIBS) $(MINIUPNPC_LIBS) \
	$(LIBSECP256K1) $(EVENT_PTHREADS_LIBS) \
	$(EVENT_LIBS)
qt_heptafranc_qt_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(QT_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)
qt_heptafranc_qt_LIBTOOLFLAGS = $(AM_LIBTOOLFLAGS) --tag CXX

#locale/foo.ts -> locale/foo.qm
QT_QM = $(QT_TS:.ts=.qm)
CLEAN_QT = $(nodist_qt_libheptafrancqt_a_SOURCES) $(QT_QM) $(QT_FORMS_H) qt/*.gcda qt/*.gcno qt/temp_heptafranc_locale.qrc
#TEST_QT_MOC_CPP = qt/test/moc_compattests.cpp \
#	qt/test/moc_rpcnestedtests.cpp \
#	qt/test/moc_uritests.cpp \
#	$(am__append_45)
#TEST_QT_H = \
#  qt/test/addressbooktests.h \
#  qt/test/compattests.h \
#  qt/test/rpcnestedtests.h \
#  qt/test/uritests.h \
#  qt/test/util.h \
#  qt/test/paymentrequestdata.h \
#  qt/test/paymentservertests.h \
#  qt/test/wallettests.h

#TEST_HEPTAFRANC_CPP = \
#  test/test_heptafranc.cpp

#TEST_HEPTAFRANC_H = \
#  test/test_heptafranc.h

#qt_test_test_heptafranc_qt_CPPFLAGS = $(AM_CPPFLAGS) $(HEPTAFRANC_INCLUDES) $(HEPTAFRANC_QT_INCLUDES) \
#  $(QT_INCLUDES) $(QT_TEST_INCLUDES) $(PROTOBUF_CFLAGS)

#qt_test_test_heptafranc_qt_SOURCES =  \
#	qt/test/compattests.cpp \
#	qt/test/rpcnestedtests.cpp \
#	qt/test/test_main.cpp \
#	qt/test/uritests.cpp qt/test/util.cpp \
#	$(TEST_QT_H) $(TEST_HEPTAFRANC_CPP) \
#	$(TEST_HEPTAFRANC_H) $(am__append_46)
#nodist_qt_test_test_heptafranc_qt_SOURCES = $(TEST_QT_MOC_CPP)
#qt_test_test_heptafranc_qt_LDADD =  \
#	$(LIBHEPTAFRANCQT) \
#	$(LIBHEPTAFRANC_SERVER) $(am__append_47) \
#	$(am__append_48) $(LIBHEPTAFRANC_CLI) \
#	$(LIBHEPTAFRANC_COMMON) \
#	$(LIBHEPTAFRANC_UTIL) \
#	$(LIBHEPTAFRANC_CONSENSUS) \
#	$(LIBHEPTAFRANC_CRYPTO) $(LIBUNIVALUE) \
#	$(LIBLEVELDB) $(LIBLEVELDB_SSE42) \
#	$(LIBMEMENV) $(BOOST_LIBS) \
#	$(QT_DBUS_LIBS) $(QT_TEST_LIBS) \
#	$(QT_LIBS) $(QR_LIBS) $(PROTOBUF_LIBS) \
#	$(BDB_LIBS) $(SSL_LIBS) $(CRYPTO_LIBS) \
#	$(MINIUPNPC_LIBS) $(LIBSECP256K1) \
#	$(EVENT_PTHREADS_LIBS) $(EVENT_LIBS)
#qt_test_test_heptafranc_qt_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(QT_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)
#qt_test_test_heptafranc_qt_CXXFLAGS = $(AM_CXXFLAGS) $(QT_PIE_FLAGS)
#CLEAN_HEPTAFRANC_QT_TEST = $(TEST_QT_MOC_CPP) qt/test/*.gcda qt/test/*.gcno
all: all-recursive

.SUFFIXES:
.SUFFIXES: .cc .cpp .lo .log .mm .o .obj .rc .test .test$(EXEEXT) .trs
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am $(srcdir)/Makefile.leveldb.include $(srcdir)/Makefile.test.include $(srcdir)/Makefile.bench.include $(srcdir)/Makefile.qt.include $(srcdir)/Makefile.qttest.include $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign src/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign src/Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;
$(srcdir)/Makefile.leveldb.include $(srcdir)/Makefile.test.include $(srcdir)/Makefile.bench.include $(srcdir)/Makefile.qt.include $(srcdir)/Makefile.qttest.include $(am__empty):

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
crypto/$(am__dirstamp):
	@$(MKDIR_P) crypto
	@: > crypto/$(am__dirstamp)
crypto/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) crypto/$(DEPDIR)
	@: > crypto/$(DEPDIR)/$(am__dirstamp)
crypto/crypto_libheptafranc_crypto_avx2_a-sha256_avx2.$(OBJEXT):  \
	crypto/$(am__dirstamp) crypto/$(DEPDIR)/$(am__dirstamp)

crypto/libheptafranc_crypto_avx2.a: $(crypto_libheptafranc_crypto_avx2_a_OBJECTS) $(crypto_libheptafranc_crypto_avx2_a_DEPENDENCIES) $(EXTRA_crypto_libheptafranc_crypto_avx2_a_DEPENDENCIES) crypto/$(am__dirstamp)
	$(AM_V_at)-rm -f crypto/libheptafranc_crypto_avx2.a
	$(AM_V_AR)$(crypto_libheptafranc_crypto_avx2_a_AR) crypto/libheptafranc_crypto_avx2.a $(crypto_libheptafranc_crypto_avx2_a_OBJECTS) $(crypto_libheptafranc_crypto_avx2_a_LIBADD)
	$(AM_V_at)$(RANLIB) crypto/libheptafranc_crypto_avx2.a
crypto/crypto_libheptafranc_crypto_base_a-aes.$(OBJEXT):  \
	crypto/$(am__dirstamp) crypto/$(DEPDIR)/$(am__dirstamp)
crypto/crypto_libheptafranc_crypto_base_a-chacha20.$(OBJEXT):  \
	crypto/$(am__dirstamp) crypto/$(DEPDIR)/$(am__dirstamp)
crypto/crypto_libheptafranc_crypto_base_a-hmac_sha256.$(OBJEXT):  \
	crypto/$(am__dirstamp) crypto/$(DEPDIR)/$(am__dirstamp)
crypto/crypto_libheptafranc_crypto_base_a-hmac_sha512.$(OBJEXT):  \
	crypto/$(am__dirstamp) crypto/$(DEPDIR)/$(am__dirstamp)
crypto/crypto_libheptafranc_crypto_base_a-ripemd160.$(OBJEXT):  \
	crypto/$(am__dirstamp) crypto/$(DEPDIR)/$(am__dirstamp)
crypto/crypto_libheptafranc_crypto_base_a-sha1.$(OBJEXT):  \
	crypto/$(am__dirstamp) crypto/$(DEPDIR)/$(am__dirstamp)
crypto/crypto_libheptafranc_crypto_base_a-sha256.$(OBJEXT):  \
	crypto/$(am__dirstamp) crypto/$(DEPDIR)/$(am__dirstamp)
crypto/crypto_libheptafranc_crypto_base_a-sha512.$(OBJEXT):  \
	crypto/$(am__dirstamp) crypto/$(DEPDIR)/$(am__dirstamp)
crypto/crypto_libheptafranc_crypto_base_a-sha256_sse4.$(OBJEXT):  \
	crypto/$(am__dirstamp) crypto/$(DEPDIR)/$(am__dirstamp)

crypto/libheptafranc_crypto_base.a: $(crypto_libheptafranc_crypto_base_a_OBJECTS) $(crypto_libheptafranc_crypto_base_a_DEPENDENCIES) $(EXTRA_crypto_libheptafranc_crypto_base_a_DEPENDENCIES) crypto/$(am__dirstamp)
	$(AM_V_at)-rm -f crypto/libheptafranc_crypto_base.a
	$(AM_V_AR)$(crypto_libheptafranc_crypto_base_a_AR) crypto/libheptafranc_crypto_base.a $(crypto_libheptafranc_crypto_base_a_OBJECTS) $(crypto_libheptafranc_crypto_base_a_LIBADD)
	$(AM_V_at)$(RANLIB) crypto/libheptafranc_crypto_base.a
crypto/crypto_libheptafranc_crypto_shani_a-sha256_shani.$(OBJEXT):  \
	crypto/$(am__dirstamp) crypto/$(DEPDIR)/$(am__dirstamp)

crypto/libheptafranc_crypto_shani.a: $(crypto_libheptafranc_crypto_shani_a_OBJECTS) $(crypto_libheptafranc_crypto_shani_a_DEPENDENCIES) $(EXTRA_crypto_libheptafranc_crypto_shani_a_DEPENDENCIES) crypto/$(am__dirstamp)
	$(AM_V_at)-rm -f crypto/libheptafranc_crypto_shani.a
	$(AM_V_AR)$(crypto_libheptafranc_crypto_shani_a_AR) crypto/libheptafranc_crypto_shani.a $(crypto_libheptafranc_crypto_shani_a_OBJECTS) $(crypto_libheptafranc_crypto_shani_a_LIBADD)
	$(AM_V_at)$(RANLIB) crypto/libheptafranc_crypto_shani.a
crypto/crypto_libheptafranc_crypto_sse41_a-sha256_sse41.$(OBJEXT):  \
	crypto/$(am__dirstamp) crypto/$(DEPDIR)/$(am__dirstamp)

crypto/libheptafranc_crypto_sse41.a: $(crypto_libheptafranc_crypto_sse41_a_OBJECTS) $(crypto_libheptafranc_crypto_sse41_a_DEPENDENCIES) $(EXTRA_crypto_libheptafranc_crypto_sse41_a_DEPENDENCIES) crypto/$(am__dirstamp)
	$(AM_V_at)-rm -f crypto/libheptafranc_crypto_sse41.a
	$(AM_V_AR)$(crypto_libheptafranc_crypto_sse41_a_AR) crypto/libheptafranc_crypto_sse41.a $(crypto_libheptafranc_crypto_sse41_a_OBJECTS) $(crypto_libheptafranc_crypto_sse41_a_LIBADD)
	$(AM_V_at)$(RANLIB) crypto/libheptafranc_crypto_sse41.a
leveldb/db/$(am__dirstamp):
	@$(MKDIR_P) leveldb/db
	@: > leveldb/db/$(am__dirstamp)
leveldb/db/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) leveldb/db/$(DEPDIR)
	@: > leveldb/db/$(DEPDIR)/$(am__dirstamp)
leveldb/db/leveldb_libleveldb_a-builder.$(OBJEXT):  \
	leveldb/db/$(am__dirstamp) \
	leveldb/db/$(DEPDIR)/$(am__dirstamp)
leveldb/db/leveldb_libleveldb_a-c.$(OBJEXT):  \
	leveldb/db/$(am__dirstamp) \
	leveldb/db/$(DEPDIR)/$(am__dirstamp)
leveldb/db/leveldb_libleveldb_a-dbformat.$(OBJEXT):  \
	leveldb/db/$(am__dirstamp) \
	leveldb/db/$(DEPDIR)/$(am__dirstamp)
leveldb/db/leveldb_libleveldb_a-db_impl.$(OBJEXT):  \
	leveldb/db/$(am__dirstamp) \
	leveldb/db/$(DEPDIR)/$(am__dirstamp)
leveldb/db/leveldb_libleveldb_a-db_iter.$(OBJEXT):  \
	leveldb/db/$(am__dirstamp) \
	leveldb/db/$(DEPDIR)/$(am__dirstamp)
leveldb/db/leveldb_libleveldb_a-dumpfile.$(OBJEXT):  \
	leveldb/db/$(am__dirstamp) \
	leveldb/db/$(DEPDIR)/$(am__dirstamp)
leveldb/db/leveldb_libleveldb_a-filename.$(OBJEXT):  \
	leveldb/db/$(am__dirstamp) \
	leveldb/db/$(DEPDIR)/$(am__dirstamp)
leveldb/db/leveldb_libleveldb_a-log_reader.$(OBJEXT):  \
	leveldb/db/$(am__dirstamp) \
	leveldb/db/$(DEPDIR)/$(am__dirstamp)
leveldb/db/leveldb_libleveldb_a-log_writer.$(OBJEXT):  \
	leveldb/db/$(am__dirstamp) \
	leveldb/db/$(DEPDIR)/$(am__dirstamp)
leveldb/db/leveldb_libleveldb_a-memtable.$(OBJEXT):  \
	leveldb/db/$(am__dirstamp) \
	leveldb/db/$(DEPDIR)/$(am__dirstamp)
leveldb/db/leveldb_libleveldb_a-repair.$(OBJEXT):  \
	leveldb/db/$(am__dirstamp) \
	leveldb/db/$(DEPDIR)/$(am__dirstamp)
leveldb/db/leveldb_libleveldb_a-table_cache.$(OBJEXT):  \
	leveldb/db/$(am__dirstamp) \
	leveldb/db/$(DEPDIR)/$(am__dirstamp)
leveldb/db/leveldb_libleveldb_a-version_edit.$(OBJEXT):  \
	leveldb/db/$(am__dirstamp) \
	leveldb/db/$(DEPDIR)/$(am__dirstamp)
leveldb/db/leveldb_libleveldb_a-version_set.$(OBJEXT):  \
	leveldb/db/$(am__dirstamp) \
	leveldb/db/$(DEPDIR)/$(am__dirstamp)
leveldb/db/leveldb_libleveldb_a-write_batch.$(OBJEXT):  \
	leveldb/db/$(am__dirstamp) \
	leveldb/db/$(DEPDIR)/$(am__dirstamp)
leveldb/table/$(am__dirstamp):
	@$(MKDIR_P) leveldb/table
	@: > leveldb/table/$(am__dirstamp)
leveldb/table/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) leveldb/table/$(DEPDIR)
	@: > leveldb/table/$(DEPDIR)/$(am__dirstamp)
leveldb/table/leveldb_libleveldb_a-block_builder.$(OBJEXT):  \
	leveldb/table/$(am__dirstamp) \
	leveldb/table/$(DEPDIR)/$(am__dirstamp)
leveldb/table/leveldb_libleveldb_a-block.$(OBJEXT):  \
	leveldb/table/$(am__dirstamp) \
	leveldb/table/$(DEPDIR)/$(am__dirstamp)
leveldb/table/leveldb_libleveldb_a-filter_block.$(OBJEXT):  \
	leveldb/table/$(am__dirstamp) \
	leveldb/table/$(DEPDIR)/$(am__dirstamp)
leveldb/table/leveldb_libleveldb_a-format.$(OBJEXT):  \
	leveldb/table/$(am__dirstamp) \
	leveldb/table/$(DEPDIR)/$(am__dirstamp)
leveldb/table/leveldb_libleveldb_a-iterator.$(OBJEXT):  \
	leveldb/table/$(am__dirstamp) \
	leveldb/table/$(DEPDIR)/$(am__dirstamp)
leveldb/table/leveldb_libleveldb_a-merger.$(OBJEXT):  \
	leveldb/table/$(am__dirstamp) \
	leveldb/table/$(DEPDIR)/$(am__dirstamp)
leveldb/table/leveldb_libleveldb_a-table_builder.$(OBJEXT):  \
	leveldb/table/$(am__dirstamp) \
	leveldb/table/$(DEPDIR)/$(am__dirstamp)
leveldb/table/leveldb_libleveldb_a-table.$(OBJEXT):  \
	leveldb/table/$(am__dirstamp) \
	leveldb/table/$(DEPDIR)/$(am__dirstamp)
leveldb/table/leveldb_libleveldb_a-two_level_iterator.$(OBJEXT):  \
	leveldb/table/$(am__dirstamp) \
	leveldb/table/$(DEPDIR)/$(am__dirstamp)
leveldb/util/$(am__dirstamp):
	@$(MKDIR_P) leveldb/util
	@: > leveldb/util/$(am__dirstamp)
leveldb/util/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) leveldb/util/$(DEPDIR)
	@: > leveldb/util/$(DEPDIR)/$(am__dirstamp)
leveldb/util/leveldb_libleveldb_a-arena.$(OBJEXT):  \
	leveldb/util/$(am__dirstamp) \
	leveldb/util/$(DEPDIR)/$(am__dirstamp)
leveldb/util/leveldb_libleveldb_a-bloom.$(OBJEXT):  \
	leveldb/util/$(am__dirstamp) \
	leveldb/util/$(DEPDIR)/$(am__dirstamp)
leveldb/util/leveldb_libleveldb_a-cache.$(OBJEXT):  \
	leveldb/util/$(am__dirstamp) \
	leveldb/util/$(DEPDIR)/$(am__dirstamp)
leveldb/util/leveldb_libleveldb_a-coding.$(OBJEXT):  \
	leveldb/util/$(am__dirstamp) \
	leveldb/util/$(DEPDIR)/$(am__dirstamp)
leveldb/util/leveldb_libleveldb_a-comparator.$(OBJEXT):  \
	leveldb/util/$(am__dirstamp) \
	leveldb/util/$(DEPDIR)/$(am__dirstamp)
leveldb/util/leveldb_libleveldb_a-crc32c.$(OBJEXT):  \
	leveldb/util/$(am__dirstamp) \
	leveldb/util/$(DEPDIR)/$(am__dirstamp)
leveldb/util/leveldb_libleveldb_a-env.$(OBJEXT):  \
	leveldb/util/$(am__dirstamp) \
	leveldb/util/$(DEPDIR)/$(am__dirstamp)
leveldb/util/leveldb_libleveldb_a-env_posix.$(OBJEXT):  \
	leveldb/util/$(am__dirstamp) \
	leveldb/util/$(DEPDIR)/$(am__dirstamp)
leveldb/util/leveldb_libleveldb_a-filter_policy.$(OBJEXT):  \
	leveldb/util/$(am__dirstamp) \
	leveldb/util/$(DEPDIR)/$(am__dirstamp)
leveldb/util/leveldb_libleveldb_a-hash.$(OBJEXT):  \
	leveldb/util/$(am__dirstamp) \
	leveldb/util/$(DEPDIR)/$(am__dirstamp)
leveldb/util/leveldb_libleveldb_a-histogram.$(OBJEXT):  \
	leveldb/util/$(am__dirstamp) \
	leveldb/util/$(DEPDIR)/$(am__dirstamp)
leveldb/util/leveldb_libleveldb_a-logging.$(OBJEXT):  \
	leveldb/util/$(am__dirstamp) \
	leveldb/util/$(DEPDIR)/$(am__dirstamp)
leveldb/util/leveldb_libleveldb_a-options.$(OBJEXT):  \
	leveldb/util/$(am__dirstamp) \
	leveldb/util/$(DEPDIR)/$(am__dirstamp)
leveldb/util/leveldb_libleveldb_a-status.$(OBJEXT):  \
	leveldb/util/$(am__dirstamp) \
	leveldb/util/$(DEPDIR)/$(am__dirstamp)
leveldb/util/leveldb_libleveldb_a-env_win.$(OBJEXT):  \
	leveldb/util/$(am__dirstamp) \
	leveldb/util/$(DEPDIR)/$(am__dirstamp)
leveldb/port/$(am__dirstamp):
	@$(MKDIR_P) leveldb/port
	@: > leveldb/port/$(am__dirstamp)
leveldb/port/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) leveldb/port/$(DEPDIR)
	@: > leveldb/port/$(DEPDIR)/$(am__dirstamp)
leveldb/port/leveldb_libleveldb_a-port_win.$(OBJEXT):  \
	leveldb/port/$(am__dirstamp) \
	leveldb/port/$(DEPDIR)/$(am__dirstamp)
leveldb/port/leveldb_libleveldb_a-port_posix.$(OBJEXT):  \
	leveldb/port/$(am__dirstamp) \
	leveldb/port/$(DEPDIR)/$(am__dirstamp)
leveldb/$(am__dirstamp):
	@$(MKDIR_P) leveldb
	@: > leveldb/$(am__dirstamp)

leveldb/libleveldb.a: $(leveldb_libleveldb_a_OBJECTS) $(leveldb_libleveldb_a_DEPENDENCIES) $(EXTRA_leveldb_libleveldb_a_DEPENDENCIES) leveldb/$(am__dirstamp)
	$(AM_V_at)-rm -f leveldb/libleveldb.a
	$(AM_V_AR)$(leveldb_libleveldb_a_AR) leveldb/libleveldb.a $(leveldb_libleveldb_a_OBJECTS) $(leveldb_libleveldb_a_LIBADD)
	$(AM_V_at)$(RANLIB) leveldb/libleveldb.a
leveldb/port/leveldb_libleveldb_sse42_a-port_posix_sse.$(OBJEXT):  \
	leveldb/port/$(am__dirstamp) \
	leveldb/port/$(DEPDIR)/$(am__dirstamp)

leveldb/libleveldb_sse42.a: $(leveldb_libleveldb_sse42_a_OBJECTS) $(leveldb_libleveldb_sse42_a_DEPENDENCIES) $(EXTRA_leveldb_libleveldb_sse42_a_DEPENDENCIES) leveldb/$(am__dirstamp)
	$(AM_V_at)-rm -f leveldb/libleveldb_sse42.a
	$(AM_V_AR)$(leveldb_libleveldb_sse42_a_AR) leveldb/libleveldb_sse42.a $(leveldb_libleveldb_sse42_a_OBJECTS) $(leveldb_libleveldb_sse42_a_LIBADD)
	$(AM_V_at)$(RANLIB) leveldb/libleveldb_sse42.a
leveldb/helpers/memenv/$(am__dirstamp):
	@$(MKDIR_P) leveldb/helpers/memenv
	@: > leveldb/helpers/memenv/$(am__dirstamp)
leveldb/helpers/memenv/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) leveldb/helpers/memenv/$(DEPDIR)
	@: > leveldb/helpers/memenv/$(DEPDIR)/$(am__dirstamp)
leveldb/helpers/memenv/leveldb_libmemenv_a-memenv.$(OBJEXT):  \
	leveldb/helpers/memenv/$(am__dirstamp) \
	leveldb/helpers/memenv/$(DEPDIR)/$(am__dirstamp)

leveldb/libmemenv.a: $(leveldb_libmemenv_a_OBJECTS) $(leveldb_libmemenv_a_DEPENDENCIES) $(EXTRA_leveldb_libmemenv_a_DEPENDENCIES) leveldb/$(am__dirstamp)
	$(AM_V_at)-rm -f leveldb/libmemenv.a
	$(AM_V_AR)$(leveldb_libmemenv_a_AR) leveldb/libmemenv.a $(leveldb_libmemenv_a_OBJECTS) $(leveldb_libmemenv_a_LIBADD)
	$(AM_V_at)$(RANLIB) leveldb/libmemenv.a
rpc/$(am__dirstamp):
	@$(MKDIR_P) rpc
	@: > rpc/$(am__dirstamp)
rpc/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) rpc/$(DEPDIR)
	@: > rpc/$(DEPDIR)/$(am__dirstamp)
rpc/libheptafranc_cli_a-client.$(OBJEXT): rpc/$(am__dirstamp) \
	rpc/$(DEPDIR)/$(am__dirstamp)

libheptafranc_cli.a: $(libheptafranc_cli_a_OBJECTS) $(libheptafranc_cli_a_DEPENDENCIES) $(EXTRA_libheptafranc_cli_a_DEPENDENCIES) 
	$(AM_V_at)-rm -f libheptafranc_cli.a
	$(AM_V_AR)$(libheptafranc_cli_a_AR) libheptafranc_cli.a $(libheptafranc_cli_a_OBJECTS) $(libheptafranc_cli_a_LIBADD)
	$(AM_V_at)$(RANLIB) libheptafranc_cli.a
policy/$(am__dirstamp):
	@$(MKDIR_P) policy
	@: > policy/$(am__dirstamp)
policy/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) policy/$(DEPDIR)
	@: > policy/$(DEPDIR)/$(am__dirstamp)
policy/libheptafranc_common_a-feerate.$(OBJEXT):  \
	policy/$(am__dirstamp) policy/$(DEPDIR)/$(am__dirstamp)
script/$(am__dirstamp):
	@$(MKDIR_P) script
	@: > script/$(am__dirstamp)
script/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) script/$(DEPDIR)
	@: > script/$(DEPDIR)/$(am__dirstamp)
script/libheptafranc_common_a-descriptor.$(OBJEXT):  \
	script/$(am__dirstamp) script/$(DEPDIR)/$(am__dirstamp)
script/libheptafranc_common_a-ismine.$(OBJEXT):  \
	script/$(am__dirstamp) script/$(DEPDIR)/$(am__dirstamp)
script/libheptafranc_common_a-sign.$(OBJEXT): script/$(am__dirstamp) \
	script/$(DEPDIR)/$(am__dirstamp)
script/libheptafranc_common_a-standard.$(OBJEXT):  \
	script/$(am__dirstamp) script/$(DEPDIR)/$(am__dirstamp)

libheptafranc_common.a: $(libheptafranc_common_a_OBJECTS) $(libheptafranc_common_a_DEPENDENCIES) $(EXTRA_libheptafranc_common_a_DEPENDENCIES) 
	$(AM_V_at)-rm -f libheptafranc_common.a
	$(AM_V_AR)$(libheptafranc_common_a_AR) libheptafranc_common.a $(libheptafranc_common_a_OBJECTS) $(libheptafranc_common_a_LIBADD)
	$(AM_V_at)$(RANLIB) libheptafranc_common.a
consensus/$(am__dirstamp):
	@$(MKDIR_P) consensus
	@: > consensus/$(am__dirstamp)
consensus/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) consensus/$(DEPDIR)
	@: > consensus/$(DEPDIR)/$(am__dirstamp)
consensus/libheptafranc_consensus_a-merkle.$(OBJEXT):  \
	consensus/$(am__dirstamp) consensus/$(DEPDIR)/$(am__dirstamp)
primitives/$(am__dirstamp):
	@$(MKDIR_P) primitives
	@: > primitives/$(am__dirstamp)
primitives/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) primitives/$(DEPDIR)
	@: > primitives/$(DEPDIR)/$(am__dirstamp)
primitives/libheptafranc_consensus_a-block.$(OBJEXT):  \
	primitives/$(am__dirstamp) \
	primitives/$(DEPDIR)/$(am__dirstamp)
primitives/libheptafranc_consensus_a-transaction.$(OBJEXT):  \
	primitives/$(am__dirstamp) \
	primitives/$(DEPDIR)/$(am__dirstamp)
script/libheptafranc_consensus_a-heptafrancconsensus.$(OBJEXT):  \
	script/$(am__dirstamp) script/$(DEPDIR)/$(am__dirstamp)
script/libheptafranc_consensus_a-interpreter.$(OBJEXT):  \
	script/$(am__dirstamp) script/$(DEPDIR)/$(am__dirstamp)
script/libheptafranc_consensus_a-script.$(OBJEXT):  \
	script/$(am__dirstamp) script/$(DEPDIR)/$(am__dirstamp)
script/libheptafranc_consensus_a-script_error.$(OBJEXT):  \
	script/$(am__dirstamp) script/$(DEPDIR)/$(am__dirstamp)

libheptafranc_consensus.a: $(libheptafranc_consensus_a_OBJECTS) $(libheptafranc_consensus_a_DEPENDENCIES) $(EXTRA_libheptafranc_consensus_a_DEPENDENCIES) 
	$(AM_V_at)-rm -f libheptafranc_consensus.a
	$(AM_V_AR)$(libheptafranc_consensus_a_AR) libheptafranc_consensus.a $(libheptafranc_consensus_a_OBJECTS) $(libheptafranc_consensus_a_LIBADD)
	$(AM_V_at)$(RANLIB) libheptafranc_consensus.a
consensus/libheptafranc_server_a-tx_verify.$(OBJEXT):  \
	consensus/$(am__dirstamp) consensus/$(DEPDIR)/$(am__dirstamp)
index/$(am__dirstamp):
	@$(MKDIR_P) index
	@: > index/$(am__dirstamp)
index/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) index/$(DEPDIR)
	@: > index/$(DEPDIR)/$(am__dirstamp)
index/libheptafranc_server_a-base.$(OBJEXT): index/$(am__dirstamp) \
	index/$(DEPDIR)/$(am__dirstamp)
index/libheptafranc_server_a-txindex.$(OBJEXT): index/$(am__dirstamp) \
	index/$(DEPDIR)/$(am__dirstamp)
policy/libheptafranc_server_a-fees.$(OBJEXT): policy/$(am__dirstamp) \
	policy/$(DEPDIR)/$(am__dirstamp)
policy/libheptafranc_server_a-policy.$(OBJEXT):  \
	policy/$(am__dirstamp) policy/$(DEPDIR)/$(am__dirstamp)
policy/libheptafranc_server_a-rbf.$(OBJEXT): policy/$(am__dirstamp) \
	policy/$(DEPDIR)/$(am__dirstamp)
rpc/libheptafranc_server_a-blockchain.$(OBJEXT): rpc/$(am__dirstamp) \
	rpc/$(DEPDIR)/$(am__dirstamp)
rpc/libheptafranc_server_a-mining.$(OBJEXT): rpc/$(am__dirstamp) \
	rpc/$(DEPDIR)/$(am__dirstamp)
rpc/libheptafranc_server_a-misc.$(OBJEXT): rpc/$(am__dirstamp) \
	rpc/$(DEPDIR)/$(am__dirstamp)
rpc/libheptafranc_server_a-net.$(OBJEXT): rpc/$(am__dirstamp) \
	rpc/$(DEPDIR)/$(am__dirstamp)
rpc/libheptafranc_server_a-rawtransaction.$(OBJEXT):  \
	rpc/$(am__dirstamp) rpc/$(DEPDIR)/$(am__dirstamp)
rpc/libheptafranc_server_a-server.$(OBJEXT): rpc/$(am__dirstamp) \
	rpc/$(DEPDIR)/$(am__dirstamp)
rpc/libheptafranc_server_a-util.$(OBJEXT): rpc/$(am__dirstamp) \
	rpc/$(DEPDIR)/$(am__dirstamp)
script/libheptafranc_server_a-sigcache.$(OBJEXT):  \
	script/$(am__dirstamp) script/$(DEPDIR)/$(am__dirstamp)

libheptafranc_server.a: $(libheptafranc_server_a_OBJECTS) $(libheptafranc_server_a_DEPENDENCIES) $(EXTRA_libheptafranc_server_a_DEPENDENCIES) 
	$(AM_V_at)-rm -f libheptafranc_server.a
	$(AM_V_AR)$(libheptafranc_server_a_AR) libheptafranc_server.a $(libheptafranc_server_a_OBJECTS) $(libheptafranc_server_a_LIBADD)
	$(AM_V_at)$(RANLIB) libheptafranc_server.a
support/$(am__dirstamp):
	@$(MKDIR_P) support
	@: > support/$(am__dirstamp)
support/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) support/$(DEPDIR)
	@: > support/$(DEPDIR)/$(am__dirstamp)
support/libheptafranc_util_a-lockedpool.$(OBJEXT):  \
	support/$(am__dirstamp) support/$(DEPDIR)/$(am__dirstamp)
compat/$(am__dirstamp):
	@$(MKDIR_P) compat
	@: > compat/$(am__dirstamp)
compat/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) compat/$(DEPDIR)
	@: > compat/$(DEPDIR)/$(am__dirstamp)
compat/libheptafranc_util_a-glibc_sanity.$(OBJEXT):  \
	compat/$(am__dirstamp) compat/$(DEPDIR)/$(am__dirstamp)
compat/libheptafranc_util_a-glibcxx_sanity.$(OBJEXT):  \
	compat/$(am__dirstamp) compat/$(DEPDIR)/$(am__dirstamp)
compat/libheptafranc_util_a-strnlen.$(OBJEXT): compat/$(am__dirstamp) \
	compat/$(DEPDIR)/$(am__dirstamp)
interfaces/$(am__dirstamp):
	@$(MKDIR_P) interfaces
	@: > interfaces/$(am__dirstamp)
interfaces/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) interfaces/$(DEPDIR)
	@: > interfaces/$(DEPDIR)/$(am__dirstamp)
interfaces/libheptafranc_util_a-handler.$(OBJEXT):  \
	interfaces/$(am__dirstamp) \
	interfaces/$(DEPDIR)/$(am__dirstamp)
interfaces/libheptafranc_util_a-node.$(OBJEXT):  \
	interfaces/$(am__dirstamp) \
	interfaces/$(DEPDIR)/$(am__dirstamp)
rpc/libheptafranc_util_a-protocol.$(OBJEXT): rpc/$(am__dirstamp) \
	rpc/$(DEPDIR)/$(am__dirstamp)
support/libheptafranc_util_a-cleanse.$(OBJEXT):  \
	support/$(am__dirstamp) support/$(DEPDIR)/$(am__dirstamp)
compat/libheptafranc_util_a-glibc_compat.$(OBJEXT):  \
	compat/$(am__dirstamp) compat/$(DEPDIR)/$(am__dirstamp)

libheptafranc_util.a: $(libheptafranc_util_a_OBJECTS) $(libheptafranc_util_a_DEPENDENCIES) $(EXTRA_libheptafranc_util_a_DEPENDENCIES) 
	$(AM_V_at)-rm -f libheptafranc_util.a
	$(AM_V_AR)$(libheptafranc_util_a_AR) libheptafranc_util.a $(libheptafranc_util_a_OBJECTS) $(libheptafranc_util_a_LIBADD)
	$(AM_V_at)$(RANLIB) libheptafranc_util.a
interfaces/libheptafranc_wallet_a-wallet.$(OBJEXT):  \
	interfaces/$(am__dirstamp) \
	interfaces/$(DEPDIR)/$(am__dirstamp)
wallet/$(am__dirstamp):
	@$(MKDIR_P) wallet
	@: > wallet/$(am__dirstamp)
wallet/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) wallet/$(DEPDIR)
	@: > wallet/$(DEPDIR)/$(am__dirstamp)
wallet/libheptafranc_wallet_a-coincontrol.$(OBJEXT):  \
	wallet/$(am__dirstamp) wallet/$(DEPDIR)/$(am__dirstamp)
wallet/libheptafranc_wallet_a-crypter.$(OBJEXT):  \
	wallet/$(am__dirstamp) wallet/$(DEPDIR)/$(am__dirstamp)
wallet/libheptafranc_wallet_a-db.$(OBJEXT): wallet/$(am__dirstamp) \
	wallet/$(DEPDIR)/$(am__dirstamp)
wallet/libheptafranc_wallet_a-feebumper.$(OBJEXT):  \
	wallet/$(am__dirstamp) wallet/$(DEPDIR)/$(am__dirstamp)
wallet/libheptafranc_wallet_a-fees.$(OBJEXT): wallet/$(am__dirstamp) \
	wallet/$(DEPDIR)/$(am__dirstamp)
wallet/libheptafranc_wallet_a-init.$(OBJEXT): wallet/$(am__dirstamp) \
	wallet/$(DEPDIR)/$(am__dirstamp)
wallet/libheptafranc_wallet_a-rpcdump.$(OBJEXT):  \
	wallet/$(am__dirstamp) wallet/$(DEPDIR)/$(am__dirstamp)
wallet/libheptafranc_wallet_a-rpcwallet.$(OBJEXT):  \
	wallet/$(am__dirstamp) wallet/$(DEPDIR)/$(am__dirstamp)
wallet/libheptafranc_wallet_a-wallet.$(OBJEXT):  \
	wallet/$(am__dirstamp) wallet/$(DEPDIR)/$(am__dirstamp)
wallet/libheptafranc_wallet_a-walletdb.$(OBJEXT):  \
	wallet/$(am__dirstamp) wallet/$(DEPDIR)/$(am__dirstamp)
wallet/libheptafranc_wallet_a-walletutil.$(OBJEXT):  \
	wallet/$(am__dirstamp) wallet/$(DEPDIR)/$(am__dirstamp)
wallet/libheptafranc_wallet_a-coinselection.$(OBJEXT):  \
	wallet/$(am__dirstamp) wallet/$(DEPDIR)/$(am__dirstamp)

libheptafranc_wallet.a: $(libheptafranc_wallet_a_OBJECTS) $(libheptafranc_wallet_a_DEPENDENCIES) $(EXTRA_libheptafranc_wallet_a_DEPENDENCIES) 
	$(AM_V_at)-rm -f libheptafranc_wallet.a
	$(AM_V_AR)$(libheptafranc_wallet_a_AR) libheptafranc_wallet.a $(libheptafranc_wallet_a_OBJECTS) $(libheptafranc_wallet_a_LIBADD)
	$(AM_V_at)$(RANLIB) libheptafranc_wallet.a
zmq/$(am__dirstamp):
	@$(MKDIR_P) zmq
	@: > zmq/$(am__dirstamp)
zmq/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) zmq/$(DEPDIR)
	@: > zmq/$(DEPDIR)/$(am__dirstamp)
zmq/libheptafranc_zmq_a-zmqabstractnotifier.$(OBJEXT):  \
	zmq/$(am__dirstamp) zmq/$(DEPDIR)/$(am__dirstamp)
zmq/libheptafranc_zmq_a-zmqnotificationinterface.$(OBJEXT):  \
	zmq/$(am__dirstamp) zmq/$(DEPDIR)/$(am__dirstamp)
zmq/libheptafranc_zmq_a-zmqpublishnotifier.$(OBJEXT):  \
	zmq/$(am__dirstamp) zmq/$(DEPDIR)/$(am__dirstamp)
zmq/libheptafranc_zmq_a-zmqrpc.$(OBJEXT): zmq/$(am__dirstamp) \
	zmq/$(DEPDIR)/$(am__dirstamp)

libheptafranc_zmq.a: $(libheptafranc_zmq_a_OBJECTS) $(libheptafranc_zmq_a_DEPENDENCIES) $(EXTRA_libheptafranc_zmq_a_DEPENDENCIES) 
	$(AM_V_at)-rm -f libheptafranc_zmq.a
	$(AM_V_AR)$(libheptafranc_zmq_a_AR) libheptafranc_zmq.a $(libheptafranc_zmq_a_OBJECTS) $(libheptafranc_zmq_a_LIBADD)
	$(AM_V_at)$(RANLIB) libheptafranc_zmq.a
qt/$(am__dirstamp):
	@$(MKDIR_P) qt
	@: > qt/$(am__dirstamp)
qt/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) qt/$(DEPDIR)
	@: > qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libheptafrancqt_a-bantablemodel.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libheptafrancqt_a-heptafrancaddressvalidator.$(OBJEXT):  \
	qt/$(am__dirstamp) qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libheptafrancqt_a-heptafrancamountfield.$(OBJEXT):  \
	qt/$(am__dirstamp) qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libheptafrancqt_a-heptafrancgui.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libheptafrancqt_a-heptafrancunits.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libheptafrancqt_a-clientmodel.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libheptafrancqt_a-csvmodelwriter.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libheptafrancqt_a-guiutil.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libheptafrancqt_a-intro.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libheptafrancqt_a-modaloverlay.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libheptafrancqt_a-networkstyle.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libheptafrancqt_a-notificator.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libheptafrancqt_a-optionsdialog.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libheptafrancqt_a-optionsmodel.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libheptafrancqt_a-peertablemodel.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libheptafrancqt_a-platformstyle.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libheptafrancqt_a-qvalidatedlineedit.$(OBJEXT):  \
	qt/$(am__dirstamp) qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libheptafrancqt_a-qvaluecombobox.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libheptafrancqt_a-rpcconsole.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libheptafrancqt_a-splashscreen.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libheptafrancqt_a-trafficgraphwidget.$(OBJEXT):  \
	qt/$(am__dirstamp) qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libheptafrancqt_a-utilitydialog.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libheptafrancqt_a-winshutdownmonitor.$(OBJEXT):  \
	qt/$(am__dirstamp) qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libheptafrancqt_a-addressbookpage.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libheptafrancqt_a-addresstablemodel.$(OBJEXT):  \
	qt/$(am__dirstamp) qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libheptafrancqt_a-askpassphrasedialog.$(OBJEXT):  \
	qt/$(am__dirstamp) qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libheptafrancqt_a-coincontroldialog.$(OBJEXT):  \
	qt/$(am__dirstamp) qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libheptafrancqt_a-coincontroltreewidget.$(OBJEXT):  \
	qt/$(am__dirstamp) qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libheptafrancqt_a-editaddressdialog.$(OBJEXT):  \
	qt/$(am__dirstamp) qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libheptafrancqt_a-openuridialog.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libheptafrancqt_a-overviewpage.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libheptafrancqt_a-paymentrequestplus.$(OBJEXT):  \
	qt/$(am__dirstamp) qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libheptafrancqt_a-paymentserver.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libheptafrancqt_a-receivecoinsdialog.$(OBJEXT):  \
	qt/$(am__dirstamp) qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libheptafrancqt_a-receiverequestdialog.$(OBJEXT):  \
	qt/$(am__dirstamp) qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libheptafrancqt_a-recentrequeststablemodel.$(OBJEXT):  \
	qt/$(am__dirstamp) qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libheptafrancqt_a-sendcoinsdialog.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libheptafrancqt_a-sendcoinsentry.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libheptafrancqt_a-signverifymessagedialog.$(OBJEXT):  \
	qt/$(am__dirstamp) qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libheptafrancqt_a-transactiondesc.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libheptafrancqt_a-transactiondescdialog.$(OBJEXT):  \
	qt/$(am__dirstamp) qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libheptafrancqt_a-transactionfilterproxy.$(OBJEXT):  \
	qt/$(am__dirstamp) qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libheptafrancqt_a-transactionrecord.$(OBJEXT):  \
	qt/$(am__dirstamp) qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libheptafrancqt_a-transactiontablemodel.$(OBJEXT):  \
	qt/$(am__dirstamp) qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libheptafrancqt_a-transactionview.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libheptafrancqt_a-walletframe.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libheptafrancqt_a-walletmodel.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libheptafrancqt_a-walletmodeltransaction.$(OBJEXT):  \
	qt/$(am__dirstamp) qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libheptafrancqt_a-walletview.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libheptafrancqt_a-moc_addressbookpage.$(OBJEXT):  \
	qt/$(am__dirstamp) qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libheptafrancqt_a-moc_addresstablemodel.$(OBJEXT):  \
	qt/$(am__dirstamp) qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libheptafrancqt_a-moc_askpassphrasedialog.$(OBJEXT):  \
	qt/$(am__dirstamp) qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libheptafrancqt_a-moc_bantablemodel.$(OBJEXT):  \
	qt/$(am__dirstamp) qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libheptafrancqt_a-moc_heptafrancaddressvalidator.$(OBJEXT):  \
	qt/$(am__dirstamp) qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libheptafrancqt_a-moc_heptafrancamountfield.$(OBJEXT):  \
	qt/$(am__dirstamp) qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libheptafrancqt_a-moc_heptafrancgui.$(OBJEXT):  \
	qt/$(am__dirstamp) qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libheptafrancqt_a-moc_heptafrancunits.$(OBJEXT):  \
	qt/$(am__dirstamp) qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libheptafrancqt_a-moc_callback.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libheptafrancqt_a-moc_clientmodel.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libheptafrancqt_a-moc_coincontroldialog.$(OBJEXT):  \
	qt/$(am__dirstamp) qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libheptafrancqt_a-moc_coincontroltreewidget.$(OBJEXT):  \
	qt/$(am__dirstamp) qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libheptafrancqt_a-moc_csvmodelwriter.$(OBJEXT):  \
	qt/$(am__dirstamp) qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libheptafrancqt_a-moc_editaddressdialog.$(OBJEXT):  \
	qt/$(am__dirstamp) qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libheptafrancqt_a-moc_guiutil.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libheptafrancqt_a-moc_intro.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libheptafrancqt_a-moc_macdockiconhandler.$(OBJEXT):  \
	qt/$(am__dirstamp) qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libheptafrancqt_a-moc_macnotificationhandler.$(OBJEXT):  \
	qt/$(am__dirstamp) qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libheptafrancqt_a-moc_modaloverlay.$(OBJEXT):  \
	qt/$(am__dirstamp) qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libheptafrancqt_a-moc_notificator.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libheptafrancqt_a-moc_openuridialog.$(OBJEXT):  \
	qt/$(am__dirstamp) qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libheptafrancqt_a-moc_optionsdialog.$(OBJEXT):  \
	qt/$(am__dirstamp) qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libheptafrancqt_a-moc_optionsmodel.$(OBJEXT):  \
	qt/$(am__dirstamp) qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libheptafrancqt_a-moc_overviewpage.$(OBJEXT):  \
	qt/$(am__dirstamp) qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libheptafrancqt_a-moc_peertablemodel.$(OBJEXT):  \
	qt/$(am__dirstamp) qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libheptafrancqt_a-moc_paymentserver.$(OBJEXT):  \
	qt/$(am__dirstamp) qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libheptafrancqt_a-moc_qvalidatedlineedit.$(OBJEXT):  \
	qt/$(am__dirstamp) qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libheptafrancqt_a-moc_qvaluecombobox.$(OBJEXT):  \
	qt/$(am__dirstamp) qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libheptafrancqt_a-moc_receivecoinsdialog.$(OBJEXT):  \
	qt/$(am__dirstamp) qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libheptafrancqt_a-moc_receiverequestdialog.$(OBJEXT):  \
	qt/$(am__dirstamp) qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libheptafrancqt_a-moc_recentrequeststablemodel.$(OBJEXT):  \
	qt/$(am__dirstamp) qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libheptafrancqt_a-moc_rpcconsole.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libheptafrancqt_a-moc_sendcoinsdialog.$(OBJEXT):  \
	qt/$(am__dirstamp) qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libheptafrancqt_a-moc_sendcoinsentry.$(OBJEXT):  \
	qt/$(am__dirstamp) qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libheptafrancqt_a-moc_signverifymessagedialog.$(OBJEXT):  \
	qt/$(am__dirstamp) qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libheptafrancqt_a-moc_splashscreen.$(OBJEXT):  \
	qt/$(am__dirstamp) qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libheptafrancqt_a-moc_trafficgraphwidget.$(OBJEXT):  \
	qt/$(am__dirstamp) qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libheptafrancqt_a-moc_transactiondesc.$(OBJEXT):  \
	qt/$(am__dirstamp) qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libheptafrancqt_a-moc_transactiondescdialog.$(OBJEXT):  \
	qt/$(am__dirstamp) qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libheptafrancqt_a-moc_transactionfilterproxy.$(OBJEXT):  \
	qt/$(am__dirstamp) qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libheptafrancqt_a-moc_transactiontablemodel.$(OBJEXT):  \
	qt/$(am__dirstamp) qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libheptafrancqt_a-moc_transactionview.$(OBJEXT):  \
	qt/$(am__dirstamp) qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libheptafrancqt_a-moc_utilitydialog.$(OBJEXT):  \
	qt/$(am__dirstamp) qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libheptafrancqt_a-moc_walletframe.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libheptafrancqt_a-moc_walletmodel.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libheptafrancqt_a-moc_walletview.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libheptafrancqt_a-paymentrequest.pb.$(OBJEXT):  \
	qt/$(am__dirstamp) qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libheptafrancqt_a-qrc_heptafranc.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libheptafrancqt_a-qrc_heptafranc_locale.$(OBJEXT):  \
	qt/$(am__dirstamp) qt/$(DEPDIR)/$(am__dirstamp)

qt/libheptafrancqt.a: $(qt_libheptafrancqt_a_OBJECTS) $(qt_libheptafrancqt_a_DEPENDENCIES) $(EXTRA_qt_libheptafrancqt_a_DEPENDENCIES) qt/$(am__dirstamp)
	$(AM_V_at)-rm -f qt/libheptafrancqt.a
	$(AM_V_AR)$(qt_libheptafrancqt_a_AR) qt/libheptafrancqt.a $(qt_libheptafrancqt_a_OBJECTS) $(qt_libheptafrancqt_a_LIBADD)
	$(AM_V_at)$(RANLIB) qt/libheptafrancqt.a

install-libLTLIBRARIES: $(lib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	list2=; for p in $$list; do \
	  if test -f $$p; then \
	    list2="$$list2 $$p"; \
	  else :; fi; \
	done; \
	test -z "$$list2" || { \
	  echo " $(MKDIR_P) '$(DESTDIR)$(libdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(libdir)" || exit 1; \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 '$(DESTDIR)$(libdir)'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 "$(DESTDIR)$(libdir)"; \
	}

uninstall-libLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	for p in $$list; do \
	  $(am__strip_dir) \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(libdir)/$$f'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(libdir)/$$f"; \
	done

clean-libLTLIBRARIES:
	-test -z "$(lib_LTLIBRARIES)" || rm -f $(lib_LTLIBRARIES)
	@list='$(lib_LTLIBRARIES)'; \
	locs=`for p in $$list; do echo $$p; done | \
	      sed 's|^[^/]*$$|.|; s|/[^/]*$$||; s|$$|/so_locations|' | \
	      sort -u`; \
	test -z "$$locs" || { \
	  echo rm -f $${locs}; \
	  rm -f $${locs}; \
	}
crypto/libheptafrancconsensus_la-aes.lo: crypto/$(am__dirstamp) \
	crypto/$(DEPDIR)/$(am__dirstamp)
crypto/libheptafrancconsensus_la-chacha20.lo: crypto/$(am__dirstamp) \
	crypto/$(DEPDIR)/$(am__dirstamp)
crypto/libheptafrancconsensus_la-hmac_sha256.lo:  \
	crypto/$(am__dirstamp) crypto/$(DEPDIR)/$(am__dirstamp)
crypto/libheptafrancconsensus_la-hmac_sha512.lo:  \
	crypto/$(am__dirstamp) crypto/$(DEPDIR)/$(am__dirstamp)
crypto/libheptafrancconsensus_la-ripemd160.lo: crypto/$(am__dirstamp) \
	crypto/$(DEPDIR)/$(am__dirstamp)
crypto/libheptafrancconsensus_la-sha1.lo: crypto/$(am__dirstamp) \
	crypto/$(DEPDIR)/$(am__dirstamp)
crypto/libheptafrancconsensus_la-sha256.lo: crypto/$(am__dirstamp) \
	crypto/$(DEPDIR)/$(am__dirstamp)
crypto/libheptafrancconsensus_la-sha512.lo: crypto/$(am__dirstamp) \
	crypto/$(DEPDIR)/$(am__dirstamp)
crypto/libheptafrancconsensus_la-sha256_sse4.lo:  \
	crypto/$(am__dirstamp) crypto/$(DEPDIR)/$(am__dirstamp)
consensus/libheptafrancconsensus_la-merkle.lo:  \
	consensus/$(am__dirstamp) consensus/$(DEPDIR)/$(am__dirstamp)
primitives/libheptafrancconsensus_la-block.lo:  \
	primitives/$(am__dirstamp) \
	primitives/$(DEPDIR)/$(am__dirstamp)
primitives/libheptafrancconsensus_la-transaction.lo:  \
	primitives/$(am__dirstamp) \
	primitives/$(DEPDIR)/$(am__dirstamp)
script/libheptafrancconsensus_la-heptafrancconsensus.lo:  \
	script/$(am__dirstamp) script/$(DEPDIR)/$(am__dirstamp)
script/libheptafrancconsensus_la-interpreter.lo:  \
	script/$(am__dirstamp) script/$(DEPDIR)/$(am__dirstamp)
script/libheptafrancconsensus_la-script.lo: script/$(am__dirstamp) \
	script/$(DEPDIR)/$(am__dirstamp)
script/libheptafrancconsensus_la-script_error.lo:  \
	script/$(am__dirstamp) script/$(DEPDIR)/$(am__dirstamp)
compat/libheptafrancconsensus_la-glibc_compat.lo:  \
	compat/$(am__dirstamp) compat/$(DEPDIR)/$(am__dirstamp)

libheptafrancconsensus.la: $(libheptafrancconsensus_la_OBJECTS) $(libheptafrancconsensus_la_DEPENDENCIES) $(EXTRA_libheptafrancconsensus_la_DEPENDENCIES) 
	$(AM_V_CXXLD)$(libheptafrancconsensus_la_LINK) $(am_libheptafrancconsensus_la_rpath) $(libheptafrancconsensus_la_OBJECTS) $(libheptafrancconsensus_la_LIBADD) $(LIBS)
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(bindir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(bindir)" || exit 1; \
	fi; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p \
	 || test -f $$p1 \
	  ; then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' \
	    -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	    echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	    $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' \
	`; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list

clean-noinstPROGRAMS:
	@list='$(noinst_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list
bench/$(am__dirstamp):
	@$(MKDIR_P) bench
	@: > bench/$(am__dirstamp)
bench/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) bench/$(DEPDIR)
	@: > bench/$(DEPDIR)/$(am__dirstamp)
bench/bench_bench_heptafranc-bench_heptafranc.$(OBJEXT):  \
	bench/$(am__dirstamp) bench/$(DEPDIR)/$(am__dirstamp)
bench/bench_bench_heptafranc-bench.$(OBJEXT): bench/$(am__dirstamp) \
	bench/$(DEPDIR)/$(am__dirstamp)
bench/bench_bench_heptafranc-block_assemble.$(OBJEXT):  \
	bench/$(am__dirstamp) bench/$(DEPDIR)/$(am__dirstamp)
bench/bench_bench_heptafranc-checkblock.$(OBJEXT):  \
	bench/$(am__dirstamp) bench/$(DEPDIR)/$(am__dirstamp)
bench/bench_bench_heptafranc-checkqueue.$(OBJEXT):  \
	bench/$(am__dirstamp) bench/$(DEPDIR)/$(am__dirstamp)
bench/bench_bench_heptafranc-examples.$(OBJEXT):  \
	bench/$(am__dirstamp) bench/$(DEPDIR)/$(am__dirstamp)
bench/bench_bench_heptafranc-rollingbloom.$(OBJEXT):  \
	bench/$(am__dirstamp) bench/$(DEPDIR)/$(am__dirstamp)
bench/bench_bench_heptafranc-crypto_hash.$(OBJEXT):  \
	bench/$(am__dirstamp) bench/$(DEPDIR)/$(am__dirstamp)
bench/bench_bench_heptafranc-ccoins_caching.$(OBJEXT):  \
	bench/$(am__dirstamp) bench/$(DEPDIR)/$(am__dirstamp)
bench/bench_bench_heptafranc-merkle_root.$(OBJEXT):  \
	bench/$(am__dirstamp) bench/$(DEPDIR)/$(am__dirstamp)
bench/bench_bench_heptafranc-mempool_eviction.$(OBJEXT):  \
	bench/$(am__dirstamp) bench/$(DEPDIR)/$(am__dirstamp)
bench/bench_bench_heptafranc-verify_script.$(OBJEXT):  \
	bench/$(am__dirstamp) bench/$(DEPDIR)/$(am__dirstamp)
bench/bench_bench_heptafranc-base58.$(OBJEXT): bench/$(am__dirstamp) \
	bench/$(DEPDIR)/$(am__dirstamp)
bench/bench_bench_heptafranc-bech32.$(OBJEXT): bench/$(am__dirstamp) \
	bench/$(DEPDIR)/$(am__dirstamp)
bench/bench_bench_heptafranc-lockedpool.$(OBJEXT):  \
	bench/$(am__dirstamp) bench/$(DEPDIR)/$(am__dirstamp)
bench/bench_bench_heptafranc-prevector.$(OBJEXT):  \
	bench/$(am__dirstamp) bench/$(DEPDIR)/$(am__dirstamp)
bench/bench_bench_heptafranc-coin_selection.$(OBJEXT):  \
	bench/$(am__dirstamp) bench/$(DEPDIR)/$(am__dirstamp)

bench/bench_heptafranc$(EXEEXT): $(bench_bench_heptafranc_OBJECTS) $(bench_bench_heptafranc_DEPENDENCIES) $(EXTRA_bench_bench_heptafranc_DEPENDENCIES) bench/$(am__dirstamp)
	@rm -f bench/bench_heptafranc$(EXEEXT)
	$(AM_V_CXXLD)$(bench_bench_heptafranc_LINK) $(bench_bench_heptafranc_OBJECTS) $(bench_bench_heptafranc_LDADD) $(LIBS)

heptafranc-cli$(EXEEXT): $(heptafranc_cli_OBJECTS) $(heptafranc_cli_DEPENDENCIES) $(EXTRA_heptafranc_cli_DEPENDENCIES) 
	@rm -f heptafranc-cli$(EXEEXT)
	$(AM_V_CXXLD)$(heptafranc_cli_LINK) $(heptafranc_cli_OBJECTS) $(heptafranc_cli_LDADD) $(LIBS)

heptafranc-tx$(EXEEXT): $(heptafranc_tx_OBJECTS) $(heptafranc_tx_DEPENDENCIES) $(EXTRA_heptafranc_tx_DEPENDENCIES) 
	@rm -f heptafranc-tx$(EXEEXT)
	$(AM_V_CXXLD)$(heptafranc_tx_LINK) $(heptafranc_tx_OBJECTS) $(heptafranc_tx_LDADD) $(LIBS)

heptafrancd$(EXEEXT): $(heptafrancd_OBJECTS) $(heptafrancd_DEPENDENCIES) $(EXTRA_heptafrancd_DEPENDENCIES) 
	@rm -f heptafrancd$(EXEEXT)
	$(AM_V_CXXLD)$(heptafrancd_LINK) $(heptafrancd_OBJECTS) $(heptafrancd_LDADD) $(LIBS)
qt/qt_heptafranc_qt-heptafranc.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_heptafranc_qt-macdockiconhandler.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_heptafranc_qt-macnotificationhandler.$(OBJEXT):  \
	qt/$(am__dirstamp) qt/$(DEPDIR)/$(am__dirstamp)
qt/res/$(am__dirstamp):
	@$(MKDIR_P) qt/res
	@: > qt/res/$(am__dirstamp)
qt/res/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) qt/res/$(DEPDIR)
	@: > qt/res/$(DEPDIR)/$(am__dirstamp)
qt/res/heptafranc-qt-res.$(OBJEXT): qt/res/$(am__dirstamp) \
	qt/res/$(DEPDIR)/$(am__dirstamp)

qt/heptafranc-qt$(EXEEXT): $(qt_heptafranc_qt_OBJECTS) $(qt_heptafranc_qt_DEPENDENCIES) $(EXTRA_qt_heptafranc_qt_DEPENDENCIES) qt/$(am__dirstamp)
	@rm -f qt/heptafranc-qt$(EXEEXT)
	$(AM_V_OBJCXXLD)$(qt_heptafranc_qt_LINK) $(qt_heptafranc_qt_OBJECTS) $(qt_heptafranc_qt_LDADD) $(LIBS)
qt/test/$(am__dirstamp):
	@$(MKDIR_P) qt/test
	@: > qt/test/$(am__dirstamp)
qt/test/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) qt/test/$(DEPDIR)
	@: > qt/test/$(DEPDIR)/$(am__dirstamp)
qt/test/qt_test_test_heptafranc_qt-compattests.$(OBJEXT):  \
	qt/test/$(am__dirstamp) qt/test/$(DEPDIR)/$(am__dirstamp)
qt/test/qt_test_test_heptafranc_qt-rpcnestedtests.$(OBJEXT):  \
	qt/test/$(am__dirstamp) qt/test/$(DEPDIR)/$(am__dirstamp)
qt/test/qt_test_test_heptafranc_qt-test_main.$(OBJEXT):  \
	qt/test/$(am__dirstamp) qt/test/$(DEPDIR)/$(am__dirstamp)
qt/test/qt_test_test_heptafranc_qt-uritests.$(OBJEXT):  \
	qt/test/$(am__dirstamp) qt/test/$(DEPDIR)/$(am__dirstamp)
qt/test/qt_test_test_heptafranc_qt-util.$(OBJEXT):  \
	qt/test/$(am__dirstamp) qt/test/$(DEPDIR)/$(am__dirstamp)
test/$(am__dirstamp):
	@$(MKDIR_P) test
	@: > test/$(am__dirstamp)
test/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) test/$(DEPDIR)
	@: > test/$(DEPDIR)/$(am__dirstamp)
test/qt_test_test_heptafranc_qt-test_heptafranc.$(OBJEXT):  \
	test/$(am__dirstamp) test/$(DEPDIR)/$(am__dirstamp)
qt/test/qt_test_test_heptafranc_qt-addressbooktests.$(OBJEXT):  \
	qt/test/$(am__dirstamp) qt/test/$(DEPDIR)/$(am__dirstamp)
qt/test/qt_test_test_heptafranc_qt-paymentservertests.$(OBJEXT):  \
	qt/test/$(am__dirstamp) qt/test/$(DEPDIR)/$(am__dirstamp)
qt/test/qt_test_test_heptafranc_qt-wallettests.$(OBJEXT):  \
	qt/test/$(am__dirstamp) qt/test/$(DEPDIR)/$(am__dirstamp)
wallet/test/$(am__dirstamp):
	@$(MKDIR_P) wallet/test
	@: > wallet/test/$(am__dirstamp)
wallet/test/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) wallet/test/$(DEPDIR)
	@: > wallet/test/$(DEPDIR)/$(am__dirstamp)
wallet/test/qt_test_test_heptafranc_qt-wallet_test_fixture.$(OBJEXT):  \
	wallet/test/$(am__dirstamp) \
	wallet/test/$(DEPDIR)/$(am__dirstamp)
qt/test/qt_test_test_heptafranc_qt-moc_compattests.$(OBJEXT):  \
	qt/test/$(am__dirstamp) qt/test/$(DEPDIR)/$(am__dirstamp)
qt/test/qt_test_test_heptafranc_qt-moc_rpcnestedtests.$(OBJEXT):  \
	qt/test/$(am__dirstamp) qt/test/$(DEPDIR)/$(am__dirstamp)
qt/test/qt_test_test_heptafranc_qt-moc_uritests.$(OBJEXT):  \
	qt/test/$(am__dirstamp) qt/test/$(DEPDIR)/$(am__dirstamp)
qt/test/qt_test_test_heptafranc_qt-moc_addressbooktests.$(OBJEXT):  \
	qt/test/$(am__dirstamp) qt/test/$(DEPDIR)/$(am__dirstamp)
qt/test/qt_test_test_heptafranc_qt-moc_paymentservertests.$(OBJEXT):  \
	qt/test/$(am__dirstamp) qt/test/$(DEPDIR)/$(am__dirstamp)
qt/test/qt_test_test_heptafranc_qt-moc_wallettests.$(OBJEXT):  \
	qt/test/$(am__dirstamp) qt/test/$(DEPDIR)/$(am__dirstamp)

qt/test/test_heptafranc-qt$(EXEEXT): $(qt_test_test_heptafranc_qt_OBJECTS) $(qt_test_test_heptafranc_qt_DEPENDENCIES) $(EXTRA_qt_test_test_heptafranc_qt_DEPENDENCIES) qt/test/$(am__dirstamp)
	@rm -f qt/test/test_heptafranc-qt$(EXEEXT)
	$(AM_V_CXXLD)$(qt_test_test_heptafranc_qt_LINK) $(qt_test_test_heptafranc_qt_OBJECTS) $(qt_test_test_heptafranc_qt_LDADD) $(LIBS)
test/test_test_heptafranc-test_heptafranc_main.$(OBJEXT):  \
	test/$(am__dirstamp) test/$(DEPDIR)/$(am__dirstamp)
test/test_test_heptafranc-test_heptafranc.$(OBJEXT):  \
	test/$(am__dirstamp) test/$(DEPDIR)/$(am__dirstamp)
wallet/test/test_test_heptafranc-wallet_test_fixture.$(OBJEXT):  \
	wallet/test/$(am__dirstamp) \
	wallet/test/$(DEPDIR)/$(am__dirstamp)
test/test_test_heptafranc-arith_uint256_tests.$(OBJEXT):  \
	test/$(am__dirstamp) test/$(DEPDIR)/$(am__dirstamp)
test/test_test_heptafranc-addrman_tests.$(OBJEXT):  \
	test/$(am__dirstamp) test/$(DEPDIR)/$(am__dirstamp)
test/test_test_heptafranc-amount_tests.$(OBJEXT):  \
	test/$(am__dirstamp) test/$(DEPDIR)/$(am__dirstamp)
test/test_test_heptafranc-allocator_tests.$(OBJEXT):  \
	test/$(am__dirstamp) test/$(DEPDIR)/$(am__dirstamp)
test/test_test_heptafranc-base32_tests.$(OBJEXT):  \
	test/$(am__dirstamp) test/$(DEPDIR)/$(am__dirstamp)
test/test_test_heptafranc-base58_tests.$(OBJEXT):  \
	test/$(am__dirstamp) test/$(DEPDIR)/$(am__dirstamp)
test/test_test_heptafranc-base64_tests.$(OBJEXT):  \
	test/$(am__dirstamp) test/$(DEPDIR)/$(am__dirstamp)
test/test_test_heptafranc-bech32_tests.$(OBJEXT):  \
	test/$(am__dirstamp) test/$(DEPDIR)/$(am__dirstamp)
test/test_test_heptafranc-bip32_tests.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_test_heptafranc-blockchain_tests.$(OBJEXT):  \
	test/$(am__dirstamp) test/$(DEPDIR)/$(am__dirstamp)
test/test_test_heptafranc-blockencodings_tests.$(OBJEXT):  \
	test/$(am__dirstamp) test/$(DEPDIR)/$(am__dirstamp)
test/test_test_heptafranc-bloom_tests.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_test_heptafranc-bswap_tests.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_test_heptafranc-checkqueue_tests.$(OBJEXT):  \
	test/$(am__dirstamp) test/$(DEPDIR)/$(am__dirstamp)
test/test_test_heptafranc-coins_tests.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_test_heptafranc-compress_tests.$(OBJEXT):  \
	test/$(am__dirstamp) test/$(DEPDIR)/$(am__dirstamp)
test/test_test_heptafranc-crypto_tests.$(OBJEXT):  \
	test/$(am__dirstamp) test/$(DEPDIR)/$(am__dirstamp)
test/test_test_heptafranc-cuckoocache_tests.$(OBJEXT):  \
	test/$(am__dirstamp) test/$(DEPDIR)/$(am__dirstamp)
test/test_test_heptafranc-denialofservice_tests.$(OBJEXT):  \
	test/$(am__dirstamp) test/$(DEPDIR)/$(am__dirstamp)
test/test_test_heptafranc-descriptor_tests.$(OBJEXT):  \
	test/$(am__dirstamp) test/$(DEPDIR)/$(am__dirstamp)
test/test_test_heptafranc-getarg_tests.$(OBJEXT):  \
	test/$(am__dirstamp) test/$(DEPDIR)/$(am__dirstamp)
test/test_test_heptafranc-hash_tests.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_test_heptafranc-key_io_tests.$(OBJEXT):  \
	test/$(am__dirstamp) test/$(DEPDIR)/$(am__dirstamp)
test/test_test_heptafranc-key_tests.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_test_heptafranc-limitedmap_tests.$(OBJEXT):  \
	test/$(am__dirstamp) test/$(DEPDIR)/$(am__dirstamp)
test/test_test_heptafranc-dbwrapper_tests.$(OBJEXT):  \
	test/$(am__dirstamp) test/$(DEPDIR)/$(am__dirstamp)
test/test_test_heptafranc-main_tests.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_test_heptafranc-mempool_tests.$(OBJEXT):  \
	test/$(am__dirstamp) test/$(DEPDIR)/$(am__dirstamp)
test/test_test_heptafranc-merkle_tests.$(OBJEXT):  \
	test/$(am__dirstamp) test/$(DEPDIR)/$(am__dirstamp)
test/test_test_heptafranc-merkleblock_tests.$(OBJEXT):  \
	test/$(am__dirstamp) test/$(DEPDIR)/$(am__dirstamp)
test/test_test_heptafranc-miner_tests.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_test_heptafranc-multisig_tests.$(OBJEXT):  \
	test/$(am__dirstamp) test/$(DEPDIR)/$(am__dirstamp)
test/test_test_heptafranc-net_tests.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_test_heptafranc-netbase_tests.$(OBJEXT):  \
	test/$(am__dirstamp) test/$(DEPDIR)/$(am__dirstamp)
test/test_test_heptafranc-pmt_tests.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_test_heptafranc-policyestimator_tests.$(OBJEXT):  \
	test/$(am__dirstamp) test/$(DEPDIR)/$(am__dirstamp)
test/test_test_heptafranc-pow_tests.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_test_heptafranc-prevector_tests.$(OBJEXT):  \
	test/$(am__dirstamp) test/$(DEPDIR)/$(am__dirstamp)
test/test_test_heptafranc-raii_event_tests.$(OBJEXT):  \
	test/$(am__dirstamp) test/$(DEPDIR)/$(am__dirstamp)
test/test_test_heptafranc-random_tests.$(OBJEXT):  \
	test/$(am__dirstamp) test/$(DEPDIR)/$(am__dirstamp)
test/test_test_heptafranc-reverselock_tests.$(OBJEXT):  \
	test/$(am__dirstamp) test/$(DEPDIR)/$(am__dirstamp)
test/test_test_heptafranc-rpc_tests.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_test_heptafranc-sanity_tests.$(OBJEXT):  \
	test/$(am__dirstamp) test/$(DEPDIR)/$(am__dirstamp)
test/test_test_heptafranc-scheduler_tests.$(OBJEXT):  \
	test/$(am__dirstamp) test/$(DEPDIR)/$(am__dirstamp)
test/test_test_heptafranc-script_p2sh_tests.$(OBJEXT):  \
	test/$(am__dirstamp) test/$(DEPDIR)/$(am__dirstamp)
test/test_test_heptafranc-script_tests.$(OBJEXT):  \
	test/$(am__dirstamp) test/$(DEPDIR)/$(am__dirstamp)
test/test_test_heptafranc-script_standard_tests.$(OBJEXT):  \
	test/$(am__dirstamp) test/$(DEPDIR)/$(am__dirstamp)
test/test_test_heptafranc-scriptnum_tests.$(OBJEXT):  \
	test/$(am__dirstamp) test/$(DEPDIR)/$(am__dirstamp)
test/test_test_heptafranc-serialize_tests.$(OBJEXT):  \
	test/$(am__dirstamp) test/$(DEPDIR)/$(am__dirstamp)
test/test_test_heptafranc-sighash_tests.$(OBJEXT):  \
	test/$(am__dirstamp) test/$(DEPDIR)/$(am__dirstamp)
test/test_test_heptafranc-sigopcount_tests.$(OBJEXT):  \
	test/$(am__dirstamp) test/$(DEPDIR)/$(am__dirstamp)
test/test_test_heptafranc-skiplist_tests.$(OBJEXT):  \
	test/$(am__dirstamp) test/$(DEPDIR)/$(am__dirstamp)
test/test_test_heptafranc-streams_tests.$(OBJEXT):  \
	test/$(am__dirstamp) test/$(DEPDIR)/$(am__dirstamp)
test/test_test_heptafranc-timedata_tests.$(OBJEXT):  \
	test/$(am__dirstamp) test/$(DEPDIR)/$(am__dirstamp)
test/test_test_heptafranc-torcontrol_tests.$(OBJEXT):  \
	test/$(am__dirstamp) test/$(DEPDIR)/$(am__dirstamp)
test/test_test_heptafranc-transaction_tests.$(OBJEXT):  \
	test/$(am__dirstamp) test/$(DEPDIR)/$(am__dirstamp)
test/test_test_heptafranc-txindex_tests.$(OBJEXT):  \
	test/$(am__dirstamp) test/$(DEPDIR)/$(am__dirstamp)
test/test_test_heptafranc-txvalidation_tests.$(OBJEXT):  \
	test/$(am__dirstamp) test/$(DEPDIR)/$(am__dirstamp)
test/test_test_heptafranc-txvalidationcache_tests.$(OBJEXT):  \
	test/$(am__dirstamp) test/$(DEPDIR)/$(am__dirstamp)
test/test_test_heptafranc-uint256_tests.$(OBJEXT):  \
	test/$(am__dirstamp) test/$(DEPDIR)/$(am__dirstamp)
test/test_test_heptafranc-util_tests.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_test_heptafranc-validation_block_tests.$(OBJEXT):  \
	test/$(am__dirstamp) test/$(DEPDIR)/$(am__dirstamp)
test/test_test_heptafranc-versionbits_tests.$(OBJEXT):  \
	test/$(am__dirstamp) test/$(DEPDIR)/$(am__dirstamp)
wallet/test/test_test_heptafranc-accounting_tests.$(OBJEXT):  \
	wallet/test/$(am__dirstamp) \
	wallet/test/$(DEPDIR)/$(am__dirstamp)
wallet/test/test_test_heptafranc-psbt_wallet_tests.$(OBJEXT):  \
	wallet/test/$(am__dirstamp) \
	wallet/test/$(DEPDIR)/$(am__dirstamp)
wallet/test/test_test_heptafranc-wallet_tests.$(OBJEXT):  \
	wallet/test/$(am__dirstamp) \
	wallet/test/$(DEPDIR)/$(am__dirstamp)
wallet/test/test_test_heptafranc-wallet_crypto_tests.$(OBJEXT):  \
	wallet/test/$(am__dirstamp) \
	wallet/test/$(DEPDIR)/$(am__dirstamp)
wallet/test/test_test_heptafranc-coinselector_tests.$(OBJEXT):  \
	wallet/test/$(am__dirstamp) \
	wallet/test/$(DEPDIR)/$(am__dirstamp)

test/test_heptafranc$(EXEEXT): $(test_test_heptafranc_OBJECTS) $(test_test_heptafranc_DEPENDENCIES) $(EXTRA_test_test_heptafranc_DEPENDENCIES) test/$(am__dirstamp)
	@rm -f test/test_heptafranc$(EXEEXT)
	$(AM_V_CXXLD)$(test_test_heptafranc_LINK) $(test_test_heptafranc_OBJECTS) $(test_test_heptafranc_LDADD) $(LIBS)
test/test_test_heptafranc_fuzzy-test_heptafranc_fuzzy.$(OBJEXT):  \
	test/$(am__dirstamp) test/$(DEPDIR)/$(am__dirstamp)

test/test_heptafranc_fuzzy$(EXEEXT): $(test_test_heptafranc_fuzzy_OBJECTS) $(test_test_heptafranc_fuzzy_DEPENDENCIES) $(EXTRA_test_test_heptafranc_fuzzy_DEPENDENCIES) test/$(am__dirstamp)
	@rm -f test/test_heptafranc_fuzzy$(EXEEXT)
	$(AM_V_CXXLD)$(test_test_heptafranc_fuzzy_LINK) $(test_test_heptafranc_fuzzy_OBJECTS) $(test_test_heptafranc_fuzzy_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)
	-rm -f bench/*.$(OBJEXT)
	-rm -f compat/*.$(OBJEXT)
	-rm -f compat/*.lo
	-rm -f consensus/*.$(OBJEXT)
	-rm -f consensus/*.lo
	-rm -f crypto/*.$(OBJEXT)
	-rm -f crypto/*.lo
	-rm -f index/*.$(OBJEXT)
	-rm -f interfaces/*.$(OBJEXT)
	-rm -f leveldb/db/*.$(OBJEXT)
	-rm -f leveldb/helpers/memenv/*.$(OBJEXT)
	-rm -f leveldb/port/*.$(OBJEXT)
	-rm -f leveldb/table/*.$(OBJEXT)
	-rm -f leveldb/util/*.$(OBJEXT)
	-rm -f policy/*.$(OBJEXT)
	-rm -f primitives/*.$(OBJEXT)
	-rm -f primitives/*.lo
	-rm -f qt/*.$(OBJEXT)
	-rm -f qt/res/*.$(OBJEXT)
	-rm -f qt/test/*.$(OBJEXT)
	-rm -f rpc/*.$(OBJEXT)
	-rm -f script/*.$(OBJEXT)
	-rm -f script/*.lo
	-rm -f support/*.$(OBJEXT)
	-rm -f test/*.$(OBJEXT)
	-rm -f wallet/*.$(OBJEXT)
	-rm -f wallet/test/*.$(OBJEXT)
	-rm -f zmq/*.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/heptafranc_cli-heptafranc-cli.Po
include ./$(DEPDIR)/heptafranc_tx-heptafranc-tx.Po
include ./$(DEPDIR)/heptafrancd-heptafrancd.Po
include ./$(DEPDIR)/libheptafranc_common_a-base58.Po
include ./$(DEPDIR)/libheptafranc_common_a-bech32.Po
include ./$(DEPDIR)/libheptafranc_common_a-chainparams.Po
include ./$(DEPDIR)/libheptafranc_common_a-coins.Po
include ./$(DEPDIR)/libheptafranc_common_a-compressor.Po
include ./$(DEPDIR)/libheptafranc_common_a-core_read.Po
include ./$(DEPDIR)/libheptafranc_common_a-core_write.Po
include ./$(DEPDIR)/libheptafranc_common_a-key.Po
include ./$(DEPDIR)/libheptafranc_common_a-key_io.Po
include ./$(DEPDIR)/libheptafranc_common_a-keystore.Po
include ./$(DEPDIR)/libheptafranc_common_a-netaddress.Po
include ./$(DEPDIR)/libheptafranc_common_a-netbase.Po
include ./$(DEPDIR)/libheptafranc_common_a-protocol.Po
include ./$(DEPDIR)/libheptafranc_common_a-scheduler.Po
include ./$(DEPDIR)/libheptafranc_common_a-warnings.Po
include ./$(DEPDIR)/libheptafranc_consensus_a-arith_uint256.Po
include ./$(DEPDIR)/libheptafranc_consensus_a-hash.Po
include ./$(DEPDIR)/libheptafranc_consensus_a-pubkey.Po
include ./$(DEPDIR)/libheptafranc_consensus_a-uint256.Po
include ./$(DEPDIR)/libheptafranc_consensus_a-utilstrencodings.Po
include ./$(DEPDIR)/libheptafranc_server_a-addrdb.Po
include ./$(DEPDIR)/libheptafranc_server_a-addrman.Po
include ./$(DEPDIR)/libheptafranc_server_a-blockencodings.Po
include ./$(DEPDIR)/libheptafranc_server_a-bloom.Po
include ./$(DEPDIR)/libheptafranc_server_a-chain.Po
include ./$(DEPDIR)/libheptafranc_server_a-checkpoints.Po
include ./$(DEPDIR)/libheptafranc_server_a-dbwrapper.Po
include ./$(DEPDIR)/libheptafranc_server_a-httprpc.Po
include ./$(DEPDIR)/libheptafranc_server_a-httpserver.Po
include ./$(DEPDIR)/libheptafranc_server_a-init.Po
include ./$(DEPDIR)/libheptafranc_server_a-merkleblock.Po
include ./$(DEPDIR)/libheptafranc_server_a-miner.Po
include ./$(DEPDIR)/libheptafranc_server_a-net.Po
include ./$(DEPDIR)/libheptafranc_server_a-net_processing.Po
include ./$(DEPDIR)/libheptafranc_server_a-noui.Po
include ./$(DEPDIR)/libheptafranc_server_a-outputtype.Po
include ./$(DEPDIR)/libheptafranc_server_a-pow.Po
include ./$(DEPDIR)/libheptafranc_server_a-rest.Po
include ./$(DEPDIR)/libheptafranc_server_a-shutdown.Po
include ./$(DEPDIR)/libheptafranc_server_a-timedata.Po
include ./$(DEPDIR)/libheptafranc_server_a-torcontrol.Po
include ./$(DEPDIR)/libheptafranc_server_a-txdb.Po
include ./$(DEPDIR)/libheptafranc_server_a-txmempool.Po
include ./$(DEPDIR)/libheptafranc_server_a-ui_interface.Po
include ./$(DEPDIR)/libheptafranc_server_a-validation.Po
include ./$(DEPDIR)/libheptafranc_server_a-validationinterface.Po
include ./$(DEPDIR)/libheptafranc_server_a-versionbits.Po
include ./$(DEPDIR)/libheptafranc_util_a-chainparamsbase.Po
include ./$(DEPDIR)/libheptafranc_util_a-clientversion.Po
include ./$(DEPDIR)/libheptafranc_util_a-fs.Po
include ./$(DEPDIR)/libheptafranc_util_a-logging.Po
include ./$(DEPDIR)/libheptafranc_util_a-random.Po
include ./$(DEPDIR)/libheptafranc_util_a-sync.Po
include ./$(DEPDIR)/libheptafranc_util_a-threadinterrupt.Po
include ./$(DEPDIR)/libheptafranc_util_a-util.Po
include ./$(DEPDIR)/libheptafranc_util_a-utilmoneystr.Po
include ./$(DEPDIR)/libheptafranc_util_a-utilstrencodings.Po
include ./$(DEPDIR)/libheptafranc_util_a-utiltime.Po
include ./$(DEPDIR)/libheptafrancconsensus_la-arith_uint256.Plo
include ./$(DEPDIR)/libheptafrancconsensus_la-hash.Plo
include ./$(DEPDIR)/libheptafrancconsensus_la-pubkey.Plo
include ./$(DEPDIR)/libheptafrancconsensus_la-uint256.Plo
include ./$(DEPDIR)/libheptafrancconsensus_la-utilstrencodings.Plo
include bench/$(DEPDIR)/bench_bench_heptafranc-base58.Po
include bench/$(DEPDIR)/bench_bench_heptafranc-bech32.Po
include bench/$(DEPDIR)/bench_bench_heptafranc-bench.Po
include bench/$(DEPDIR)/bench_bench_heptafranc-bench_heptafranc.Po
include bench/$(DEPDIR)/bench_bench_heptafranc-block_assemble.Po
include bench/$(DEPDIR)/bench_bench_heptafranc-ccoins_caching.Po
include bench/$(DEPDIR)/bench_bench_heptafranc-checkblock.Po
include bench/$(DEPDIR)/bench_bench_heptafranc-checkqueue.Po
include bench/$(DEPDIR)/bench_bench_heptafranc-coin_selection.Po
include bench/$(DEPDIR)/bench_bench_heptafranc-crypto_hash.Po
include bench/$(DEPDIR)/bench_bench_heptafranc-examples.Po
include bench/$(DEPDIR)/bench_bench_heptafranc-lockedpool.Po
include bench/$(DEPDIR)/bench_bench_heptafranc-mempool_eviction.Po
include bench/$(DEPDIR)/bench_bench_heptafranc-merkle_root.Po
include bench/$(DEPDIR)/bench_bench_heptafranc-prevector.Po
include bench/$(DEPDIR)/bench_bench_heptafranc-rollingbloom.Po
include bench/$(DEPDIR)/bench_bench_heptafranc-verify_script.Po
include compat/$(DEPDIR)/libheptafranc_util_a-glibc_compat.Po
include compat/$(DEPDIR)/libheptafranc_util_a-glibc_sanity.Po
include compat/$(DEPDIR)/libheptafranc_util_a-glibcxx_sanity.Po
include compat/$(DEPDIR)/libheptafranc_util_a-strnlen.Po
include compat/$(DEPDIR)/libheptafrancconsensus_la-glibc_compat.Plo
include consensus/$(DEPDIR)/libheptafranc_consensus_a-merkle.Po
include consensus/$(DEPDIR)/libheptafranc_server_a-tx_verify.Po
include consensus/$(DEPDIR)/libheptafrancconsensus_la-merkle.Plo
include crypto/$(DEPDIR)/crypto_libheptafranc_crypto_avx2_a-sha256_avx2.Po
include crypto/$(DEPDIR)/crypto_libheptafranc_crypto_base_a-aes.Po
include crypto/$(DEPDIR)/crypto_libheptafranc_crypto_base_a-chacha20.Po
include crypto/$(DEPDIR)/crypto_libheptafranc_crypto_base_a-hmac_sha256.Po
include crypto/$(DEPDIR)/crypto_libheptafranc_crypto_base_a-hmac_sha512.Po
include crypto/$(DEPDIR)/crypto_libheptafranc_crypto_base_a-ripemd160.Po
include crypto/$(DEPDIR)/crypto_libheptafranc_crypto_base_a-sha1.Po
include crypto/$(DEPDIR)/crypto_libheptafranc_crypto_base_a-sha256.Po
include crypto/$(DEPDIR)/crypto_libheptafranc_crypto_base_a-sha256_sse4.Po
include crypto/$(DEPDIR)/crypto_libheptafranc_crypto_base_a-sha512.Po
include crypto/$(DEPDIR)/crypto_libheptafranc_crypto_shani_a-sha256_shani.Po
include crypto/$(DEPDIR)/crypto_libheptafranc_crypto_sse41_a-sha256_sse41.Po
include crypto/$(DEPDIR)/libheptafrancconsensus_la-aes.Plo
include crypto/$(DEPDIR)/libheptafrancconsensus_la-chacha20.Plo
include crypto/$(DEPDIR)/libheptafrancconsensus_la-hmac_sha256.Plo
include crypto/$(DEPDIR)/libheptafrancconsensus_la-hmac_sha512.Plo
include crypto/$(DEPDIR)/libheptafrancconsensus_la-ripemd160.Plo
include crypto/$(DEPDIR)/libheptafrancconsensus_la-sha1.Plo
include crypto/$(DEPDIR)/libheptafrancconsensus_la-sha256.Plo
include crypto/$(DEPDIR)/libheptafrancconsensus_la-sha256_sse4.Plo
include crypto/$(DEPDIR)/libheptafrancconsensus_la-sha512.Plo
include index/$(DEPDIR)/libheptafranc_server_a-base.Po
include index/$(DEPDIR)/libheptafranc_server_a-txindex.Po
include interfaces/$(DEPDIR)/libheptafranc_util_a-handler.Po
include interfaces/$(DEPDIR)/libheptafranc_util_a-node.Po
include interfaces/$(DEPDIR)/libheptafranc_wallet_a-wallet.Po
include leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-builder.Po
include leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-c.Po
include leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-db_impl.Po
include leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-db_iter.Po
include leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-dbformat.Po
include leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-dumpfile.Po
include leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-filename.Po
include leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-log_reader.Po
include leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-log_writer.Po
include leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-memtable.Po
include leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-repair.Po
include leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-table_cache.Po
include leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-version_edit.Po
include leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-version_set.Po
include leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-write_batch.Po
include leveldb/helpers/memenv/$(DEPDIR)/leveldb_libmemenv_a-memenv.Po
include leveldb/port/$(DEPDIR)/leveldb_libleveldb_a-port_posix.Po
include leveldb/port/$(DEPDIR)/leveldb_libleveldb_a-port_win.Po
include leveldb/port/$(DEPDIR)/leveldb_libleveldb_sse42_a-port_posix_sse.Po
include leveldb/table/$(DEPDIR)/leveldb_libleveldb_a-block.Po
include leveldb/table/$(DEPDIR)/leveldb_libleveldb_a-block_builder.Po
include leveldb/table/$(DEPDIR)/leveldb_libleveldb_a-filter_block.Po
include leveldb/table/$(DEPDIR)/leveldb_libleveldb_a-format.Po
include leveldb/table/$(DEPDIR)/leveldb_libleveldb_a-iterator.Po
include leveldb/table/$(DEPDIR)/leveldb_libleveldb_a-merger.Po
include leveldb/table/$(DEPDIR)/leveldb_libleveldb_a-table.Po
include leveldb/table/$(DEPDIR)/leveldb_libleveldb_a-table_builder.Po
include leveldb/table/$(DEPDIR)/leveldb_libleveldb_a-two_level_iterator.Po
include leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-arena.Po
include leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-bloom.Po
include leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-cache.Po
include leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-coding.Po
include leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-comparator.Po
include leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-crc32c.Po
include leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-env.Po
include leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-env_posix.Po
include leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-env_win.Po
include leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-filter_policy.Po
include leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-hash.Po
include leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-histogram.Po
include leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-logging.Po
include leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-options.Po
include leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-status.Po
include policy/$(DEPDIR)/libheptafranc_common_a-feerate.Po
include policy/$(DEPDIR)/libheptafranc_server_a-fees.Po
include policy/$(DEPDIR)/libheptafranc_server_a-policy.Po
include policy/$(DEPDIR)/libheptafranc_server_a-rbf.Po
include primitives/$(DEPDIR)/libheptafranc_consensus_a-block.Po
include primitives/$(DEPDIR)/libheptafranc_consensus_a-transaction.Po
include primitives/$(DEPDIR)/libheptafrancconsensus_la-block.Plo
include primitives/$(DEPDIR)/libheptafrancconsensus_la-transaction.Plo
include qt/$(DEPDIR)/qt_heptafranc_qt-heptafranc.Po
include qt/$(DEPDIR)/qt_heptafranc_qt-macdockiconhandler.Po
include qt/$(DEPDIR)/qt_heptafranc_qt-macnotificationhandler.Po
include qt/$(DEPDIR)/qt_libheptafrancqt_a-addressbookpage.Po
include qt/$(DEPDIR)/qt_libheptafrancqt_a-addresstablemodel.Po
include qt/$(DEPDIR)/qt_libheptafrancqt_a-askpassphrasedialog.Po
include qt/$(DEPDIR)/qt_libheptafrancqt_a-bantablemodel.Po
include qt/$(DEPDIR)/qt_libheptafrancqt_a-clientmodel.Po
include qt/$(DEPDIR)/qt_libheptafrancqt_a-coincontroldialog.Po
include qt/$(DEPDIR)/qt_libheptafrancqt_a-coincontroltreewidget.Po
include qt/$(DEPDIR)/qt_libheptafrancqt_a-csvmodelwriter.Po
include qt/$(DEPDIR)/qt_libheptafrancqt_a-editaddressdialog.Po
include qt/$(DEPDIR)/qt_libheptafrancqt_a-guiutil.Po
include qt/$(DEPDIR)/qt_libheptafrancqt_a-heptafrancaddressvalidator.Po
include qt/$(DEPDIR)/qt_libheptafrancqt_a-heptafrancamountfield.Po
include qt/$(DEPDIR)/qt_libheptafrancqt_a-heptafrancgui.Po
include qt/$(DEPDIR)/qt_libheptafrancqt_a-heptafrancunits.Po
include qt/$(DEPDIR)/qt_libheptafrancqt_a-intro.Po
include qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_addressbookpage.Po
include qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_addresstablemodel.Po
include qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_askpassphrasedialog.Po
include qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_bantablemodel.Po
include qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_callback.Po
include qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_clientmodel.Po
include qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_coincontroldialog.Po
include qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_coincontroltreewidget.Po
include qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_csvmodelwriter.Po
include qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_editaddressdialog.Po
include qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_guiutil.Po
include qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_heptafrancaddressvalidator.Po
include qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_heptafrancamountfield.Po
include qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_heptafrancgui.Po
include qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_heptafrancunits.Po
include qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_intro.Po
include qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_macdockiconhandler.Po
include qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_macnotificationhandler.Po
include qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_modaloverlay.Po
include qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_notificator.Po
include qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_openuridialog.Po
include qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_optionsdialog.Po
include qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_optionsmodel.Po
include qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_overviewpage.Po
include qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_paymentserver.Po
include qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_peertablemodel.Po
include qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_qvalidatedlineedit.Po
include qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_qvaluecombobox.Po
include qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_receivecoinsdialog.Po
include qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_receiverequestdialog.Po
include qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_recentrequeststablemodel.Po
include qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_rpcconsole.Po
include qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_sendcoinsdialog.Po
include qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_sendcoinsentry.Po
include qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_signverifymessagedialog.Po
include qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_splashscreen.Po
include qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_trafficgraphwidget.Po
include qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_transactiondesc.Po
include qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_transactiondescdialog.Po
include qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_transactionfilterproxy.Po
include qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_transactiontablemodel.Po
include qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_transactionview.Po
include qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_utilitydialog.Po
include qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_walletframe.Po
include qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_walletmodel.Po
include qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_walletview.Po
include qt/$(DEPDIR)/qt_libheptafrancqt_a-modaloverlay.Po
include qt/$(DEPDIR)/qt_libheptafrancqt_a-networkstyle.Po
include qt/$(DEPDIR)/qt_libheptafrancqt_a-notificator.Po
include qt/$(DEPDIR)/qt_libheptafrancqt_a-openuridialog.Po
include qt/$(DEPDIR)/qt_libheptafrancqt_a-optionsdialog.Po
include qt/$(DEPDIR)/qt_libheptafrancqt_a-optionsmodel.Po
include qt/$(DEPDIR)/qt_libheptafrancqt_a-overviewpage.Po
include qt/$(DEPDIR)/qt_libheptafrancqt_a-paymentrequest.pb.Po
include qt/$(DEPDIR)/qt_libheptafrancqt_a-paymentrequestplus.Po
include qt/$(DEPDIR)/qt_libheptafrancqt_a-paymentserver.Po
include qt/$(DEPDIR)/qt_libheptafrancqt_a-peertablemodel.Po
include qt/$(DEPDIR)/qt_libheptafrancqt_a-platformstyle.Po
include qt/$(DEPDIR)/qt_libheptafrancqt_a-qrc_heptafranc.Po
include qt/$(DEPDIR)/qt_libheptafrancqt_a-qrc_heptafranc_locale.Po
include qt/$(DEPDIR)/qt_libheptafrancqt_a-qvalidatedlineedit.Po
include qt/$(DEPDIR)/qt_libheptafrancqt_a-qvaluecombobox.Po
include qt/$(DEPDIR)/qt_libheptafrancqt_a-receivecoinsdialog.Po
include qt/$(DEPDIR)/qt_libheptafrancqt_a-receiverequestdialog.Po
include qt/$(DEPDIR)/qt_libheptafrancqt_a-recentrequeststablemodel.Po
include qt/$(DEPDIR)/qt_libheptafrancqt_a-rpcconsole.Po
include qt/$(DEPDIR)/qt_libheptafrancqt_a-sendcoinsdialog.Po
include qt/$(DEPDIR)/qt_libheptafrancqt_a-sendcoinsentry.Po
include qt/$(DEPDIR)/qt_libheptafrancqt_a-signverifymessagedialog.Po
include qt/$(DEPDIR)/qt_libheptafrancqt_a-splashscreen.Po
include qt/$(DEPDIR)/qt_libheptafrancqt_a-trafficgraphwidget.Po
include qt/$(DEPDIR)/qt_libheptafrancqt_a-transactiondesc.Po
include qt/$(DEPDIR)/qt_libheptafrancqt_a-transactiondescdialog.Po
include qt/$(DEPDIR)/qt_libheptafrancqt_a-transactionfilterproxy.Po
include qt/$(DEPDIR)/qt_libheptafrancqt_a-transactionrecord.Po
include qt/$(DEPDIR)/qt_libheptafrancqt_a-transactiontablemodel.Po
include qt/$(DEPDIR)/qt_libheptafrancqt_a-transactionview.Po
include qt/$(DEPDIR)/qt_libheptafrancqt_a-utilitydialog.Po
include qt/$(DEPDIR)/qt_libheptafrancqt_a-walletframe.Po
include qt/$(DEPDIR)/qt_libheptafrancqt_a-walletmodel.Po
include qt/$(DEPDIR)/qt_libheptafrancqt_a-walletmodeltransaction.Po
include qt/$(DEPDIR)/qt_libheptafrancqt_a-walletview.Po
include qt/$(DEPDIR)/qt_libheptafrancqt_a-winshutdownmonitor.Po
include qt/test/$(DEPDIR)/qt_test_test_heptafranc_qt-addressbooktests.Po
include qt/test/$(DEPDIR)/qt_test_test_heptafranc_qt-compattests.Po
include qt/test/$(DEPDIR)/qt_test_test_heptafranc_qt-moc_addressbooktests.Po
include qt/test/$(DEPDIR)/qt_test_test_heptafranc_qt-moc_compattests.Po
include qt/test/$(DEPDIR)/qt_test_test_heptafranc_qt-moc_paymentservertests.Po
include qt/test/$(DEPDIR)/qt_test_test_heptafranc_qt-moc_rpcnestedtests.Po
include qt/test/$(DEPDIR)/qt_test_test_heptafranc_qt-moc_uritests.Po
include qt/test/$(DEPDIR)/qt_test_test_heptafranc_qt-moc_wallettests.Po
include qt/test/$(DEPDIR)/qt_test_test_heptafranc_qt-paymentservertests.Po
include qt/test/$(DEPDIR)/qt_test_test_heptafranc_qt-rpcnestedtests.Po
include qt/test/$(DEPDIR)/qt_test_test_heptafranc_qt-test_main.Po
include qt/test/$(DEPDIR)/qt_test_test_heptafranc_qt-uritests.Po
include qt/test/$(DEPDIR)/qt_test_test_heptafranc_qt-util.Po
include qt/test/$(DEPDIR)/qt_test_test_heptafranc_qt-wallettests.Po
include rpc/$(DEPDIR)/libheptafranc_cli_a-client.Po
include rpc/$(DEPDIR)/libheptafranc_server_a-blockchain.Po
include rpc/$(DEPDIR)/libheptafranc_server_a-mining.Po
include rpc/$(DEPDIR)/libheptafranc_server_a-misc.Po
include rpc/$(DEPDIR)/libheptafranc_server_a-net.Po
include rpc/$(DEPDIR)/libheptafranc_server_a-rawtransaction.Po
include rpc/$(DEPDIR)/libheptafranc_server_a-server.Po
include rpc/$(DEPDIR)/libheptafranc_server_a-util.Po
include rpc/$(DEPDIR)/libheptafranc_util_a-protocol.Po
include script/$(DEPDIR)/libheptafranc_common_a-descriptor.Po
include script/$(DEPDIR)/libheptafranc_common_a-ismine.Po
include script/$(DEPDIR)/libheptafranc_common_a-sign.Po
include script/$(DEPDIR)/libheptafranc_common_a-standard.Po
include script/$(DEPDIR)/libheptafranc_consensus_a-heptafrancconsensus.Po
include script/$(DEPDIR)/libheptafranc_consensus_a-interpreter.Po
include script/$(DEPDIR)/libheptafranc_consensus_a-script.Po
include script/$(DEPDIR)/libheptafranc_consensus_a-script_error.Po
include script/$(DEPDIR)/libheptafranc_server_a-sigcache.Po
include script/$(DEPDIR)/libheptafrancconsensus_la-heptafrancconsensus.Plo
include script/$(DEPDIR)/libheptafrancconsensus_la-interpreter.Plo
include script/$(DEPDIR)/libheptafrancconsensus_la-script.Plo
include script/$(DEPDIR)/libheptafrancconsensus_la-script_error.Plo
include support/$(DEPDIR)/libheptafranc_util_a-cleanse.Po
include support/$(DEPDIR)/libheptafranc_util_a-lockedpool.Po
include test/$(DEPDIR)/qt_test_test_heptafranc_qt-test_heptafranc.Po
include test/$(DEPDIR)/test_test_heptafranc-addrman_tests.Po
include test/$(DEPDIR)/test_test_heptafranc-allocator_tests.Po
include test/$(DEPDIR)/test_test_heptafranc-amount_tests.Po
include test/$(DEPDIR)/test_test_heptafranc-arith_uint256_tests.Po
include test/$(DEPDIR)/test_test_heptafranc-base32_tests.Po
include test/$(DEPDIR)/test_test_heptafranc-base58_tests.Po
include test/$(DEPDIR)/test_test_heptafranc-base64_tests.Po
include test/$(DEPDIR)/test_test_heptafranc-bech32_tests.Po
include test/$(DEPDIR)/test_test_heptafranc-bip32_tests.Po
include test/$(DEPDIR)/test_test_heptafranc-blockchain_tests.Po
include test/$(DEPDIR)/test_test_heptafranc-blockencodings_tests.Po
include test/$(DEPDIR)/test_test_heptafranc-bloom_tests.Po
include test/$(DEPDIR)/test_test_heptafranc-bswap_tests.Po
include test/$(DEPDIR)/test_test_heptafranc-checkqueue_tests.Po
include test/$(DEPDIR)/test_test_heptafranc-coins_tests.Po
include test/$(DEPDIR)/test_test_heptafranc-compress_tests.Po
include test/$(DEPDIR)/test_test_heptafranc-crypto_tests.Po
include test/$(DEPDIR)/test_test_heptafranc-cuckoocache_tests.Po
include test/$(DEPDIR)/test_test_heptafranc-dbwrapper_tests.Po
include test/$(DEPDIR)/test_test_heptafranc-denialofservice_tests.Po
include test/$(DEPDIR)/test_test_heptafranc-descriptor_tests.Po
include test/$(DEPDIR)/test_test_heptafranc-getarg_tests.Po
include test/$(DEPDIR)/test_test_heptafranc-hash_tests.Po
include test/$(DEPDIR)/test_test_heptafranc-key_io_tests.Po
include test/$(DEPDIR)/test_test_heptafranc-key_tests.Po
include test/$(DEPDIR)/test_test_heptafranc-limitedmap_tests.Po
include test/$(DEPDIR)/test_test_heptafranc-main_tests.Po
include test/$(DEPDIR)/test_test_heptafranc-mempool_tests.Po
include test/$(DEPDIR)/test_test_heptafranc-merkle_tests.Po
include test/$(DEPDIR)/test_test_heptafranc-merkleblock_tests.Po
include test/$(DEPDIR)/test_test_heptafranc-miner_tests.Po
include test/$(DEPDIR)/test_test_heptafranc-multisig_tests.Po
include test/$(DEPDIR)/test_test_heptafranc-net_tests.Po
include test/$(DEPDIR)/test_test_heptafranc-netbase_tests.Po
include test/$(DEPDIR)/test_test_heptafranc-pmt_tests.Po
include test/$(DEPDIR)/test_test_heptafranc-policyestimator_tests.Po
include test/$(DEPDIR)/test_test_heptafranc-pow_tests.Po
include test/$(DEPDIR)/test_test_heptafranc-prevector_tests.Po
include test/$(DEPDIR)/test_test_heptafranc-raii_event_tests.Po
include test/$(DEPDIR)/test_test_heptafranc-random_tests.Po
include test/$(DEPDIR)/test_test_heptafranc-reverselock_tests.Po
include test/$(DEPDIR)/test_test_heptafranc-rpc_tests.Po
include test/$(DEPDIR)/test_test_heptafranc-sanity_tests.Po
include test/$(DEPDIR)/test_test_heptafranc-scheduler_tests.Po
include test/$(DEPDIR)/test_test_heptafranc-script_p2sh_tests.Po
include test/$(DEPDIR)/test_test_heptafranc-script_standard_tests.Po
include test/$(DEPDIR)/test_test_heptafranc-script_tests.Po
include test/$(DEPDIR)/test_test_heptafranc-scriptnum_tests.Po
include test/$(DEPDIR)/test_test_heptafranc-serialize_tests.Po
include test/$(DEPDIR)/test_test_heptafranc-sighash_tests.Po
include test/$(DEPDIR)/test_test_heptafranc-sigopcount_tests.Po
include test/$(DEPDIR)/test_test_heptafranc-skiplist_tests.Po
include test/$(DEPDIR)/test_test_heptafranc-streams_tests.Po
include test/$(DEPDIR)/test_test_heptafranc-test_heptafranc.Po
include test/$(DEPDIR)/test_test_heptafranc-test_heptafranc_main.Po
include test/$(DEPDIR)/test_test_heptafranc-timedata_tests.Po
include test/$(DEPDIR)/test_test_heptafranc-torcontrol_tests.Po
include test/$(DEPDIR)/test_test_heptafranc-transaction_tests.Po
include test/$(DEPDIR)/test_test_heptafranc-txindex_tests.Po
include test/$(DEPDIR)/test_test_heptafranc-txvalidation_tests.Po
include test/$(DEPDIR)/test_test_heptafranc-txvalidationcache_tests.Po
include test/$(DEPDIR)/test_test_heptafranc-uint256_tests.Po
include test/$(DEPDIR)/test_test_heptafranc-util_tests.Po
include test/$(DEPDIR)/test_test_heptafranc-validation_block_tests.Po
include test/$(DEPDIR)/test_test_heptafranc-versionbits_tests.Po
include test/$(DEPDIR)/test_test_heptafranc_fuzzy-test_heptafranc_fuzzy.Po
include wallet/$(DEPDIR)/libheptafranc_wallet_a-coincontrol.Po
include wallet/$(DEPDIR)/libheptafranc_wallet_a-coinselection.Po
include wallet/$(DEPDIR)/libheptafranc_wallet_a-crypter.Po
include wallet/$(DEPDIR)/libheptafranc_wallet_a-db.Po
include wallet/$(DEPDIR)/libheptafranc_wallet_a-feebumper.Po
include wallet/$(DEPDIR)/libheptafranc_wallet_a-fees.Po
include wallet/$(DEPDIR)/libheptafranc_wallet_a-init.Po
include wallet/$(DEPDIR)/libheptafranc_wallet_a-rpcdump.Po
include wallet/$(DEPDIR)/libheptafranc_wallet_a-rpcwallet.Po
include wallet/$(DEPDIR)/libheptafranc_wallet_a-wallet.Po
include wallet/$(DEPDIR)/libheptafranc_wallet_a-walletdb.Po
include wallet/$(DEPDIR)/libheptafranc_wallet_a-walletutil.Po
include wallet/test/$(DEPDIR)/qt_test_test_heptafranc_qt-wallet_test_fixture.Po
include wallet/test/$(DEPDIR)/test_test_heptafranc-accounting_tests.Po
include wallet/test/$(DEPDIR)/test_test_heptafranc-coinselector_tests.Po
include wallet/test/$(DEPDIR)/test_test_heptafranc-psbt_wallet_tests.Po
include wallet/test/$(DEPDIR)/test_test_heptafranc-wallet_crypto_tests.Po
include wallet/test/$(DEPDIR)/test_test_heptafranc-wallet_test_fixture.Po
include wallet/test/$(DEPDIR)/test_test_heptafranc-wallet_tests.Po
include zmq/$(DEPDIR)/libheptafranc_zmq_a-zmqabstractnotifier.Po
include zmq/$(DEPDIR)/libheptafranc_zmq_a-zmqnotificationinterface.Po
include zmq/$(DEPDIR)/libheptafranc_zmq_a-zmqpublishnotifier.Po
include zmq/$(DEPDIR)/libheptafranc_zmq_a-zmqrpc.Po

.cc.o:
	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXXCOMPILE) -c -o $@ $<

.cc.obj:
	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cc.lo:
	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.lo$$||'`;\
	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Plo
#	$(AM_V_CXX)source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LTCXXCOMPILE) -c -o $@ $<

crypto/crypto_libheptafranc_crypto_avx2_a-sha256_avx2.o: crypto/sha256_avx2.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libheptafranc_crypto_avx2_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libheptafranc_crypto_avx2_a_CXXFLAGS) $(CXXFLAGS) -MT crypto/crypto_libheptafranc_crypto_avx2_a-sha256_avx2.o -MD -MP -MF crypto/$(DEPDIR)/crypto_libheptafranc_crypto_avx2_a-sha256_avx2.Tpo -c -o crypto/crypto_libheptafranc_crypto_avx2_a-sha256_avx2.o `test -f 'crypto/sha256_avx2.cpp' || echo '$(srcdir)/'`crypto/sha256_avx2.cpp
	$(AM_V_at)$(am__mv) crypto/$(DEPDIR)/crypto_libheptafranc_crypto_avx2_a-sha256_avx2.Tpo crypto/$(DEPDIR)/crypto_libheptafranc_crypto_avx2_a-sha256_avx2.Po
#	$(AM_V_CXX)source='crypto/sha256_avx2.cpp' object='crypto/crypto_libheptafranc_crypto_avx2_a-sha256_avx2.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libheptafranc_crypto_avx2_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libheptafranc_crypto_avx2_a_CXXFLAGS) $(CXXFLAGS) -c -o crypto/crypto_libheptafranc_crypto_avx2_a-sha256_avx2.o `test -f 'crypto/sha256_avx2.cpp' || echo '$(srcdir)/'`crypto/sha256_avx2.cpp

crypto/crypto_libheptafranc_crypto_avx2_a-sha256_avx2.obj: crypto/sha256_avx2.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libheptafranc_crypto_avx2_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libheptafranc_crypto_avx2_a_CXXFLAGS) $(CXXFLAGS) -MT crypto/crypto_libheptafranc_crypto_avx2_a-sha256_avx2.obj -MD -MP -MF crypto/$(DEPDIR)/crypto_libheptafranc_crypto_avx2_a-sha256_avx2.Tpo -c -o crypto/crypto_libheptafranc_crypto_avx2_a-sha256_avx2.obj `if test -f 'crypto/sha256_avx2.cpp'; then $(CYGPATH_W) 'crypto/sha256_avx2.cpp'; else $(CYGPATH_W) '$(srcdir)/crypto/sha256_avx2.cpp'; fi`
	$(AM_V_at)$(am__mv) crypto/$(DEPDIR)/crypto_libheptafranc_crypto_avx2_a-sha256_avx2.Tpo crypto/$(DEPDIR)/crypto_libheptafranc_crypto_avx2_a-sha256_avx2.Po
#	$(AM_V_CXX)source='crypto/sha256_avx2.cpp' object='crypto/crypto_libheptafranc_crypto_avx2_a-sha256_avx2.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libheptafranc_crypto_avx2_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libheptafranc_crypto_avx2_a_CXXFLAGS) $(CXXFLAGS) -c -o crypto/crypto_libheptafranc_crypto_avx2_a-sha256_avx2.obj `if test -f 'crypto/sha256_avx2.cpp'; then $(CYGPATH_W) 'crypto/sha256_avx2.cpp'; else $(CYGPATH_W) '$(srcdir)/crypto/sha256_avx2.cpp'; fi`

crypto/crypto_libheptafranc_crypto_base_a-aes.o: crypto/aes.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libheptafranc_crypto_base_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libheptafranc_crypto_base_a_CXXFLAGS) $(CXXFLAGS) -MT crypto/crypto_libheptafranc_crypto_base_a-aes.o -MD -MP -MF crypto/$(DEPDIR)/crypto_libheptafranc_crypto_base_a-aes.Tpo -c -o crypto/crypto_libheptafranc_crypto_base_a-aes.o `test -f 'crypto/aes.cpp' || echo '$(srcdir)/'`crypto/aes.cpp
	$(AM_V_at)$(am__mv) crypto/$(DEPDIR)/crypto_libheptafranc_crypto_base_a-aes.Tpo crypto/$(DEPDIR)/crypto_libheptafranc_crypto_base_a-aes.Po
#	$(AM_V_CXX)source='crypto/aes.cpp' object='crypto/crypto_libheptafranc_crypto_base_a-aes.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libheptafranc_crypto_base_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libheptafranc_crypto_base_a_CXXFLAGS) $(CXXFLAGS) -c -o crypto/crypto_libheptafranc_crypto_base_a-aes.o `test -f 'crypto/aes.cpp' || echo '$(srcdir)/'`crypto/aes.cpp

crypto/crypto_libheptafranc_crypto_base_a-aes.obj: crypto/aes.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libheptafranc_crypto_base_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libheptafranc_crypto_base_a_CXXFLAGS) $(CXXFLAGS) -MT crypto/crypto_libheptafranc_crypto_base_a-aes.obj -MD -MP -MF crypto/$(DEPDIR)/crypto_libheptafranc_crypto_base_a-aes.Tpo -c -o crypto/crypto_libheptafranc_crypto_base_a-aes.obj `if test -f 'crypto/aes.cpp'; then $(CYGPATH_W) 'crypto/aes.cpp'; else $(CYGPATH_W) '$(srcdir)/crypto/aes.cpp'; fi`
	$(AM_V_at)$(am__mv) crypto/$(DEPDIR)/crypto_libheptafranc_crypto_base_a-aes.Tpo crypto/$(DEPDIR)/crypto_libheptafranc_crypto_base_a-aes.Po
#	$(AM_V_CXX)source='crypto/aes.cpp' object='crypto/crypto_libheptafranc_crypto_base_a-aes.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libheptafranc_crypto_base_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libheptafranc_crypto_base_a_CXXFLAGS) $(CXXFLAGS) -c -o crypto/crypto_libheptafranc_crypto_base_a-aes.obj `if test -f 'crypto/aes.cpp'; then $(CYGPATH_W) 'crypto/aes.cpp'; else $(CYGPATH_W) '$(srcdir)/crypto/aes.cpp'; fi`

crypto/crypto_libheptafranc_crypto_base_a-chacha20.o: crypto/chacha20.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libheptafranc_crypto_base_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libheptafranc_crypto_base_a_CXXFLAGS) $(CXXFLAGS) -MT crypto/crypto_libheptafranc_crypto_base_a-chacha20.o -MD -MP -MF crypto/$(DEPDIR)/crypto_libheptafranc_crypto_base_a-chacha20.Tpo -c -o crypto/crypto_libheptafranc_crypto_base_a-chacha20.o `test -f 'crypto/chacha20.cpp' || echo '$(srcdir)/'`crypto/chacha20.cpp
	$(AM_V_at)$(am__mv) crypto/$(DEPDIR)/crypto_libheptafranc_crypto_base_a-chacha20.Tpo crypto/$(DEPDIR)/crypto_libheptafranc_crypto_base_a-chacha20.Po
#	$(AM_V_CXX)source='crypto/chacha20.cpp' object='crypto/crypto_libheptafranc_crypto_base_a-chacha20.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libheptafranc_crypto_base_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libheptafranc_crypto_base_a_CXXFLAGS) $(CXXFLAGS) -c -o crypto/crypto_libheptafranc_crypto_base_a-chacha20.o `test -f 'crypto/chacha20.cpp' || echo '$(srcdir)/'`crypto/chacha20.cpp

crypto/crypto_libheptafranc_crypto_base_a-chacha20.obj: crypto/chacha20.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libheptafranc_crypto_base_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libheptafranc_crypto_base_a_CXXFLAGS) $(CXXFLAGS) -MT crypto/crypto_libheptafranc_crypto_base_a-chacha20.obj -MD -MP -MF crypto/$(DEPDIR)/crypto_libheptafranc_crypto_base_a-chacha20.Tpo -c -o crypto/crypto_libheptafranc_crypto_base_a-chacha20.obj `if test -f 'crypto/chacha20.cpp'; then $(CYGPATH_W) 'crypto/chacha20.cpp'; else $(CYGPATH_W) '$(srcdir)/crypto/chacha20.cpp'; fi`
	$(AM_V_at)$(am__mv) crypto/$(DEPDIR)/crypto_libheptafranc_crypto_base_a-chacha20.Tpo crypto/$(DEPDIR)/crypto_libheptafranc_crypto_base_a-chacha20.Po
#	$(AM_V_CXX)source='crypto/chacha20.cpp' object='crypto/crypto_libheptafranc_crypto_base_a-chacha20.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libheptafranc_crypto_base_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libheptafranc_crypto_base_a_CXXFLAGS) $(CXXFLAGS) -c -o crypto/crypto_libheptafranc_crypto_base_a-chacha20.obj `if test -f 'crypto/chacha20.cpp'; then $(CYGPATH_W) 'crypto/chacha20.cpp'; else $(CYGPATH_W) '$(srcdir)/crypto/chacha20.cpp'; fi`

crypto/crypto_libheptafranc_crypto_base_a-hmac_sha256.o: crypto/hmac_sha256.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libheptafranc_crypto_base_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libheptafranc_crypto_base_a_CXXFLAGS) $(CXXFLAGS) -MT crypto/crypto_libheptafranc_crypto_base_a-hmac_sha256.o -MD -MP -MF crypto/$(DEPDIR)/crypto_libheptafranc_crypto_base_a-hmac_sha256.Tpo -c -o crypto/crypto_libheptafranc_crypto_base_a-hmac_sha256.o `test -f 'crypto/hmac_sha256.cpp' || echo '$(srcdir)/'`crypto/hmac_sha256.cpp
	$(AM_V_at)$(am__mv) crypto/$(DEPDIR)/crypto_libheptafranc_crypto_base_a-hmac_sha256.Tpo crypto/$(DEPDIR)/crypto_libheptafranc_crypto_base_a-hmac_sha256.Po
#	$(AM_V_CXX)source='crypto/hmac_sha256.cpp' object='crypto/crypto_libheptafranc_crypto_base_a-hmac_sha256.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libheptafranc_crypto_base_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libheptafranc_crypto_base_a_CXXFLAGS) $(CXXFLAGS) -c -o crypto/crypto_libheptafranc_crypto_base_a-hmac_sha256.o `test -f 'crypto/hmac_sha256.cpp' || echo '$(srcdir)/'`crypto/hmac_sha256.cpp

crypto/crypto_libheptafranc_crypto_base_a-hmac_sha256.obj: crypto/hmac_sha256.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libheptafranc_crypto_base_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libheptafranc_crypto_base_a_CXXFLAGS) $(CXXFLAGS) -MT crypto/crypto_libheptafranc_crypto_base_a-hmac_sha256.obj -MD -MP -MF crypto/$(DEPDIR)/crypto_libheptafranc_crypto_base_a-hmac_sha256.Tpo -c -o crypto/crypto_libheptafranc_crypto_base_a-hmac_sha256.obj `if test -f 'crypto/hmac_sha256.cpp'; then $(CYGPATH_W) 'crypto/hmac_sha256.cpp'; else $(CYGPATH_W) '$(srcdir)/crypto/hmac_sha256.cpp'; fi`
	$(AM_V_at)$(am__mv) crypto/$(DEPDIR)/crypto_libheptafranc_crypto_base_a-hmac_sha256.Tpo crypto/$(DEPDIR)/crypto_libheptafranc_crypto_base_a-hmac_sha256.Po
#	$(AM_V_CXX)source='crypto/hmac_sha256.cpp' object='crypto/crypto_libheptafranc_crypto_base_a-hmac_sha256.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libheptafranc_crypto_base_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libheptafranc_crypto_base_a_CXXFLAGS) $(CXXFLAGS) -c -o crypto/crypto_libheptafranc_crypto_base_a-hmac_sha256.obj `if test -f 'crypto/hmac_sha256.cpp'; then $(CYGPATH_W) 'crypto/hmac_sha256.cpp'; else $(CYGPATH_W) '$(srcdir)/crypto/hmac_sha256.cpp'; fi`

crypto/crypto_libheptafranc_crypto_base_a-hmac_sha512.o: crypto/hmac_sha512.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libheptafranc_crypto_base_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libheptafranc_crypto_base_a_CXXFLAGS) $(CXXFLAGS) -MT crypto/crypto_libheptafranc_crypto_base_a-hmac_sha512.o -MD -MP -MF crypto/$(DEPDIR)/crypto_libheptafranc_crypto_base_a-hmac_sha512.Tpo -c -o crypto/crypto_libheptafranc_crypto_base_a-hmac_sha512.o `test -f 'crypto/hmac_sha512.cpp' || echo '$(srcdir)/'`crypto/hmac_sha512.cpp
	$(AM_V_at)$(am__mv) crypto/$(DEPDIR)/crypto_libheptafranc_crypto_base_a-hmac_sha512.Tpo crypto/$(DEPDIR)/crypto_libheptafranc_crypto_base_a-hmac_sha512.Po
#	$(AM_V_CXX)source='crypto/hmac_sha512.cpp' object='crypto/crypto_libheptafranc_crypto_base_a-hmac_sha512.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libheptafranc_crypto_base_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libheptafranc_crypto_base_a_CXXFLAGS) $(CXXFLAGS) -c -o crypto/crypto_libheptafranc_crypto_base_a-hmac_sha512.o `test -f 'crypto/hmac_sha512.cpp' || echo '$(srcdir)/'`crypto/hmac_sha512.cpp

crypto/crypto_libheptafranc_crypto_base_a-hmac_sha512.obj: crypto/hmac_sha512.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libheptafranc_crypto_base_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libheptafranc_crypto_base_a_CXXFLAGS) $(CXXFLAGS) -MT crypto/crypto_libheptafranc_crypto_base_a-hmac_sha512.obj -MD -MP -MF crypto/$(DEPDIR)/crypto_libheptafranc_crypto_base_a-hmac_sha512.Tpo -c -o crypto/crypto_libheptafranc_crypto_base_a-hmac_sha512.obj `if test -f 'crypto/hmac_sha512.cpp'; then $(CYGPATH_W) 'crypto/hmac_sha512.cpp'; else $(CYGPATH_W) '$(srcdir)/crypto/hmac_sha512.cpp'; fi`
	$(AM_V_at)$(am__mv) crypto/$(DEPDIR)/crypto_libheptafranc_crypto_base_a-hmac_sha512.Tpo crypto/$(DEPDIR)/crypto_libheptafranc_crypto_base_a-hmac_sha512.Po
#	$(AM_V_CXX)source='crypto/hmac_sha512.cpp' object='crypto/crypto_libheptafranc_crypto_base_a-hmac_sha512.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libheptafranc_crypto_base_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libheptafranc_crypto_base_a_CXXFLAGS) $(CXXFLAGS) -c -o crypto/crypto_libheptafranc_crypto_base_a-hmac_sha512.obj `if test -f 'crypto/hmac_sha512.cpp'; then $(CYGPATH_W) 'crypto/hmac_sha512.cpp'; else $(CYGPATH_W) '$(srcdir)/crypto/hmac_sha512.cpp'; fi`

crypto/crypto_libheptafranc_crypto_base_a-ripemd160.o: crypto/ripemd160.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libheptafranc_crypto_base_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libheptafranc_crypto_base_a_CXXFLAGS) $(CXXFLAGS) -MT crypto/crypto_libheptafranc_crypto_base_a-ripemd160.o -MD -MP -MF crypto/$(DEPDIR)/crypto_libheptafranc_crypto_base_a-ripemd160.Tpo -c -o crypto/crypto_libheptafranc_crypto_base_a-ripemd160.o `test -f 'crypto/ripemd160.cpp' || echo '$(srcdir)/'`crypto/ripemd160.cpp
	$(AM_V_at)$(am__mv) crypto/$(DEPDIR)/crypto_libheptafranc_crypto_base_a-ripemd160.Tpo crypto/$(DEPDIR)/crypto_libheptafranc_crypto_base_a-ripemd160.Po
#	$(AM_V_CXX)source='crypto/ripemd160.cpp' object='crypto/crypto_libheptafranc_crypto_base_a-ripemd160.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libheptafranc_crypto_base_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libheptafranc_crypto_base_a_CXXFLAGS) $(CXXFLAGS) -c -o crypto/crypto_libheptafranc_crypto_base_a-ripemd160.o `test -f 'crypto/ripemd160.cpp' || echo '$(srcdir)/'`crypto/ripemd160.cpp

crypto/crypto_libheptafranc_crypto_base_a-ripemd160.obj: crypto/ripemd160.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libheptafranc_crypto_base_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libheptafranc_crypto_base_a_CXXFLAGS) $(CXXFLAGS) -MT crypto/crypto_libheptafranc_crypto_base_a-ripemd160.obj -MD -MP -MF crypto/$(DEPDIR)/crypto_libheptafranc_crypto_base_a-ripemd160.Tpo -c -o crypto/crypto_libheptafranc_crypto_base_a-ripemd160.obj `if test -f 'crypto/ripemd160.cpp'; then $(CYGPATH_W) 'crypto/ripemd160.cpp'; else $(CYGPATH_W) '$(srcdir)/crypto/ripemd160.cpp'; fi`
	$(AM_V_at)$(am__mv) crypto/$(DEPDIR)/crypto_libheptafranc_crypto_base_a-ripemd160.Tpo crypto/$(DEPDIR)/crypto_libheptafranc_crypto_base_a-ripemd160.Po
#	$(AM_V_CXX)source='crypto/ripemd160.cpp' object='crypto/crypto_libheptafranc_crypto_base_a-ripemd160.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libheptafranc_crypto_base_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libheptafranc_crypto_base_a_CXXFLAGS) $(CXXFLAGS) -c -o crypto/crypto_libheptafranc_crypto_base_a-ripemd160.obj `if test -f 'crypto/ripemd160.cpp'; then $(CYGPATH_W) 'crypto/ripemd160.cpp'; else $(CYGPATH_W) '$(srcdir)/crypto/ripemd160.cpp'; fi`

crypto/crypto_libheptafranc_crypto_base_a-sha1.o: crypto/sha1.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libheptafranc_crypto_base_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libheptafranc_crypto_base_a_CXXFLAGS) $(CXXFLAGS) -MT crypto/crypto_libheptafranc_crypto_base_a-sha1.o -MD -MP -MF crypto/$(DEPDIR)/crypto_libheptafranc_crypto_base_a-sha1.Tpo -c -o crypto/crypto_libheptafranc_crypto_base_a-sha1.o `test -f 'crypto/sha1.cpp' || echo '$(srcdir)/'`crypto/sha1.cpp
	$(AM_V_at)$(am__mv) crypto/$(DEPDIR)/crypto_libheptafranc_crypto_base_a-sha1.Tpo crypto/$(DEPDIR)/crypto_libheptafranc_crypto_base_a-sha1.Po
#	$(AM_V_CXX)source='crypto/sha1.cpp' object='crypto/crypto_libheptafranc_crypto_base_a-sha1.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libheptafranc_crypto_base_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libheptafranc_crypto_base_a_CXXFLAGS) $(CXXFLAGS) -c -o crypto/crypto_libheptafranc_crypto_base_a-sha1.o `test -f 'crypto/sha1.cpp' || echo '$(srcdir)/'`crypto/sha1.cpp

crypto/crypto_libheptafranc_crypto_base_a-sha1.obj: crypto/sha1.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libheptafranc_crypto_base_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libheptafranc_crypto_base_a_CXXFLAGS) $(CXXFLAGS) -MT crypto/crypto_libheptafranc_crypto_base_a-sha1.obj -MD -MP -MF crypto/$(DEPDIR)/crypto_libheptafranc_crypto_base_a-sha1.Tpo -c -o crypto/crypto_libheptafranc_crypto_base_a-sha1.obj `if test -f 'crypto/sha1.cpp'; then $(CYGPATH_W) 'crypto/sha1.cpp'; else $(CYGPATH_W) '$(srcdir)/crypto/sha1.cpp'; fi`
	$(AM_V_at)$(am__mv) crypto/$(DEPDIR)/crypto_libheptafranc_crypto_base_a-sha1.Tpo crypto/$(DEPDIR)/crypto_libheptafranc_crypto_base_a-sha1.Po
#	$(AM_V_CXX)source='crypto/sha1.cpp' object='crypto/crypto_libheptafranc_crypto_base_a-sha1.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libheptafranc_crypto_base_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libheptafranc_crypto_base_a_CXXFLAGS) $(CXXFLAGS) -c -o crypto/crypto_libheptafranc_crypto_base_a-sha1.obj `if test -f 'crypto/sha1.cpp'; then $(CYGPATH_W) 'crypto/sha1.cpp'; else $(CYGPATH_W) '$(srcdir)/crypto/sha1.cpp'; fi`

crypto/crypto_libheptafranc_crypto_base_a-sha256.o: crypto/sha256.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libheptafranc_crypto_base_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libheptafranc_crypto_base_a_CXXFLAGS) $(CXXFLAGS) -MT crypto/crypto_libheptafranc_crypto_base_a-sha256.o -MD -MP -MF crypto/$(DEPDIR)/crypto_libheptafranc_crypto_base_a-sha256.Tpo -c -o crypto/crypto_libheptafranc_crypto_base_a-sha256.o `test -f 'crypto/sha256.cpp' || echo '$(srcdir)/'`crypto/sha256.cpp
	$(AM_V_at)$(am__mv) crypto/$(DEPDIR)/crypto_libheptafranc_crypto_base_a-sha256.Tpo crypto/$(DEPDIR)/crypto_libheptafranc_crypto_base_a-sha256.Po
#	$(AM_V_CXX)source='crypto/sha256.cpp' object='crypto/crypto_libheptafranc_crypto_base_a-sha256.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libheptafranc_crypto_base_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libheptafranc_crypto_base_a_CXXFLAGS) $(CXXFLAGS) -c -o crypto/crypto_libheptafranc_crypto_base_a-sha256.o `test -f 'crypto/sha256.cpp' || echo '$(srcdir)/'`crypto/sha256.cpp

crypto/crypto_libheptafranc_crypto_base_a-sha256.obj: crypto/sha256.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libheptafranc_crypto_base_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libheptafranc_crypto_base_a_CXXFLAGS) $(CXXFLAGS) -MT crypto/crypto_libheptafranc_crypto_base_a-sha256.obj -MD -MP -MF crypto/$(DEPDIR)/crypto_libheptafranc_crypto_base_a-sha256.Tpo -c -o crypto/crypto_libheptafranc_crypto_base_a-sha256.obj `if test -f 'crypto/sha256.cpp'; then $(CYGPATH_W) 'crypto/sha256.cpp'; else $(CYGPATH_W) '$(srcdir)/crypto/sha256.cpp'; fi`
	$(AM_V_at)$(am__mv) crypto/$(DEPDIR)/crypto_libheptafranc_crypto_base_a-sha256.Tpo crypto/$(DEPDIR)/crypto_libheptafranc_crypto_base_a-sha256.Po
#	$(AM_V_CXX)source='crypto/sha256.cpp' object='crypto/crypto_libheptafranc_crypto_base_a-sha256.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libheptafranc_crypto_base_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libheptafranc_crypto_base_a_CXXFLAGS) $(CXXFLAGS) -c -o crypto/crypto_libheptafranc_crypto_base_a-sha256.obj `if test -f 'crypto/sha256.cpp'; then $(CYGPATH_W) 'crypto/sha256.cpp'; else $(CYGPATH_W) '$(srcdir)/crypto/sha256.cpp'; fi`

crypto/crypto_libheptafranc_crypto_base_a-sha512.o: crypto/sha512.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libheptafranc_crypto_base_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libheptafranc_crypto_base_a_CXXFLAGS) $(CXXFLAGS) -MT crypto/crypto_libheptafranc_crypto_base_a-sha512.o -MD -MP -MF crypto/$(DEPDIR)/crypto_libheptafranc_crypto_base_a-sha512.Tpo -c -o crypto/crypto_libheptafranc_crypto_base_a-sha512.o `test -f 'crypto/sha512.cpp' || echo '$(srcdir)/'`crypto/sha512.cpp
	$(AM_V_at)$(am__mv) crypto/$(DEPDIR)/crypto_libheptafranc_crypto_base_a-sha512.Tpo crypto/$(DEPDIR)/crypto_libheptafranc_crypto_base_a-sha512.Po
#	$(AM_V_CXX)source='crypto/sha512.cpp' object='crypto/crypto_libheptafranc_crypto_base_a-sha512.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libheptafranc_crypto_base_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libheptafranc_crypto_base_a_CXXFLAGS) $(CXXFLAGS) -c -o crypto/crypto_libheptafranc_crypto_base_a-sha512.o `test -f 'crypto/sha512.cpp' || echo '$(srcdir)/'`crypto/sha512.cpp

crypto/crypto_libheptafranc_crypto_base_a-sha512.obj: crypto/sha512.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libheptafranc_crypto_base_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libheptafranc_crypto_base_a_CXXFLAGS) $(CXXFLAGS) -MT crypto/crypto_libheptafranc_crypto_base_a-sha512.obj -MD -MP -MF crypto/$(DEPDIR)/crypto_libheptafranc_crypto_base_a-sha512.Tpo -c -o crypto/crypto_libheptafranc_crypto_base_a-sha512.obj `if test -f 'crypto/sha512.cpp'; then $(CYGPATH_W) 'crypto/sha512.cpp'; else $(CYGPATH_W) '$(srcdir)/crypto/sha512.cpp'; fi`
	$(AM_V_at)$(am__mv) crypto/$(DEPDIR)/crypto_libheptafranc_crypto_base_a-sha512.Tpo crypto/$(DEPDIR)/crypto_libheptafranc_crypto_base_a-sha512.Po
#	$(AM_V_CXX)source='crypto/sha512.cpp' object='crypto/crypto_libheptafranc_crypto_base_a-sha512.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libheptafranc_crypto_base_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libheptafranc_crypto_base_a_CXXFLAGS) $(CXXFLAGS) -c -o crypto/crypto_libheptafranc_crypto_base_a-sha512.obj `if test -f 'crypto/sha512.cpp'; then $(CYGPATH_W) 'crypto/sha512.cpp'; else $(CYGPATH_W) '$(srcdir)/crypto/sha512.cpp'; fi`

crypto/crypto_libheptafranc_crypto_base_a-sha256_sse4.o: crypto/sha256_sse4.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libheptafranc_crypto_base_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libheptafranc_crypto_base_a_CXXFLAGS) $(CXXFLAGS) -MT crypto/crypto_libheptafranc_crypto_base_a-sha256_sse4.o -MD -MP -MF crypto/$(DEPDIR)/crypto_libheptafranc_crypto_base_a-sha256_sse4.Tpo -c -o crypto/crypto_libheptafranc_crypto_base_a-sha256_sse4.o `test -f 'crypto/sha256_sse4.cpp' || echo '$(srcdir)/'`crypto/sha256_sse4.cpp
	$(AM_V_at)$(am__mv) crypto/$(DEPDIR)/crypto_libheptafranc_crypto_base_a-sha256_sse4.Tpo crypto/$(DEPDIR)/crypto_libheptafranc_crypto_base_a-sha256_sse4.Po
#	$(AM_V_CXX)source='crypto/sha256_sse4.cpp' object='crypto/crypto_libheptafranc_crypto_base_a-sha256_sse4.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libheptafranc_crypto_base_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libheptafranc_crypto_base_a_CXXFLAGS) $(CXXFLAGS) -c -o crypto/crypto_libheptafranc_crypto_base_a-sha256_sse4.o `test -f 'crypto/sha256_sse4.cpp' || echo '$(srcdir)/'`crypto/sha256_sse4.cpp

crypto/crypto_libheptafranc_crypto_base_a-sha256_sse4.obj: crypto/sha256_sse4.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libheptafranc_crypto_base_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libheptafranc_crypto_base_a_CXXFLAGS) $(CXXFLAGS) -MT crypto/crypto_libheptafranc_crypto_base_a-sha256_sse4.obj -MD -MP -MF crypto/$(DEPDIR)/crypto_libheptafranc_crypto_base_a-sha256_sse4.Tpo -c -o crypto/crypto_libheptafranc_crypto_base_a-sha256_sse4.obj `if test -f 'crypto/sha256_sse4.cpp'; then $(CYGPATH_W) 'crypto/sha256_sse4.cpp'; else $(CYGPATH_W) '$(srcdir)/crypto/sha256_sse4.cpp'; fi`
	$(AM_V_at)$(am__mv) crypto/$(DEPDIR)/crypto_libheptafranc_crypto_base_a-sha256_sse4.Tpo crypto/$(DEPDIR)/crypto_libheptafranc_crypto_base_a-sha256_sse4.Po
#	$(AM_V_CXX)source='crypto/sha256_sse4.cpp' object='crypto/crypto_libheptafranc_crypto_base_a-sha256_sse4.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libheptafranc_crypto_base_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libheptafranc_crypto_base_a_CXXFLAGS) $(CXXFLAGS) -c -o crypto/crypto_libheptafranc_crypto_base_a-sha256_sse4.obj `if test -f 'crypto/sha256_sse4.cpp'; then $(CYGPATH_W) 'crypto/sha256_sse4.cpp'; else $(CYGPATH_W) '$(srcdir)/crypto/sha256_sse4.cpp'; fi`

crypto/crypto_libheptafranc_crypto_shani_a-sha256_shani.o: crypto/sha256_shani.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libheptafranc_crypto_shani_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libheptafranc_crypto_shani_a_CXXFLAGS) $(CXXFLAGS) -MT crypto/crypto_libheptafranc_crypto_shani_a-sha256_shani.o -MD -MP -MF crypto/$(DEPDIR)/crypto_libheptafranc_crypto_shani_a-sha256_shani.Tpo -c -o crypto/crypto_libheptafranc_crypto_shani_a-sha256_shani.o `test -f 'crypto/sha256_shani.cpp' || echo '$(srcdir)/'`crypto/sha256_shani.cpp
	$(AM_V_at)$(am__mv) crypto/$(DEPDIR)/crypto_libheptafranc_crypto_shani_a-sha256_shani.Tpo crypto/$(DEPDIR)/crypto_libheptafranc_crypto_shani_a-sha256_shani.Po
#	$(AM_V_CXX)source='crypto/sha256_shani.cpp' object='crypto/crypto_libheptafranc_crypto_shani_a-sha256_shani.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libheptafranc_crypto_shani_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libheptafranc_crypto_shani_a_CXXFLAGS) $(CXXFLAGS) -c -o crypto/crypto_libheptafranc_crypto_shani_a-sha256_shani.o `test -f 'crypto/sha256_shani.cpp' || echo '$(srcdir)/'`crypto/sha256_shani.cpp

crypto/crypto_libheptafranc_crypto_shani_a-sha256_shani.obj: crypto/sha256_shani.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libheptafranc_crypto_shani_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libheptafranc_crypto_shani_a_CXXFLAGS) $(CXXFLAGS) -MT crypto/crypto_libheptafranc_crypto_shani_a-sha256_shani.obj -MD -MP -MF crypto/$(DEPDIR)/crypto_libheptafranc_crypto_shani_a-sha256_shani.Tpo -c -o crypto/crypto_libheptafranc_crypto_shani_a-sha256_shani.obj `if test -f 'crypto/sha256_shani.cpp'; then $(CYGPATH_W) 'crypto/sha256_shani.cpp'; else $(CYGPATH_W) '$(srcdir)/crypto/sha256_shani.cpp'; fi`
	$(AM_V_at)$(am__mv) crypto/$(DEPDIR)/crypto_libheptafranc_crypto_shani_a-sha256_shani.Tpo crypto/$(DEPDIR)/crypto_libheptafranc_crypto_shani_a-sha256_shani.Po
#	$(AM_V_CXX)source='crypto/sha256_shani.cpp' object='crypto/crypto_libheptafranc_crypto_shani_a-sha256_shani.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libheptafranc_crypto_shani_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libheptafranc_crypto_shani_a_CXXFLAGS) $(CXXFLAGS) -c -o crypto/crypto_libheptafranc_crypto_shani_a-sha256_shani.obj `if test -f 'crypto/sha256_shani.cpp'; then $(CYGPATH_W) 'crypto/sha256_shani.cpp'; else $(CYGPATH_W) '$(srcdir)/crypto/sha256_shani.cpp'; fi`

crypto/crypto_libheptafranc_crypto_sse41_a-sha256_sse41.o: crypto/sha256_sse41.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libheptafranc_crypto_sse41_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libheptafranc_crypto_sse41_a_CXXFLAGS) $(CXXFLAGS) -MT crypto/crypto_libheptafranc_crypto_sse41_a-sha256_sse41.o -MD -MP -MF crypto/$(DEPDIR)/crypto_libheptafranc_crypto_sse41_a-sha256_sse41.Tpo -c -o crypto/crypto_libheptafranc_crypto_sse41_a-sha256_sse41.o `test -f 'crypto/sha256_sse41.cpp' || echo '$(srcdir)/'`crypto/sha256_sse41.cpp
	$(AM_V_at)$(am__mv) crypto/$(DEPDIR)/crypto_libheptafranc_crypto_sse41_a-sha256_sse41.Tpo crypto/$(DEPDIR)/crypto_libheptafranc_crypto_sse41_a-sha256_sse41.Po
#	$(AM_V_CXX)source='crypto/sha256_sse41.cpp' object='crypto/crypto_libheptafranc_crypto_sse41_a-sha256_sse41.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libheptafranc_crypto_sse41_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libheptafranc_crypto_sse41_a_CXXFLAGS) $(CXXFLAGS) -c -o crypto/crypto_libheptafranc_crypto_sse41_a-sha256_sse41.o `test -f 'crypto/sha256_sse41.cpp' || echo '$(srcdir)/'`crypto/sha256_sse41.cpp

crypto/crypto_libheptafranc_crypto_sse41_a-sha256_sse41.obj: crypto/sha256_sse41.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libheptafranc_crypto_sse41_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libheptafranc_crypto_sse41_a_CXXFLAGS) $(CXXFLAGS) -MT crypto/crypto_libheptafranc_crypto_sse41_a-sha256_sse41.obj -MD -MP -MF crypto/$(DEPDIR)/crypto_libheptafranc_crypto_sse41_a-sha256_sse41.Tpo -c -o crypto/crypto_libheptafranc_crypto_sse41_a-sha256_sse41.obj `if test -f 'crypto/sha256_sse41.cpp'; then $(CYGPATH_W) 'crypto/sha256_sse41.cpp'; else $(CYGPATH_W) '$(srcdir)/crypto/sha256_sse41.cpp'; fi`
	$(AM_V_at)$(am__mv) crypto/$(DEPDIR)/crypto_libheptafranc_crypto_sse41_a-sha256_sse41.Tpo crypto/$(DEPDIR)/crypto_libheptafranc_crypto_sse41_a-sha256_sse41.Po
#	$(AM_V_CXX)source='crypto/sha256_sse41.cpp' object='crypto/crypto_libheptafranc_crypto_sse41_a-sha256_sse41.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libheptafranc_crypto_sse41_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libheptafranc_crypto_sse41_a_CXXFLAGS) $(CXXFLAGS) -c -o crypto/crypto_libheptafranc_crypto_sse41_a-sha256_sse41.obj `if test -f 'crypto/sha256_sse41.cpp'; then $(CYGPATH_W) 'crypto/sha256_sse41.cpp'; else $(CYGPATH_W) '$(srcdir)/crypto/sha256_sse41.cpp'; fi`

leveldb/db/leveldb_libleveldb_a-builder.o: leveldb/db/builder.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/db/leveldb_libleveldb_a-builder.o -MD -MP -MF leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-builder.Tpo -c -o leveldb/db/leveldb_libleveldb_a-builder.o `test -f 'leveldb/db/builder.cc' || echo '$(srcdir)/'`leveldb/db/builder.cc
	$(AM_V_at)$(am__mv) leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-builder.Tpo leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-builder.Po
#	$(AM_V_CXX)source='leveldb/db/builder.cc' object='leveldb/db/leveldb_libleveldb_a-builder.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/db/leveldb_libleveldb_a-builder.o `test -f 'leveldb/db/builder.cc' || echo '$(srcdir)/'`leveldb/db/builder.cc

leveldb/db/leveldb_libleveldb_a-builder.obj: leveldb/db/builder.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/db/leveldb_libleveldb_a-builder.obj -MD -MP -MF leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-builder.Tpo -c -o leveldb/db/leveldb_libleveldb_a-builder.obj `if test -f 'leveldb/db/builder.cc'; then $(CYGPATH_W) 'leveldb/db/builder.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/db/builder.cc'; fi`
	$(AM_V_at)$(am__mv) leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-builder.Tpo leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-builder.Po
#	$(AM_V_CXX)source='leveldb/db/builder.cc' object='leveldb/db/leveldb_libleveldb_a-builder.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/db/leveldb_libleveldb_a-builder.obj `if test -f 'leveldb/db/builder.cc'; then $(CYGPATH_W) 'leveldb/db/builder.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/db/builder.cc'; fi`

leveldb/db/leveldb_libleveldb_a-c.o: leveldb/db/c.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/db/leveldb_libleveldb_a-c.o -MD -MP -MF leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-c.Tpo -c -o leveldb/db/leveldb_libleveldb_a-c.o `test -f 'leveldb/db/c.cc' || echo '$(srcdir)/'`leveldb/db/c.cc
	$(AM_V_at)$(am__mv) leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-c.Tpo leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-c.Po
#	$(AM_V_CXX)source='leveldb/db/c.cc' object='leveldb/db/leveldb_libleveldb_a-c.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/db/leveldb_libleveldb_a-c.o `test -f 'leveldb/db/c.cc' || echo '$(srcdir)/'`leveldb/db/c.cc

leveldb/db/leveldb_libleveldb_a-c.obj: leveldb/db/c.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/db/leveldb_libleveldb_a-c.obj -MD -MP -MF leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-c.Tpo -c -o leveldb/db/leveldb_libleveldb_a-c.obj `if test -f 'leveldb/db/c.cc'; then $(CYGPATH_W) 'leveldb/db/c.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/db/c.cc'; fi`
	$(AM_V_at)$(am__mv) leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-c.Tpo leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-c.Po
#	$(AM_V_CXX)source='leveldb/db/c.cc' object='leveldb/db/leveldb_libleveldb_a-c.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/db/leveldb_libleveldb_a-c.obj `if test -f 'leveldb/db/c.cc'; then $(CYGPATH_W) 'leveldb/db/c.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/db/c.cc'; fi`

leveldb/db/leveldb_libleveldb_a-dbformat.o: leveldb/db/dbformat.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/db/leveldb_libleveldb_a-dbformat.o -MD -MP -MF leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-dbformat.Tpo -c -o leveldb/db/leveldb_libleveldb_a-dbformat.o `test -f 'leveldb/db/dbformat.cc' || echo '$(srcdir)/'`leveldb/db/dbformat.cc
	$(AM_V_at)$(am__mv) leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-dbformat.Tpo leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-dbformat.Po
#	$(AM_V_CXX)source='leveldb/db/dbformat.cc' object='leveldb/db/leveldb_libleveldb_a-dbformat.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/db/leveldb_libleveldb_a-dbformat.o `test -f 'leveldb/db/dbformat.cc' || echo '$(srcdir)/'`leveldb/db/dbformat.cc

leveldb/db/leveldb_libleveldb_a-dbformat.obj: leveldb/db/dbformat.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/db/leveldb_libleveldb_a-dbformat.obj -MD -MP -MF leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-dbformat.Tpo -c -o leveldb/db/leveldb_libleveldb_a-dbformat.obj `if test -f 'leveldb/db/dbformat.cc'; then $(CYGPATH_W) 'leveldb/db/dbformat.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/db/dbformat.cc'; fi`
	$(AM_V_at)$(am__mv) leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-dbformat.Tpo leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-dbformat.Po
#	$(AM_V_CXX)source='leveldb/db/dbformat.cc' object='leveldb/db/leveldb_libleveldb_a-dbformat.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/db/leveldb_libleveldb_a-dbformat.obj `if test -f 'leveldb/db/dbformat.cc'; then $(CYGPATH_W) 'leveldb/db/dbformat.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/db/dbformat.cc'; fi`

leveldb/db/leveldb_libleveldb_a-db_impl.o: leveldb/db/db_impl.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/db/leveldb_libleveldb_a-db_impl.o -MD -MP -MF leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-db_impl.Tpo -c -o leveldb/db/leveldb_libleveldb_a-db_impl.o `test -f 'leveldb/db/db_impl.cc' || echo '$(srcdir)/'`leveldb/db/db_impl.cc
	$(AM_V_at)$(am__mv) leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-db_impl.Tpo leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-db_impl.Po
#	$(AM_V_CXX)source='leveldb/db/db_impl.cc' object='leveldb/db/leveldb_libleveldb_a-db_impl.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/db/leveldb_libleveldb_a-db_impl.o `test -f 'leveldb/db/db_impl.cc' || echo '$(srcdir)/'`leveldb/db/db_impl.cc

leveldb/db/leveldb_libleveldb_a-db_impl.obj: leveldb/db/db_impl.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/db/leveldb_libleveldb_a-db_impl.obj -MD -MP -MF leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-db_impl.Tpo -c -o leveldb/db/leveldb_libleveldb_a-db_impl.obj `if test -f 'leveldb/db/db_impl.cc'; then $(CYGPATH_W) 'leveldb/db/db_impl.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/db/db_impl.cc'; fi`
	$(AM_V_at)$(am__mv) leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-db_impl.Tpo leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-db_impl.Po
#	$(AM_V_CXX)source='leveldb/db/db_impl.cc' object='leveldb/db/leveldb_libleveldb_a-db_impl.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/db/leveldb_libleveldb_a-db_impl.obj `if test -f 'leveldb/db/db_impl.cc'; then $(CYGPATH_W) 'leveldb/db/db_impl.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/db/db_impl.cc'; fi`

leveldb/db/leveldb_libleveldb_a-db_iter.o: leveldb/db/db_iter.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/db/leveldb_libleveldb_a-db_iter.o -MD -MP -MF leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-db_iter.Tpo -c -o leveldb/db/leveldb_libleveldb_a-db_iter.o `test -f 'leveldb/db/db_iter.cc' || echo '$(srcdir)/'`leveldb/db/db_iter.cc
	$(AM_V_at)$(am__mv) leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-db_iter.Tpo leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-db_iter.Po
#	$(AM_V_CXX)source='leveldb/db/db_iter.cc' object='leveldb/db/leveldb_libleveldb_a-db_iter.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/db/leveldb_libleveldb_a-db_iter.o `test -f 'leveldb/db/db_iter.cc' || echo '$(srcdir)/'`leveldb/db/db_iter.cc

leveldb/db/leveldb_libleveldb_a-db_iter.obj: leveldb/db/db_iter.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/db/leveldb_libleveldb_a-db_iter.obj -MD -MP -MF leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-db_iter.Tpo -c -o leveldb/db/leveldb_libleveldb_a-db_iter.obj `if test -f 'leveldb/db/db_iter.cc'; then $(CYGPATH_W) 'leveldb/db/db_iter.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/db/db_iter.cc'; fi`
	$(AM_V_at)$(am__mv) leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-db_iter.Tpo leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-db_iter.Po
#	$(AM_V_CXX)source='leveldb/db/db_iter.cc' object='leveldb/db/leveldb_libleveldb_a-db_iter.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/db/leveldb_libleveldb_a-db_iter.obj `if test -f 'leveldb/db/db_iter.cc'; then $(CYGPATH_W) 'leveldb/db/db_iter.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/db/db_iter.cc'; fi`

leveldb/db/leveldb_libleveldb_a-dumpfile.o: leveldb/db/dumpfile.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/db/leveldb_libleveldb_a-dumpfile.o -MD -MP -MF leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-dumpfile.Tpo -c -o leveldb/db/leveldb_libleveldb_a-dumpfile.o `test -f 'leveldb/db/dumpfile.cc' || echo '$(srcdir)/'`leveldb/db/dumpfile.cc
	$(AM_V_at)$(am__mv) leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-dumpfile.Tpo leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-dumpfile.Po
#	$(AM_V_CXX)source='leveldb/db/dumpfile.cc' object='leveldb/db/leveldb_libleveldb_a-dumpfile.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/db/leveldb_libleveldb_a-dumpfile.o `test -f 'leveldb/db/dumpfile.cc' || echo '$(srcdir)/'`leveldb/db/dumpfile.cc

leveldb/db/leveldb_libleveldb_a-dumpfile.obj: leveldb/db/dumpfile.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/db/leveldb_libleveldb_a-dumpfile.obj -MD -MP -MF leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-dumpfile.Tpo -c -o leveldb/db/leveldb_libleveldb_a-dumpfile.obj `if test -f 'leveldb/db/dumpfile.cc'; then $(CYGPATH_W) 'leveldb/db/dumpfile.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/db/dumpfile.cc'; fi`
	$(AM_V_at)$(am__mv) leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-dumpfile.Tpo leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-dumpfile.Po
#	$(AM_V_CXX)source='leveldb/db/dumpfile.cc' object='leveldb/db/leveldb_libleveldb_a-dumpfile.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/db/leveldb_libleveldb_a-dumpfile.obj `if test -f 'leveldb/db/dumpfile.cc'; then $(CYGPATH_W) 'leveldb/db/dumpfile.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/db/dumpfile.cc'; fi`

leveldb/db/leveldb_libleveldb_a-filename.o: leveldb/db/filename.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/db/leveldb_libleveldb_a-filename.o -MD -MP -MF leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-filename.Tpo -c -o leveldb/db/leveldb_libleveldb_a-filename.o `test -f 'leveldb/db/filename.cc' || echo '$(srcdir)/'`leveldb/db/filename.cc
	$(AM_V_at)$(am__mv) leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-filename.Tpo leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-filename.Po
#	$(AM_V_CXX)source='leveldb/db/filename.cc' object='leveldb/db/leveldb_libleveldb_a-filename.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/db/leveldb_libleveldb_a-filename.o `test -f 'leveldb/db/filename.cc' || echo '$(srcdir)/'`leveldb/db/filename.cc

leveldb/db/leveldb_libleveldb_a-filename.obj: leveldb/db/filename.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/db/leveldb_libleveldb_a-filename.obj -MD -MP -MF leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-filename.Tpo -c -o leveldb/db/leveldb_libleveldb_a-filename.obj `if test -f 'leveldb/db/filename.cc'; then $(CYGPATH_W) 'leveldb/db/filename.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/db/filename.cc'; fi`
	$(AM_V_at)$(am__mv) leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-filename.Tpo leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-filename.Po
#	$(AM_V_CXX)source='leveldb/db/filename.cc' object='leveldb/db/leveldb_libleveldb_a-filename.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/db/leveldb_libleveldb_a-filename.obj `if test -f 'leveldb/db/filename.cc'; then $(CYGPATH_W) 'leveldb/db/filename.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/db/filename.cc'; fi`

leveldb/db/leveldb_libleveldb_a-log_reader.o: leveldb/db/log_reader.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/db/leveldb_libleveldb_a-log_reader.o -MD -MP -MF leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-log_reader.Tpo -c -o leveldb/db/leveldb_libleveldb_a-log_reader.o `test -f 'leveldb/db/log_reader.cc' || echo '$(srcdir)/'`leveldb/db/log_reader.cc
	$(AM_V_at)$(am__mv) leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-log_reader.Tpo leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-log_reader.Po
#	$(AM_V_CXX)source='leveldb/db/log_reader.cc' object='leveldb/db/leveldb_libleveldb_a-log_reader.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/db/leveldb_libleveldb_a-log_reader.o `test -f 'leveldb/db/log_reader.cc' || echo '$(srcdir)/'`leveldb/db/log_reader.cc

leveldb/db/leveldb_libleveldb_a-log_reader.obj: leveldb/db/log_reader.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/db/leveldb_libleveldb_a-log_reader.obj -MD -MP -MF leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-log_reader.Tpo -c -o leveldb/db/leveldb_libleveldb_a-log_reader.obj `if test -f 'leveldb/db/log_reader.cc'; then $(CYGPATH_W) 'leveldb/db/log_reader.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/db/log_reader.cc'; fi`
	$(AM_V_at)$(am__mv) leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-log_reader.Tpo leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-log_reader.Po
#	$(AM_V_CXX)source='leveldb/db/log_reader.cc' object='leveldb/db/leveldb_libleveldb_a-log_reader.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/db/leveldb_libleveldb_a-log_reader.obj `if test -f 'leveldb/db/log_reader.cc'; then $(CYGPATH_W) 'leveldb/db/log_reader.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/db/log_reader.cc'; fi`

leveldb/db/leveldb_libleveldb_a-log_writer.o: leveldb/db/log_writer.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/db/leveldb_libleveldb_a-log_writer.o -MD -MP -MF leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-log_writer.Tpo -c -o leveldb/db/leveldb_libleveldb_a-log_writer.o `test -f 'leveldb/db/log_writer.cc' || echo '$(srcdir)/'`leveldb/db/log_writer.cc
	$(AM_V_at)$(am__mv) leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-log_writer.Tpo leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-log_writer.Po
#	$(AM_V_CXX)source='leveldb/db/log_writer.cc' object='leveldb/db/leveldb_libleveldb_a-log_writer.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/db/leveldb_libleveldb_a-log_writer.o `test -f 'leveldb/db/log_writer.cc' || echo '$(srcdir)/'`leveldb/db/log_writer.cc

leveldb/db/leveldb_libleveldb_a-log_writer.obj: leveldb/db/log_writer.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/db/leveldb_libleveldb_a-log_writer.obj -MD -MP -MF leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-log_writer.Tpo -c -o leveldb/db/leveldb_libleveldb_a-log_writer.obj `if test -f 'leveldb/db/log_writer.cc'; then $(CYGPATH_W) 'leveldb/db/log_writer.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/db/log_writer.cc'; fi`
	$(AM_V_at)$(am__mv) leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-log_writer.Tpo leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-log_writer.Po
#	$(AM_V_CXX)source='leveldb/db/log_writer.cc' object='leveldb/db/leveldb_libleveldb_a-log_writer.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/db/leveldb_libleveldb_a-log_writer.obj `if test -f 'leveldb/db/log_writer.cc'; then $(CYGPATH_W) 'leveldb/db/log_writer.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/db/log_writer.cc'; fi`

leveldb/db/leveldb_libleveldb_a-memtable.o: leveldb/db/memtable.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/db/leveldb_libleveldb_a-memtable.o -MD -MP -MF leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-memtable.Tpo -c -o leveldb/db/leveldb_libleveldb_a-memtable.o `test -f 'leveldb/db/memtable.cc' || echo '$(srcdir)/'`leveldb/db/memtable.cc
	$(AM_V_at)$(am__mv) leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-memtable.Tpo leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-memtable.Po
#	$(AM_V_CXX)source='leveldb/db/memtable.cc' object='leveldb/db/leveldb_libleveldb_a-memtable.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/db/leveldb_libleveldb_a-memtable.o `test -f 'leveldb/db/memtable.cc' || echo '$(srcdir)/'`leveldb/db/memtable.cc

leveldb/db/leveldb_libleveldb_a-memtable.obj: leveldb/db/memtable.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/db/leveldb_libleveldb_a-memtable.obj -MD -MP -MF leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-memtable.Tpo -c -o leveldb/db/leveldb_libleveldb_a-memtable.obj `if test -f 'leveldb/db/memtable.cc'; then $(CYGPATH_W) 'leveldb/db/memtable.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/db/memtable.cc'; fi`
	$(AM_V_at)$(am__mv) leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-memtable.Tpo leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-memtable.Po
#	$(AM_V_CXX)source='leveldb/db/memtable.cc' object='leveldb/db/leveldb_libleveldb_a-memtable.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/db/leveldb_libleveldb_a-memtable.obj `if test -f 'leveldb/db/memtable.cc'; then $(CYGPATH_W) 'leveldb/db/memtable.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/db/memtable.cc'; fi`

leveldb/db/leveldb_libleveldb_a-repair.o: leveldb/db/repair.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/db/leveldb_libleveldb_a-repair.o -MD -MP -MF leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-repair.Tpo -c -o leveldb/db/leveldb_libleveldb_a-repair.o `test -f 'leveldb/db/repair.cc' || echo '$(srcdir)/'`leveldb/db/repair.cc
	$(AM_V_at)$(am__mv) leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-repair.Tpo leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-repair.Po
#	$(AM_V_CXX)source='leveldb/db/repair.cc' object='leveldb/db/leveldb_libleveldb_a-repair.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/db/leveldb_libleveldb_a-repair.o `test -f 'leveldb/db/repair.cc' || echo '$(srcdir)/'`leveldb/db/repair.cc

leveldb/db/leveldb_libleveldb_a-repair.obj: leveldb/db/repair.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/db/leveldb_libleveldb_a-repair.obj -MD -MP -MF leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-repair.Tpo -c -o leveldb/db/leveldb_libleveldb_a-repair.obj `if test -f 'leveldb/db/repair.cc'; then $(CYGPATH_W) 'leveldb/db/repair.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/db/repair.cc'; fi`
	$(AM_V_at)$(am__mv) leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-repair.Tpo leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-repair.Po
#	$(AM_V_CXX)source='leveldb/db/repair.cc' object='leveldb/db/leveldb_libleveldb_a-repair.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/db/leveldb_libleveldb_a-repair.obj `if test -f 'leveldb/db/repair.cc'; then $(CYGPATH_W) 'leveldb/db/repair.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/db/repair.cc'; fi`

leveldb/db/leveldb_libleveldb_a-table_cache.o: leveldb/db/table_cache.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/db/leveldb_libleveldb_a-table_cache.o -MD -MP -MF leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-table_cache.Tpo -c -o leveldb/db/leveldb_libleveldb_a-table_cache.o `test -f 'leveldb/db/table_cache.cc' || echo '$(srcdir)/'`leveldb/db/table_cache.cc
	$(AM_V_at)$(am__mv) leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-table_cache.Tpo leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-table_cache.Po
#	$(AM_V_CXX)source='leveldb/db/table_cache.cc' object='leveldb/db/leveldb_libleveldb_a-table_cache.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/db/leveldb_libleveldb_a-table_cache.o `test -f 'leveldb/db/table_cache.cc' || echo '$(srcdir)/'`leveldb/db/table_cache.cc

leveldb/db/leveldb_libleveldb_a-table_cache.obj: leveldb/db/table_cache.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/db/leveldb_libleveldb_a-table_cache.obj -MD -MP -MF leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-table_cache.Tpo -c -o leveldb/db/leveldb_libleveldb_a-table_cache.obj `if test -f 'leveldb/db/table_cache.cc'; then $(CYGPATH_W) 'leveldb/db/table_cache.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/db/table_cache.cc'; fi`
	$(AM_V_at)$(am__mv) leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-table_cache.Tpo leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-table_cache.Po
#	$(AM_V_CXX)source='leveldb/db/table_cache.cc' object='leveldb/db/leveldb_libleveldb_a-table_cache.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/db/leveldb_libleveldb_a-table_cache.obj `if test -f 'leveldb/db/table_cache.cc'; then $(CYGPATH_W) 'leveldb/db/table_cache.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/db/table_cache.cc'; fi`

leveldb/db/leveldb_libleveldb_a-version_edit.o: leveldb/db/version_edit.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/db/leveldb_libleveldb_a-version_edit.o -MD -MP -MF leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-version_edit.Tpo -c -o leveldb/db/leveldb_libleveldb_a-version_edit.o `test -f 'leveldb/db/version_edit.cc' || echo '$(srcdir)/'`leveldb/db/version_edit.cc
	$(AM_V_at)$(am__mv) leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-version_edit.Tpo leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-version_edit.Po
#	$(AM_V_CXX)source='leveldb/db/version_edit.cc' object='leveldb/db/leveldb_libleveldb_a-version_edit.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/db/leveldb_libleveldb_a-version_edit.o `test -f 'leveldb/db/version_edit.cc' || echo '$(srcdir)/'`leveldb/db/version_edit.cc

leveldb/db/leveldb_libleveldb_a-version_edit.obj: leveldb/db/version_edit.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/db/leveldb_libleveldb_a-version_edit.obj -MD -MP -MF leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-version_edit.Tpo -c -o leveldb/db/leveldb_libleveldb_a-version_edit.obj `if test -f 'leveldb/db/version_edit.cc'; then $(CYGPATH_W) 'leveldb/db/version_edit.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/db/version_edit.cc'; fi`
	$(AM_V_at)$(am__mv) leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-version_edit.Tpo leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-version_edit.Po
#	$(AM_V_CXX)source='leveldb/db/version_edit.cc' object='leveldb/db/leveldb_libleveldb_a-version_edit.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/db/leveldb_libleveldb_a-version_edit.obj `if test -f 'leveldb/db/version_edit.cc'; then $(CYGPATH_W) 'leveldb/db/version_edit.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/db/version_edit.cc'; fi`

leveldb/db/leveldb_libleveldb_a-version_set.o: leveldb/db/version_set.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/db/leveldb_libleveldb_a-version_set.o -MD -MP -MF leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-version_set.Tpo -c -o leveldb/db/leveldb_libleveldb_a-version_set.o `test -f 'leveldb/db/version_set.cc' || echo '$(srcdir)/'`leveldb/db/version_set.cc
	$(AM_V_at)$(am__mv) leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-version_set.Tpo leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-version_set.Po
#	$(AM_V_CXX)source='leveldb/db/version_set.cc' object='leveldb/db/leveldb_libleveldb_a-version_set.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/db/leveldb_libleveldb_a-version_set.o `test -f 'leveldb/db/version_set.cc' || echo '$(srcdir)/'`leveldb/db/version_set.cc

leveldb/db/leveldb_libleveldb_a-version_set.obj: leveldb/db/version_set.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/db/leveldb_libleveldb_a-version_set.obj -MD -MP -MF leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-version_set.Tpo -c -o leveldb/db/leveldb_libleveldb_a-version_set.obj `if test -f 'leveldb/db/version_set.cc'; then $(CYGPATH_W) 'leveldb/db/version_set.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/db/version_set.cc'; fi`
	$(AM_V_at)$(am__mv) leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-version_set.Tpo leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-version_set.Po
#	$(AM_V_CXX)source='leveldb/db/version_set.cc' object='leveldb/db/leveldb_libleveldb_a-version_set.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/db/leveldb_libleveldb_a-version_set.obj `if test -f 'leveldb/db/version_set.cc'; then $(CYGPATH_W) 'leveldb/db/version_set.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/db/version_set.cc'; fi`

leveldb/db/leveldb_libleveldb_a-write_batch.o: leveldb/db/write_batch.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/db/leveldb_libleveldb_a-write_batch.o -MD -MP -MF leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-write_batch.Tpo -c -o leveldb/db/leveldb_libleveldb_a-write_batch.o `test -f 'leveldb/db/write_batch.cc' || echo '$(srcdir)/'`leveldb/db/write_batch.cc
	$(AM_V_at)$(am__mv) leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-write_batch.Tpo leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-write_batch.Po
#	$(AM_V_CXX)source='leveldb/db/write_batch.cc' object='leveldb/db/leveldb_libleveldb_a-write_batch.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/db/leveldb_libleveldb_a-write_batch.o `test -f 'leveldb/db/write_batch.cc' || echo '$(srcdir)/'`leveldb/db/write_batch.cc

leveldb/db/leveldb_libleveldb_a-write_batch.obj: leveldb/db/write_batch.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/db/leveldb_libleveldb_a-write_batch.obj -MD -MP -MF leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-write_batch.Tpo -c -o leveldb/db/leveldb_libleveldb_a-write_batch.obj `if test -f 'leveldb/db/write_batch.cc'; then $(CYGPATH_W) 'leveldb/db/write_batch.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/db/write_batch.cc'; fi`
	$(AM_V_at)$(am__mv) leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-write_batch.Tpo leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-write_batch.Po
#	$(AM_V_CXX)source='leveldb/db/write_batch.cc' object='leveldb/db/leveldb_libleveldb_a-write_batch.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/db/leveldb_libleveldb_a-write_batch.obj `if test -f 'leveldb/db/write_batch.cc'; then $(CYGPATH_W) 'leveldb/db/write_batch.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/db/write_batch.cc'; fi`

leveldb/table/leveldb_libleveldb_a-block_builder.o: leveldb/table/block_builder.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/table/leveldb_libleveldb_a-block_builder.o -MD -MP -MF leveldb/table/$(DEPDIR)/leveldb_libleveldb_a-block_builder.Tpo -c -o leveldb/table/leveldb_libleveldb_a-block_builder.o `test -f 'leveldb/table/block_builder.cc' || echo '$(srcdir)/'`leveldb/table/block_builder.cc
	$(AM_V_at)$(am__mv) leveldb/table/$(DEPDIR)/leveldb_libleveldb_a-block_builder.Tpo leveldb/table/$(DEPDIR)/leveldb_libleveldb_a-block_builder.Po
#	$(AM_V_CXX)source='leveldb/table/block_builder.cc' object='leveldb/table/leveldb_libleveldb_a-block_builder.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/table/leveldb_libleveldb_a-block_builder.o `test -f 'leveldb/table/block_builder.cc' || echo '$(srcdir)/'`leveldb/table/block_builder.cc

leveldb/table/leveldb_libleveldb_a-block_builder.obj: leveldb/table/block_builder.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/table/leveldb_libleveldb_a-block_builder.obj -MD -MP -MF leveldb/table/$(DEPDIR)/leveldb_libleveldb_a-block_builder.Tpo -c -o leveldb/table/leveldb_libleveldb_a-block_builder.obj `if test -f 'leveldb/table/block_builder.cc'; then $(CYGPATH_W) 'leveldb/table/block_builder.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/table/block_builder.cc'; fi`
	$(AM_V_at)$(am__mv) leveldb/table/$(DEPDIR)/leveldb_libleveldb_a-block_builder.Tpo leveldb/table/$(DEPDIR)/leveldb_libleveldb_a-block_builder.Po
#	$(AM_V_CXX)source='leveldb/table/block_builder.cc' object='leveldb/table/leveldb_libleveldb_a-block_builder.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/table/leveldb_libleveldb_a-block_builder.obj `if test -f 'leveldb/table/block_builder.cc'; then $(CYGPATH_W) 'leveldb/table/block_builder.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/table/block_builder.cc'; fi`

leveldb/table/leveldb_libleveldb_a-block.o: leveldb/table/block.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/table/leveldb_libleveldb_a-block.o -MD -MP -MF leveldb/table/$(DEPDIR)/leveldb_libleveldb_a-block.Tpo -c -o leveldb/table/leveldb_libleveldb_a-block.o `test -f 'leveldb/table/block.cc' || echo '$(srcdir)/'`leveldb/table/block.cc
	$(AM_V_at)$(am__mv) leveldb/table/$(DEPDIR)/leveldb_libleveldb_a-block.Tpo leveldb/table/$(DEPDIR)/leveldb_libleveldb_a-block.Po
#	$(AM_V_CXX)source='leveldb/table/block.cc' object='leveldb/table/leveldb_libleveldb_a-block.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/table/leveldb_libleveldb_a-block.o `test -f 'leveldb/table/block.cc' || echo '$(srcdir)/'`leveldb/table/block.cc

leveldb/table/leveldb_libleveldb_a-block.obj: leveldb/table/block.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/table/leveldb_libleveldb_a-block.obj -MD -MP -MF leveldb/table/$(DEPDIR)/leveldb_libleveldb_a-block.Tpo -c -o leveldb/table/leveldb_libleveldb_a-block.obj `if test -f 'leveldb/table/block.cc'; then $(CYGPATH_W) 'leveldb/table/block.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/table/block.cc'; fi`
	$(AM_V_at)$(am__mv) leveldb/table/$(DEPDIR)/leveldb_libleveldb_a-block.Tpo leveldb/table/$(DEPDIR)/leveldb_libleveldb_a-block.Po
#	$(AM_V_CXX)source='leveldb/table/block.cc' object='leveldb/table/leveldb_libleveldb_a-block.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/table/leveldb_libleveldb_a-block.obj `if test -f 'leveldb/table/block.cc'; then $(CYGPATH_W) 'leveldb/table/block.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/table/block.cc'; fi`

leveldb/table/leveldb_libleveldb_a-filter_block.o: leveldb/table/filter_block.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/table/leveldb_libleveldb_a-filter_block.o -MD -MP -MF leveldb/table/$(DEPDIR)/leveldb_libleveldb_a-filter_block.Tpo -c -o leveldb/table/leveldb_libleveldb_a-filter_block.o `test -f 'leveldb/table/filter_block.cc' || echo '$(srcdir)/'`leveldb/table/filter_block.cc
	$(AM_V_at)$(am__mv) leveldb/table/$(DEPDIR)/leveldb_libleveldb_a-filter_block.Tpo leveldb/table/$(DEPDIR)/leveldb_libleveldb_a-filter_block.Po
#	$(AM_V_CXX)source='leveldb/table/filter_block.cc' object='leveldb/table/leveldb_libleveldb_a-filter_block.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/table/leveldb_libleveldb_a-filter_block.o `test -f 'leveldb/table/filter_block.cc' || echo '$(srcdir)/'`leveldb/table/filter_block.cc

leveldb/table/leveldb_libleveldb_a-filter_block.obj: leveldb/table/filter_block.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/table/leveldb_libleveldb_a-filter_block.obj -MD -MP -MF leveldb/table/$(DEPDIR)/leveldb_libleveldb_a-filter_block.Tpo -c -o leveldb/table/leveldb_libleveldb_a-filter_block.obj `if test -f 'leveldb/table/filter_block.cc'; then $(CYGPATH_W) 'leveldb/table/filter_block.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/table/filter_block.cc'; fi`
	$(AM_V_at)$(am__mv) leveldb/table/$(DEPDIR)/leveldb_libleveldb_a-filter_block.Tpo leveldb/table/$(DEPDIR)/leveldb_libleveldb_a-filter_block.Po
#	$(AM_V_CXX)source='leveldb/table/filter_block.cc' object='leveldb/table/leveldb_libleveldb_a-filter_block.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/table/leveldb_libleveldb_a-filter_block.obj `if test -f 'leveldb/table/filter_block.cc'; then $(CYGPATH_W) 'leveldb/table/filter_block.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/table/filter_block.cc'; fi`

leveldb/table/leveldb_libleveldb_a-format.o: leveldb/table/format.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/table/leveldb_libleveldb_a-format.o -MD -MP -MF leveldb/table/$(DEPDIR)/leveldb_libleveldb_a-format.Tpo -c -o leveldb/table/leveldb_libleveldb_a-format.o `test -f 'leveldb/table/format.cc' || echo '$(srcdir)/'`leveldb/table/format.cc
	$(AM_V_at)$(am__mv) leveldb/table/$(DEPDIR)/leveldb_libleveldb_a-format.Tpo leveldb/table/$(DEPDIR)/leveldb_libleveldb_a-format.Po
#	$(AM_V_CXX)source='leveldb/table/format.cc' object='leveldb/table/leveldb_libleveldb_a-format.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/table/leveldb_libleveldb_a-format.o `test -f 'leveldb/table/format.cc' || echo '$(srcdir)/'`leveldb/table/format.cc

leveldb/table/leveldb_libleveldb_a-format.obj: leveldb/table/format.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/table/leveldb_libleveldb_a-format.obj -MD -MP -MF leveldb/table/$(DEPDIR)/leveldb_libleveldb_a-format.Tpo -c -o leveldb/table/leveldb_libleveldb_a-format.obj `if test -f 'leveldb/table/format.cc'; then $(CYGPATH_W) 'leveldb/table/format.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/table/format.cc'; fi`
	$(AM_V_at)$(am__mv) leveldb/table/$(DEPDIR)/leveldb_libleveldb_a-format.Tpo leveldb/table/$(DEPDIR)/leveldb_libleveldb_a-format.Po
#	$(AM_V_CXX)source='leveldb/table/format.cc' object='leveldb/table/leveldb_libleveldb_a-format.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/table/leveldb_libleveldb_a-format.obj `if test -f 'leveldb/table/format.cc'; then $(CYGPATH_W) 'leveldb/table/format.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/table/format.cc'; fi`

leveldb/table/leveldb_libleveldb_a-iterator.o: leveldb/table/iterator.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/table/leveldb_libleveldb_a-iterator.o -MD -MP -MF leveldb/table/$(DEPDIR)/leveldb_libleveldb_a-iterator.Tpo -c -o leveldb/table/leveldb_libleveldb_a-iterator.o `test -f 'leveldb/table/iterator.cc' || echo '$(srcdir)/'`leveldb/table/iterator.cc
	$(AM_V_at)$(am__mv) leveldb/table/$(DEPDIR)/leveldb_libleveldb_a-iterator.Tpo leveldb/table/$(DEPDIR)/leveldb_libleveldb_a-iterator.Po
#	$(AM_V_CXX)source='leveldb/table/iterator.cc' object='leveldb/table/leveldb_libleveldb_a-iterator.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/table/leveldb_libleveldb_a-iterator.o `test -f 'leveldb/table/iterator.cc' || echo '$(srcdir)/'`leveldb/table/iterator.cc

leveldb/table/leveldb_libleveldb_a-iterator.obj: leveldb/table/iterator.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/table/leveldb_libleveldb_a-iterator.obj -MD -MP -MF leveldb/table/$(DEPDIR)/leveldb_libleveldb_a-iterator.Tpo -c -o leveldb/table/leveldb_libleveldb_a-iterator.obj `if test -f 'leveldb/table/iterator.cc'; then $(CYGPATH_W) 'leveldb/table/iterator.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/table/iterator.cc'; fi`
	$(AM_V_at)$(am__mv) leveldb/table/$(DEPDIR)/leveldb_libleveldb_a-iterator.Tpo leveldb/table/$(DEPDIR)/leveldb_libleveldb_a-iterator.Po
#	$(AM_V_CXX)source='leveldb/table/iterator.cc' object='leveldb/table/leveldb_libleveldb_a-iterator.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/table/leveldb_libleveldb_a-iterator.obj `if test -f 'leveldb/table/iterator.cc'; then $(CYGPATH_W) 'leveldb/table/iterator.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/table/iterator.cc'; fi`

leveldb/table/leveldb_libleveldb_a-merger.o: leveldb/table/merger.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/table/leveldb_libleveldb_a-merger.o -MD -MP -MF leveldb/table/$(DEPDIR)/leveldb_libleveldb_a-merger.Tpo -c -o leveldb/table/leveldb_libleveldb_a-merger.o `test -f 'leveldb/table/merger.cc' || echo '$(srcdir)/'`leveldb/table/merger.cc
	$(AM_V_at)$(am__mv) leveldb/table/$(DEPDIR)/leveldb_libleveldb_a-merger.Tpo leveldb/table/$(DEPDIR)/leveldb_libleveldb_a-merger.Po
#	$(AM_V_CXX)source='leveldb/table/merger.cc' object='leveldb/table/leveldb_libleveldb_a-merger.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/table/leveldb_libleveldb_a-merger.o `test -f 'leveldb/table/merger.cc' || echo '$(srcdir)/'`leveldb/table/merger.cc

leveldb/table/leveldb_libleveldb_a-merger.obj: leveldb/table/merger.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/table/leveldb_libleveldb_a-merger.obj -MD -MP -MF leveldb/table/$(DEPDIR)/leveldb_libleveldb_a-merger.Tpo -c -o leveldb/table/leveldb_libleveldb_a-merger.obj `if test -f 'leveldb/table/merger.cc'; then $(CYGPATH_W) 'leveldb/table/merger.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/table/merger.cc'; fi`
	$(AM_V_at)$(am__mv) leveldb/table/$(DEPDIR)/leveldb_libleveldb_a-merger.Tpo leveldb/table/$(DEPDIR)/leveldb_libleveldb_a-merger.Po
#	$(AM_V_CXX)source='leveldb/table/merger.cc' object='leveldb/table/leveldb_libleveldb_a-merger.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/table/leveldb_libleveldb_a-merger.obj `if test -f 'leveldb/table/merger.cc'; then $(CYGPATH_W) 'leveldb/table/merger.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/table/merger.cc'; fi`

leveldb/table/leveldb_libleveldb_a-table_builder.o: leveldb/table/table_builder.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/table/leveldb_libleveldb_a-table_builder.o -MD -MP -MF leveldb/table/$(DEPDIR)/leveldb_libleveldb_a-table_builder.Tpo -c -o leveldb/table/leveldb_libleveldb_a-table_builder.o `test -f 'leveldb/table/table_builder.cc' || echo '$(srcdir)/'`leveldb/table/table_builder.cc
	$(AM_V_at)$(am__mv) leveldb/table/$(DEPDIR)/leveldb_libleveldb_a-table_builder.Tpo leveldb/table/$(DEPDIR)/leveldb_libleveldb_a-table_builder.Po
#	$(AM_V_CXX)source='leveldb/table/table_builder.cc' object='leveldb/table/leveldb_libleveldb_a-table_builder.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/table/leveldb_libleveldb_a-table_builder.o `test -f 'leveldb/table/table_builder.cc' || echo '$(srcdir)/'`leveldb/table/table_builder.cc

leveldb/table/leveldb_libleveldb_a-table_builder.obj: leveldb/table/table_builder.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/table/leveldb_libleveldb_a-table_builder.obj -MD -MP -MF leveldb/table/$(DEPDIR)/leveldb_libleveldb_a-table_builder.Tpo -c -o leveldb/table/leveldb_libleveldb_a-table_builder.obj `if test -f 'leveldb/table/table_builder.cc'; then $(CYGPATH_W) 'leveldb/table/table_builder.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/table/table_builder.cc'; fi`
	$(AM_V_at)$(am__mv) leveldb/table/$(DEPDIR)/leveldb_libleveldb_a-table_builder.Tpo leveldb/table/$(DEPDIR)/leveldb_libleveldb_a-table_builder.Po
#	$(AM_V_CXX)source='leveldb/table/table_builder.cc' object='leveldb/table/leveldb_libleveldb_a-table_builder.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/table/leveldb_libleveldb_a-table_builder.obj `if test -f 'leveldb/table/table_builder.cc'; then $(CYGPATH_W) 'leveldb/table/table_builder.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/table/table_builder.cc'; fi`

leveldb/table/leveldb_libleveldb_a-table.o: leveldb/table/table.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/table/leveldb_libleveldb_a-table.o -MD -MP -MF leveldb/table/$(DEPDIR)/leveldb_libleveldb_a-table.Tpo -c -o leveldb/table/leveldb_libleveldb_a-table.o `test -f 'leveldb/table/table.cc' || echo '$(srcdir)/'`leveldb/table/table.cc
	$(AM_V_at)$(am__mv) leveldb/table/$(DEPDIR)/leveldb_libleveldb_a-table.Tpo leveldb/table/$(DEPDIR)/leveldb_libleveldb_a-table.Po
#	$(AM_V_CXX)source='leveldb/table/table.cc' object='leveldb/table/leveldb_libleveldb_a-table.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/table/leveldb_libleveldb_a-table.o `test -f 'leveldb/table/table.cc' || echo '$(srcdir)/'`leveldb/table/table.cc

leveldb/table/leveldb_libleveldb_a-table.obj: leveldb/table/table.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/table/leveldb_libleveldb_a-table.obj -MD -MP -MF leveldb/table/$(DEPDIR)/leveldb_libleveldb_a-table.Tpo -c -o leveldb/table/leveldb_libleveldb_a-table.obj `if test -f 'leveldb/table/table.cc'; then $(CYGPATH_W) 'leveldb/table/table.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/table/table.cc'; fi`
	$(AM_V_at)$(am__mv) leveldb/table/$(DEPDIR)/leveldb_libleveldb_a-table.Tpo leveldb/table/$(DEPDIR)/leveldb_libleveldb_a-table.Po
#	$(AM_V_CXX)source='leveldb/table/table.cc' object='leveldb/table/leveldb_libleveldb_a-table.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/table/leveldb_libleveldb_a-table.obj `if test -f 'leveldb/table/table.cc'; then $(CYGPATH_W) 'leveldb/table/table.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/table/table.cc'; fi`

leveldb/table/leveldb_libleveldb_a-two_level_iterator.o: leveldb/table/two_level_iterator.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/table/leveldb_libleveldb_a-two_level_iterator.o -MD -MP -MF leveldb/table/$(DEPDIR)/leveldb_libleveldb_a-two_level_iterator.Tpo -c -o leveldb/table/leveldb_libleveldb_a-two_level_iterator.o `test -f 'leveldb/table/two_level_iterator.cc' || echo '$(srcdir)/'`leveldb/table/two_level_iterator.cc
	$(AM_V_at)$(am__mv) leveldb/table/$(DEPDIR)/leveldb_libleveldb_a-two_level_iterator.Tpo leveldb/table/$(DEPDIR)/leveldb_libleveldb_a-two_level_iterator.Po
#	$(AM_V_CXX)source='leveldb/table/two_level_iterator.cc' object='leveldb/table/leveldb_libleveldb_a-two_level_iterator.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/table/leveldb_libleveldb_a-two_level_iterator.o `test -f 'leveldb/table/two_level_iterator.cc' || echo '$(srcdir)/'`leveldb/table/two_level_iterator.cc

leveldb/table/leveldb_libleveldb_a-two_level_iterator.obj: leveldb/table/two_level_iterator.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/table/leveldb_libleveldb_a-two_level_iterator.obj -MD -MP -MF leveldb/table/$(DEPDIR)/leveldb_libleveldb_a-two_level_iterator.Tpo -c -o leveldb/table/leveldb_libleveldb_a-two_level_iterator.obj `if test -f 'leveldb/table/two_level_iterator.cc'; then $(CYGPATH_W) 'leveldb/table/two_level_iterator.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/table/two_level_iterator.cc'; fi`
	$(AM_V_at)$(am__mv) leveldb/table/$(DEPDIR)/leveldb_libleveldb_a-two_level_iterator.Tpo leveldb/table/$(DEPDIR)/leveldb_libleveldb_a-two_level_iterator.Po
#	$(AM_V_CXX)source='leveldb/table/two_level_iterator.cc' object='leveldb/table/leveldb_libleveldb_a-two_level_iterator.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/table/leveldb_libleveldb_a-two_level_iterator.obj `if test -f 'leveldb/table/two_level_iterator.cc'; then $(CYGPATH_W) 'leveldb/table/two_level_iterator.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/table/two_level_iterator.cc'; fi`

leveldb/util/leveldb_libleveldb_a-arena.o: leveldb/util/arena.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/util/leveldb_libleveldb_a-arena.o -MD -MP -MF leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-arena.Tpo -c -o leveldb/util/leveldb_libleveldb_a-arena.o `test -f 'leveldb/util/arena.cc' || echo '$(srcdir)/'`leveldb/util/arena.cc
	$(AM_V_at)$(am__mv) leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-arena.Tpo leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-arena.Po
#	$(AM_V_CXX)source='leveldb/util/arena.cc' object='leveldb/util/leveldb_libleveldb_a-arena.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/util/leveldb_libleveldb_a-arena.o `test -f 'leveldb/util/arena.cc' || echo '$(srcdir)/'`leveldb/util/arena.cc

leveldb/util/leveldb_libleveldb_a-arena.obj: leveldb/util/arena.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/util/leveldb_libleveldb_a-arena.obj -MD -MP -MF leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-arena.Tpo -c -o leveldb/util/leveldb_libleveldb_a-arena.obj `if test -f 'leveldb/util/arena.cc'; then $(CYGPATH_W) 'leveldb/util/arena.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/util/arena.cc'; fi`
	$(AM_V_at)$(am__mv) leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-arena.Tpo leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-arena.Po
#	$(AM_V_CXX)source='leveldb/util/arena.cc' object='leveldb/util/leveldb_libleveldb_a-arena.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/util/leveldb_libleveldb_a-arena.obj `if test -f 'leveldb/util/arena.cc'; then $(CYGPATH_W) 'leveldb/util/arena.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/util/arena.cc'; fi`

leveldb/util/leveldb_libleveldb_a-bloom.o: leveldb/util/bloom.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/util/leveldb_libleveldb_a-bloom.o -MD -MP -MF leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-bloom.Tpo -c -o leveldb/util/leveldb_libleveldb_a-bloom.o `test -f 'leveldb/util/bloom.cc' || echo '$(srcdir)/'`leveldb/util/bloom.cc
	$(AM_V_at)$(am__mv) leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-bloom.Tpo leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-bloom.Po
#	$(AM_V_CXX)source='leveldb/util/bloom.cc' object='leveldb/util/leveldb_libleveldb_a-bloom.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/util/leveldb_libleveldb_a-bloom.o `test -f 'leveldb/util/bloom.cc' || echo '$(srcdir)/'`leveldb/util/bloom.cc

leveldb/util/leveldb_libleveldb_a-bloom.obj: leveldb/util/bloom.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/util/leveldb_libleveldb_a-bloom.obj -MD -MP -MF leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-bloom.Tpo -c -o leveldb/util/leveldb_libleveldb_a-bloom.obj `if test -f 'leveldb/util/bloom.cc'; then $(CYGPATH_W) 'leveldb/util/bloom.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/util/bloom.cc'; fi`
	$(AM_V_at)$(am__mv) leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-bloom.Tpo leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-bloom.Po
#	$(AM_V_CXX)source='leveldb/util/bloom.cc' object='leveldb/util/leveldb_libleveldb_a-bloom.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/util/leveldb_libleveldb_a-bloom.obj `if test -f 'leveldb/util/bloom.cc'; then $(CYGPATH_W) 'leveldb/util/bloom.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/util/bloom.cc'; fi`

leveldb/util/leveldb_libleveldb_a-cache.o: leveldb/util/cache.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/util/leveldb_libleveldb_a-cache.o -MD -MP -MF leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-cache.Tpo -c -o leveldb/util/leveldb_libleveldb_a-cache.o `test -f 'leveldb/util/cache.cc' || echo '$(srcdir)/'`leveldb/util/cache.cc
	$(AM_V_at)$(am__mv) leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-cache.Tpo leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-cache.Po
#	$(AM_V_CXX)source='leveldb/util/cache.cc' object='leveldb/util/leveldb_libleveldb_a-cache.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/util/leveldb_libleveldb_a-cache.o `test -f 'leveldb/util/cache.cc' || echo '$(srcdir)/'`leveldb/util/cache.cc

leveldb/util/leveldb_libleveldb_a-cache.obj: leveldb/util/cache.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/util/leveldb_libleveldb_a-cache.obj -MD -MP -MF leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-cache.Tpo -c -o leveldb/util/leveldb_libleveldb_a-cache.obj `if test -f 'leveldb/util/cache.cc'; then $(CYGPATH_W) 'leveldb/util/cache.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/util/cache.cc'; fi`
	$(AM_V_at)$(am__mv) leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-cache.Tpo leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-cache.Po
#	$(AM_V_CXX)source='leveldb/util/cache.cc' object='leveldb/util/leveldb_libleveldb_a-cache.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/util/leveldb_libleveldb_a-cache.obj `if test -f 'leveldb/util/cache.cc'; then $(CYGPATH_W) 'leveldb/util/cache.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/util/cache.cc'; fi`

leveldb/util/leveldb_libleveldb_a-coding.o: leveldb/util/coding.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/util/leveldb_libleveldb_a-coding.o -MD -MP -MF leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-coding.Tpo -c -o leveldb/util/leveldb_libleveldb_a-coding.o `test -f 'leveldb/util/coding.cc' || echo '$(srcdir)/'`leveldb/util/coding.cc
	$(AM_V_at)$(am__mv) leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-coding.Tpo leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-coding.Po
#	$(AM_V_CXX)source='leveldb/util/coding.cc' object='leveldb/util/leveldb_libleveldb_a-coding.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/util/leveldb_libleveldb_a-coding.o `test -f 'leveldb/util/coding.cc' || echo '$(srcdir)/'`leveldb/util/coding.cc

leveldb/util/leveldb_libleveldb_a-coding.obj: leveldb/util/coding.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/util/leveldb_libleveldb_a-coding.obj -MD -MP -MF leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-coding.Tpo -c -o leveldb/util/leveldb_libleveldb_a-coding.obj `if test -f 'leveldb/util/coding.cc'; then $(CYGPATH_W) 'leveldb/util/coding.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/util/coding.cc'; fi`
	$(AM_V_at)$(am__mv) leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-coding.Tpo leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-coding.Po
#	$(AM_V_CXX)source='leveldb/util/coding.cc' object='leveldb/util/leveldb_libleveldb_a-coding.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/util/leveldb_libleveldb_a-coding.obj `if test -f 'leveldb/util/coding.cc'; then $(CYGPATH_W) 'leveldb/util/coding.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/util/coding.cc'; fi`

leveldb/util/leveldb_libleveldb_a-comparator.o: leveldb/util/comparator.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/util/leveldb_libleveldb_a-comparator.o -MD -MP -MF leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-comparator.Tpo -c -o leveldb/util/leveldb_libleveldb_a-comparator.o `test -f 'leveldb/util/comparator.cc' || echo '$(srcdir)/'`leveldb/util/comparator.cc
	$(AM_V_at)$(am__mv) leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-comparator.Tpo leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-comparator.Po
#	$(AM_V_CXX)source='leveldb/util/comparator.cc' object='leveldb/util/leveldb_libleveldb_a-comparator.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/util/leveldb_libleveldb_a-comparator.o `test -f 'leveldb/util/comparator.cc' || echo '$(srcdir)/'`leveldb/util/comparator.cc

leveldb/util/leveldb_libleveldb_a-comparator.obj: leveldb/util/comparator.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/util/leveldb_libleveldb_a-comparator.obj -MD -MP -MF leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-comparator.Tpo -c -o leveldb/util/leveldb_libleveldb_a-comparator.obj `if test -f 'leveldb/util/comparator.cc'; then $(CYGPATH_W) 'leveldb/util/comparator.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/util/comparator.cc'; fi`
	$(AM_V_at)$(am__mv) leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-comparator.Tpo leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-comparator.Po
#	$(AM_V_CXX)source='leveldb/util/comparator.cc' object='leveldb/util/leveldb_libleveldb_a-comparator.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/util/leveldb_libleveldb_a-comparator.obj `if test -f 'leveldb/util/comparator.cc'; then $(CYGPATH_W) 'leveldb/util/comparator.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/util/comparator.cc'; fi`

leveldb/util/leveldb_libleveldb_a-crc32c.o: leveldb/util/crc32c.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/util/leveldb_libleveldb_a-crc32c.o -MD -MP -MF leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-crc32c.Tpo -c -o leveldb/util/leveldb_libleveldb_a-crc32c.o `test -f 'leveldb/util/crc32c.cc' || echo '$(srcdir)/'`leveldb/util/crc32c.cc
	$(AM_V_at)$(am__mv) leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-crc32c.Tpo leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-crc32c.Po
#	$(AM_V_CXX)source='leveldb/util/crc32c.cc' object='leveldb/util/leveldb_libleveldb_a-crc32c.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/util/leveldb_libleveldb_a-crc32c.o `test -f 'leveldb/util/crc32c.cc' || echo '$(srcdir)/'`leveldb/util/crc32c.cc

leveldb/util/leveldb_libleveldb_a-crc32c.obj: leveldb/util/crc32c.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/util/leveldb_libleveldb_a-crc32c.obj -MD -MP -MF leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-crc32c.Tpo -c -o leveldb/util/leveldb_libleveldb_a-crc32c.obj `if test -f 'leveldb/util/crc32c.cc'; then $(CYGPATH_W) 'leveldb/util/crc32c.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/util/crc32c.cc'; fi`
	$(AM_V_at)$(am__mv) leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-crc32c.Tpo leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-crc32c.Po
#	$(AM_V_CXX)source='leveldb/util/crc32c.cc' object='leveldb/util/leveldb_libleveldb_a-crc32c.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/util/leveldb_libleveldb_a-crc32c.obj `if test -f 'leveldb/util/crc32c.cc'; then $(CYGPATH_W) 'leveldb/util/crc32c.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/util/crc32c.cc'; fi`

leveldb/util/leveldb_libleveldb_a-env.o: leveldb/util/env.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/util/leveldb_libleveldb_a-env.o -MD -MP -MF leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-env.Tpo -c -o leveldb/util/leveldb_libleveldb_a-env.o `test -f 'leveldb/util/env.cc' || echo '$(srcdir)/'`leveldb/util/env.cc
	$(AM_V_at)$(am__mv) leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-env.Tpo leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-env.Po
#	$(AM_V_CXX)source='leveldb/util/env.cc' object='leveldb/util/leveldb_libleveldb_a-env.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/util/leveldb_libleveldb_a-env.o `test -f 'leveldb/util/env.cc' || echo '$(srcdir)/'`leveldb/util/env.cc

leveldb/util/leveldb_libleveldb_a-env.obj: leveldb/util/env.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/util/leveldb_libleveldb_a-env.obj -MD -MP -MF leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-env.Tpo -c -o leveldb/util/leveldb_libleveldb_a-env.obj `if test -f 'leveldb/util/env.cc'; then $(CYGPATH_W) 'leveldb/util/env.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/util/env.cc'; fi`
	$(AM_V_at)$(am__mv) leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-env.Tpo leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-env.Po
#	$(AM_V_CXX)source='leveldb/util/env.cc' object='leveldb/util/leveldb_libleveldb_a-env.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/util/leveldb_libleveldb_a-env.obj `if test -f 'leveldb/util/env.cc'; then $(CYGPATH_W) 'leveldb/util/env.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/util/env.cc'; fi`

leveldb/util/leveldb_libleveldb_a-env_posix.o: leveldb/util/env_posix.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/util/leveldb_libleveldb_a-env_posix.o -MD -MP -MF leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-env_posix.Tpo -c -o leveldb/util/leveldb_libleveldb_a-env_posix.o `test -f 'leveldb/util/env_posix.cc' || echo '$(srcdir)/'`leveldb/util/env_posix.cc
	$(AM_V_at)$(am__mv) leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-env_posix.Tpo leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-env_posix.Po
#	$(AM_V_CXX)source='leveldb/util/env_posix.cc' object='leveldb/util/leveldb_libleveldb_a-env_posix.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/util/leveldb_libleveldb_a-env_posix.o `test -f 'leveldb/util/env_posix.cc' || echo '$(srcdir)/'`leveldb/util/env_posix.cc

leveldb/util/leveldb_libleveldb_a-env_posix.obj: leveldb/util/env_posix.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/util/leveldb_libleveldb_a-env_posix.obj -MD -MP -MF leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-env_posix.Tpo -c -o leveldb/util/leveldb_libleveldb_a-env_posix.obj `if test -f 'leveldb/util/env_posix.cc'; then $(CYGPATH_W) 'leveldb/util/env_posix.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/util/env_posix.cc'; fi`
	$(AM_V_at)$(am__mv) leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-env_posix.Tpo leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-env_posix.Po
#	$(AM_V_CXX)source='leveldb/util/env_posix.cc' object='leveldb/util/leveldb_libleveldb_a-env_posix.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/util/leveldb_libleveldb_a-env_posix.obj `if test -f 'leveldb/util/env_posix.cc'; then $(CYGPATH_W) 'leveldb/util/env_posix.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/util/env_posix.cc'; fi`

leveldb/util/leveldb_libleveldb_a-filter_policy.o: leveldb/util/filter_policy.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/util/leveldb_libleveldb_a-filter_policy.o -MD -MP -MF leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-filter_policy.Tpo -c -o leveldb/util/leveldb_libleveldb_a-filter_policy.o `test -f 'leveldb/util/filter_policy.cc' || echo '$(srcdir)/'`leveldb/util/filter_policy.cc
	$(AM_V_at)$(am__mv) leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-filter_policy.Tpo leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-filter_policy.Po
#	$(AM_V_CXX)source='leveldb/util/filter_policy.cc' object='leveldb/util/leveldb_libleveldb_a-filter_policy.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/util/leveldb_libleveldb_a-filter_policy.o `test -f 'leveldb/util/filter_policy.cc' || echo '$(srcdir)/'`leveldb/util/filter_policy.cc

leveldb/util/leveldb_libleveldb_a-filter_policy.obj: leveldb/util/filter_policy.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/util/leveldb_libleveldb_a-filter_policy.obj -MD -MP -MF leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-filter_policy.Tpo -c -o leveldb/util/leveldb_libleveldb_a-filter_policy.obj `if test -f 'leveldb/util/filter_policy.cc'; then $(CYGPATH_W) 'leveldb/util/filter_policy.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/util/filter_policy.cc'; fi`
	$(AM_V_at)$(am__mv) leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-filter_policy.Tpo leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-filter_policy.Po
#	$(AM_V_CXX)source='leveldb/util/filter_policy.cc' object='leveldb/util/leveldb_libleveldb_a-filter_policy.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/util/leveldb_libleveldb_a-filter_policy.obj `if test -f 'leveldb/util/filter_policy.cc'; then $(CYGPATH_W) 'leveldb/util/filter_policy.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/util/filter_policy.cc'; fi`

leveldb/util/leveldb_libleveldb_a-hash.o: leveldb/util/hash.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/util/leveldb_libleveldb_a-hash.o -MD -MP -MF leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-hash.Tpo -c -o leveldb/util/leveldb_libleveldb_a-hash.o `test -f 'leveldb/util/hash.cc' || echo '$(srcdir)/'`leveldb/util/hash.cc
	$(AM_V_at)$(am__mv) leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-hash.Tpo leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-hash.Po
#	$(AM_V_CXX)source='leveldb/util/hash.cc' object='leveldb/util/leveldb_libleveldb_a-hash.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/util/leveldb_libleveldb_a-hash.o `test -f 'leveldb/util/hash.cc' || echo '$(srcdir)/'`leveldb/util/hash.cc

leveldb/util/leveldb_libleveldb_a-hash.obj: leveldb/util/hash.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/util/leveldb_libleveldb_a-hash.obj -MD -MP -MF leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-hash.Tpo -c -o leveldb/util/leveldb_libleveldb_a-hash.obj `if test -f 'leveldb/util/hash.cc'; then $(CYGPATH_W) 'leveldb/util/hash.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/util/hash.cc'; fi`
	$(AM_V_at)$(am__mv) leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-hash.Tpo leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-hash.Po
#	$(AM_V_CXX)source='leveldb/util/hash.cc' object='leveldb/util/leveldb_libleveldb_a-hash.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/util/leveldb_libleveldb_a-hash.obj `if test -f 'leveldb/util/hash.cc'; then $(CYGPATH_W) 'leveldb/util/hash.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/util/hash.cc'; fi`

leveldb/util/leveldb_libleveldb_a-histogram.o: leveldb/util/histogram.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/util/leveldb_libleveldb_a-histogram.o -MD -MP -MF leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-histogram.Tpo -c -o leveldb/util/leveldb_libleveldb_a-histogram.o `test -f 'leveldb/util/histogram.cc' || echo '$(srcdir)/'`leveldb/util/histogram.cc
	$(AM_V_at)$(am__mv) leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-histogram.Tpo leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-histogram.Po
#	$(AM_V_CXX)source='leveldb/util/histogram.cc' object='leveldb/util/leveldb_libleveldb_a-histogram.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/util/leveldb_libleveldb_a-histogram.o `test -f 'leveldb/util/histogram.cc' || echo '$(srcdir)/'`leveldb/util/histogram.cc

leveldb/util/leveldb_libleveldb_a-histogram.obj: leveldb/util/histogram.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/util/leveldb_libleveldb_a-histogram.obj -MD -MP -MF leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-histogram.Tpo -c -o leveldb/util/leveldb_libleveldb_a-histogram.obj `if test -f 'leveldb/util/histogram.cc'; then $(CYGPATH_W) 'leveldb/util/histogram.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/util/histogram.cc'; fi`
	$(AM_V_at)$(am__mv) leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-histogram.Tpo leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-histogram.Po
#	$(AM_V_CXX)source='leveldb/util/histogram.cc' object='leveldb/util/leveldb_libleveldb_a-histogram.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/util/leveldb_libleveldb_a-histogram.obj `if test -f 'leveldb/util/histogram.cc'; then $(CYGPATH_W) 'leveldb/util/histogram.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/util/histogram.cc'; fi`

leveldb/util/leveldb_libleveldb_a-logging.o: leveldb/util/logging.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/util/leveldb_libleveldb_a-logging.o -MD -MP -MF leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-logging.Tpo -c -o leveldb/util/leveldb_libleveldb_a-logging.o `test -f 'leveldb/util/logging.cc' || echo '$(srcdir)/'`leveldb/util/logging.cc
	$(AM_V_at)$(am__mv) leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-logging.Tpo leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-logging.Po
#	$(AM_V_CXX)source='leveldb/util/logging.cc' object='leveldb/util/leveldb_libleveldb_a-logging.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/util/leveldb_libleveldb_a-logging.o `test -f 'leveldb/util/logging.cc' || echo '$(srcdir)/'`leveldb/util/logging.cc

leveldb/util/leveldb_libleveldb_a-logging.obj: leveldb/util/logging.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/util/leveldb_libleveldb_a-logging.obj -MD -MP -MF leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-logging.Tpo -c -o leveldb/util/leveldb_libleveldb_a-logging.obj `if test -f 'leveldb/util/logging.cc'; then $(CYGPATH_W) 'leveldb/util/logging.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/util/logging.cc'; fi`
	$(AM_V_at)$(am__mv) leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-logging.Tpo leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-logging.Po
#	$(AM_V_CXX)source='leveldb/util/logging.cc' object='leveldb/util/leveldb_libleveldb_a-logging.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/util/leveldb_libleveldb_a-logging.obj `if test -f 'leveldb/util/logging.cc'; then $(CYGPATH_W) 'leveldb/util/logging.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/util/logging.cc'; fi`

leveldb/util/leveldb_libleveldb_a-options.o: leveldb/util/options.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/util/leveldb_libleveldb_a-options.o -MD -MP -MF leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-options.Tpo -c -o leveldb/util/leveldb_libleveldb_a-options.o `test -f 'leveldb/util/options.cc' || echo '$(srcdir)/'`leveldb/util/options.cc
	$(AM_V_at)$(am__mv) leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-options.Tpo leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-options.Po
#	$(AM_V_CXX)source='leveldb/util/options.cc' object='leveldb/util/leveldb_libleveldb_a-options.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/util/leveldb_libleveldb_a-options.o `test -f 'leveldb/util/options.cc' || echo '$(srcdir)/'`leveldb/util/options.cc

leveldb/util/leveldb_libleveldb_a-options.obj: leveldb/util/options.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/util/leveldb_libleveldb_a-options.obj -MD -MP -MF leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-options.Tpo -c -o leveldb/util/leveldb_libleveldb_a-options.obj `if test -f 'leveldb/util/options.cc'; then $(CYGPATH_W) 'leveldb/util/options.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/util/options.cc'; fi`
	$(AM_V_at)$(am__mv) leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-options.Tpo leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-options.Po
#	$(AM_V_CXX)source='leveldb/util/options.cc' object='leveldb/util/leveldb_libleveldb_a-options.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/util/leveldb_libleveldb_a-options.obj `if test -f 'leveldb/util/options.cc'; then $(CYGPATH_W) 'leveldb/util/options.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/util/options.cc'; fi`

leveldb/util/leveldb_libleveldb_a-status.o: leveldb/util/status.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/util/leveldb_libleveldb_a-status.o -MD -MP -MF leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-status.Tpo -c -o leveldb/util/leveldb_libleveldb_a-status.o `test -f 'leveldb/util/status.cc' || echo '$(srcdir)/'`leveldb/util/status.cc
	$(AM_V_at)$(am__mv) leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-status.Tpo leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-status.Po
#	$(AM_V_CXX)source='leveldb/util/status.cc' object='leveldb/util/leveldb_libleveldb_a-status.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/util/leveldb_libleveldb_a-status.o `test -f 'leveldb/util/status.cc' || echo '$(srcdir)/'`leveldb/util/status.cc

leveldb/util/leveldb_libleveldb_a-status.obj: leveldb/util/status.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/util/leveldb_libleveldb_a-status.obj -MD -MP -MF leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-status.Tpo -c -o leveldb/util/leveldb_libleveldb_a-status.obj `if test -f 'leveldb/util/status.cc'; then $(CYGPATH_W) 'leveldb/util/status.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/util/status.cc'; fi`
	$(AM_V_at)$(am__mv) leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-status.Tpo leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-status.Po
#	$(AM_V_CXX)source='leveldb/util/status.cc' object='leveldb/util/leveldb_libleveldb_a-status.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/util/leveldb_libleveldb_a-status.obj `if test -f 'leveldb/util/status.cc'; then $(CYGPATH_W) 'leveldb/util/status.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/util/status.cc'; fi`

leveldb/util/leveldb_libleveldb_a-env_win.o: leveldb/util/env_win.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/util/leveldb_libleveldb_a-env_win.o -MD -MP -MF leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-env_win.Tpo -c -o leveldb/util/leveldb_libleveldb_a-env_win.o `test -f 'leveldb/util/env_win.cc' || echo '$(srcdir)/'`leveldb/util/env_win.cc
	$(AM_V_at)$(am__mv) leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-env_win.Tpo leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-env_win.Po
#	$(AM_V_CXX)source='leveldb/util/env_win.cc' object='leveldb/util/leveldb_libleveldb_a-env_win.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/util/leveldb_libleveldb_a-env_win.o `test -f 'leveldb/util/env_win.cc' || echo '$(srcdir)/'`leveldb/util/env_win.cc

leveldb/util/leveldb_libleveldb_a-env_win.obj: leveldb/util/env_win.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/util/leveldb_libleveldb_a-env_win.obj -MD -MP -MF leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-env_win.Tpo -c -o leveldb/util/leveldb_libleveldb_a-env_win.obj `if test -f 'leveldb/util/env_win.cc'; then $(CYGPATH_W) 'leveldb/util/env_win.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/util/env_win.cc'; fi`
	$(AM_V_at)$(am__mv) leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-env_win.Tpo leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-env_win.Po
#	$(AM_V_CXX)source='leveldb/util/env_win.cc' object='leveldb/util/leveldb_libleveldb_a-env_win.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/util/leveldb_libleveldb_a-env_win.obj `if test -f 'leveldb/util/env_win.cc'; then $(CYGPATH_W) 'leveldb/util/env_win.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/util/env_win.cc'; fi`

leveldb/port/leveldb_libleveldb_a-port_win.o: leveldb/port/port_win.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/port/leveldb_libleveldb_a-port_win.o -MD -MP -MF leveldb/port/$(DEPDIR)/leveldb_libleveldb_a-port_win.Tpo -c -o leveldb/port/leveldb_libleveldb_a-port_win.o `test -f 'leveldb/port/port_win.cc' || echo '$(srcdir)/'`leveldb/port/port_win.cc
	$(AM_V_at)$(am__mv) leveldb/port/$(DEPDIR)/leveldb_libleveldb_a-port_win.Tpo leveldb/port/$(DEPDIR)/leveldb_libleveldb_a-port_win.Po
#	$(AM_V_CXX)source='leveldb/port/port_win.cc' object='leveldb/port/leveldb_libleveldb_a-port_win.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/port/leveldb_libleveldb_a-port_win.o `test -f 'leveldb/port/port_win.cc' || echo '$(srcdir)/'`leveldb/port/port_win.cc

leveldb/port/leveldb_libleveldb_a-port_win.obj: leveldb/port/port_win.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/port/leveldb_libleveldb_a-port_win.obj -MD -MP -MF leveldb/port/$(DEPDIR)/leveldb_libleveldb_a-port_win.Tpo -c -o leveldb/port/leveldb_libleveldb_a-port_win.obj `if test -f 'leveldb/port/port_win.cc'; then $(CYGPATH_W) 'leveldb/port/port_win.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/port/port_win.cc'; fi`
	$(AM_V_at)$(am__mv) leveldb/port/$(DEPDIR)/leveldb_libleveldb_a-port_win.Tpo leveldb/port/$(DEPDIR)/leveldb_libleveldb_a-port_win.Po
#	$(AM_V_CXX)source='leveldb/port/port_win.cc' object='leveldb/port/leveldb_libleveldb_a-port_win.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/port/leveldb_libleveldb_a-port_win.obj `if test -f 'leveldb/port/port_win.cc'; then $(CYGPATH_W) 'leveldb/port/port_win.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/port/port_win.cc'; fi`

leveldb/port/leveldb_libleveldb_a-port_posix.o: leveldb/port/port_posix.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/port/leveldb_libleveldb_a-port_posix.o -MD -MP -MF leveldb/port/$(DEPDIR)/leveldb_libleveldb_a-port_posix.Tpo -c -o leveldb/port/leveldb_libleveldb_a-port_posix.o `test -f 'leveldb/port/port_posix.cc' || echo '$(srcdir)/'`leveldb/port/port_posix.cc
	$(AM_V_at)$(am__mv) leveldb/port/$(DEPDIR)/leveldb_libleveldb_a-port_posix.Tpo leveldb/port/$(DEPDIR)/leveldb_libleveldb_a-port_posix.Po
#	$(AM_V_CXX)source='leveldb/port/port_posix.cc' object='leveldb/port/leveldb_libleveldb_a-port_posix.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/port/leveldb_libleveldb_a-port_posix.o `test -f 'leveldb/port/port_posix.cc' || echo '$(srcdir)/'`leveldb/port/port_posix.cc

leveldb/port/leveldb_libleveldb_a-port_posix.obj: leveldb/port/port_posix.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/port/leveldb_libleveldb_a-port_posix.obj -MD -MP -MF leveldb/port/$(DEPDIR)/leveldb_libleveldb_a-port_posix.Tpo -c -o leveldb/port/leveldb_libleveldb_a-port_posix.obj `if test -f 'leveldb/port/port_posix.cc'; then $(CYGPATH_W) 'leveldb/port/port_posix.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/port/port_posix.cc'; fi`
	$(AM_V_at)$(am__mv) leveldb/port/$(DEPDIR)/leveldb_libleveldb_a-port_posix.Tpo leveldb/port/$(DEPDIR)/leveldb_libleveldb_a-port_posix.Po
#	$(AM_V_CXX)source='leveldb/port/port_posix.cc' object='leveldb/port/leveldb_libleveldb_a-port_posix.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/port/leveldb_libleveldb_a-port_posix.obj `if test -f 'leveldb/port/port_posix.cc'; then $(CYGPATH_W) 'leveldb/port/port_posix.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/port/port_posix.cc'; fi`

leveldb/port/leveldb_libleveldb_sse42_a-port_posix_sse.o: leveldb/port/port_posix_sse.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_sse42_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_sse42_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/port/leveldb_libleveldb_sse42_a-port_posix_sse.o -MD -MP -MF leveldb/port/$(DEPDIR)/leveldb_libleveldb_sse42_a-port_posix_sse.Tpo -c -o leveldb/port/leveldb_libleveldb_sse42_a-port_posix_sse.o `test -f 'leveldb/port/port_posix_sse.cc' || echo '$(srcdir)/'`leveldb/port/port_posix_sse.cc
	$(AM_V_at)$(am__mv) leveldb/port/$(DEPDIR)/leveldb_libleveldb_sse42_a-port_posix_sse.Tpo leveldb/port/$(DEPDIR)/leveldb_libleveldb_sse42_a-port_posix_sse.Po
#	$(AM_V_CXX)source='leveldb/port/port_posix_sse.cc' object='leveldb/port/leveldb_libleveldb_sse42_a-port_posix_sse.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_sse42_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_sse42_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/port/leveldb_libleveldb_sse42_a-port_posix_sse.o `test -f 'leveldb/port/port_posix_sse.cc' || echo '$(srcdir)/'`leveldb/port/port_posix_sse.cc

leveldb/port/leveldb_libleveldb_sse42_a-port_posix_sse.obj: leveldb/port/port_posix_sse.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_sse42_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_sse42_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/port/leveldb_libleveldb_sse42_a-port_posix_sse.obj -MD -MP -MF leveldb/port/$(DEPDIR)/leveldb_libleveldb_sse42_a-port_posix_sse.Tpo -c -o leveldb/port/leveldb_libleveldb_sse42_a-port_posix_sse.obj `if test -f 'leveldb/port/port_posix_sse.cc'; then $(CYGPATH_W) 'leveldb/port/port_posix_sse.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/port/port_posix_sse.cc'; fi`
	$(AM_V_at)$(am__mv) leveldb/port/$(DEPDIR)/leveldb_libleveldb_sse42_a-port_posix_sse.Tpo leveldb/port/$(DEPDIR)/leveldb_libleveldb_sse42_a-port_posix_sse.Po
#	$(AM_V_CXX)source='leveldb/port/port_posix_sse.cc' object='leveldb/port/leveldb_libleveldb_sse42_a-port_posix_sse.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_sse42_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_sse42_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/port/leveldb_libleveldb_sse42_a-port_posix_sse.obj `if test -f 'leveldb/port/port_posix_sse.cc'; then $(CYGPATH_W) 'leveldb/port/port_posix_sse.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/port/port_posix_sse.cc'; fi`

leveldb/helpers/memenv/leveldb_libmemenv_a-memenv.o: leveldb/helpers/memenv/memenv.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libmemenv_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libmemenv_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/helpers/memenv/leveldb_libmemenv_a-memenv.o -MD -MP -MF leveldb/helpers/memenv/$(DEPDIR)/leveldb_libmemenv_a-memenv.Tpo -c -o leveldb/helpers/memenv/leveldb_libmemenv_a-memenv.o `test -f 'leveldb/helpers/memenv/memenv.cc' || echo '$(srcdir)/'`leveldb/helpers/memenv/memenv.cc
	$(AM_V_at)$(am__mv) leveldb/helpers/memenv/$(DEPDIR)/leveldb_libmemenv_a-memenv.Tpo leveldb/helpers/memenv/$(DEPDIR)/leveldb_libmemenv_a-memenv.Po
#	$(AM_V_CXX)source='leveldb/helpers/memenv/memenv.cc' object='leveldb/helpers/memenv/leveldb_libmemenv_a-memenv.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libmemenv_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libmemenv_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/helpers/memenv/leveldb_libmemenv_a-memenv.o `test -f 'leveldb/helpers/memenv/memenv.cc' || echo '$(srcdir)/'`leveldb/helpers/memenv/memenv.cc

leveldb/helpers/memenv/leveldb_libmemenv_a-memenv.obj: leveldb/helpers/memenv/memenv.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libmemenv_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libmemenv_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/helpers/memenv/leveldb_libmemenv_a-memenv.obj -MD -MP -MF leveldb/helpers/memenv/$(DEPDIR)/leveldb_libmemenv_a-memenv.Tpo -c -o leveldb/helpers/memenv/leveldb_libmemenv_a-memenv.obj `if test -f 'leveldb/helpers/memenv/memenv.cc'; then $(CYGPATH_W) 'leveldb/helpers/memenv/memenv.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/helpers/memenv/memenv.cc'; fi`
	$(AM_V_at)$(am__mv) leveldb/helpers/memenv/$(DEPDIR)/leveldb_libmemenv_a-memenv.Tpo leveldb/helpers/memenv/$(DEPDIR)/leveldb_libmemenv_a-memenv.Po
#	$(AM_V_CXX)source='leveldb/helpers/memenv/memenv.cc' object='leveldb/helpers/memenv/leveldb_libmemenv_a-memenv.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libmemenv_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libmemenv_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/helpers/memenv/leveldb_libmemenv_a-memenv.obj `if test -f 'leveldb/helpers/memenv/memenv.cc'; then $(CYGPATH_W) 'leveldb/helpers/memenv/memenv.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/helpers/memenv/memenv.cc'; fi`

rpc/libheptafranc_cli_a-client.o: rpc/client.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_cli_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_cli_a_CXXFLAGS) $(CXXFLAGS) -MT rpc/libheptafranc_cli_a-client.o -MD -MP -MF rpc/$(DEPDIR)/libheptafranc_cli_a-client.Tpo -c -o rpc/libheptafranc_cli_a-client.o `test -f 'rpc/client.cpp' || echo '$(srcdir)/'`rpc/client.cpp
	$(AM_V_at)$(am__mv) rpc/$(DEPDIR)/libheptafranc_cli_a-client.Tpo rpc/$(DEPDIR)/libheptafranc_cli_a-client.Po
#	$(AM_V_CXX)source='rpc/client.cpp' object='rpc/libheptafranc_cli_a-client.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_cli_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_cli_a_CXXFLAGS) $(CXXFLAGS) -c -o rpc/libheptafranc_cli_a-client.o `test -f 'rpc/client.cpp' || echo '$(srcdir)/'`rpc/client.cpp

rpc/libheptafranc_cli_a-client.obj: rpc/client.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_cli_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_cli_a_CXXFLAGS) $(CXXFLAGS) -MT rpc/libheptafranc_cli_a-client.obj -MD -MP -MF rpc/$(DEPDIR)/libheptafranc_cli_a-client.Tpo -c -o rpc/libheptafranc_cli_a-client.obj `if test -f 'rpc/client.cpp'; then $(CYGPATH_W) 'rpc/client.cpp'; else $(CYGPATH_W) '$(srcdir)/rpc/client.cpp'; fi`
	$(AM_V_at)$(am__mv) rpc/$(DEPDIR)/libheptafranc_cli_a-client.Tpo rpc/$(DEPDIR)/libheptafranc_cli_a-client.Po
#	$(AM_V_CXX)source='rpc/client.cpp' object='rpc/libheptafranc_cli_a-client.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_cli_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_cli_a_CXXFLAGS) $(CXXFLAGS) -c -o rpc/libheptafranc_cli_a-client.obj `if test -f 'rpc/client.cpp'; then $(CYGPATH_W) 'rpc/client.cpp'; else $(CYGPATH_W) '$(srcdir)/rpc/client.cpp'; fi`

libheptafranc_common_a-base58.o: base58.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_common_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_common_a_CXXFLAGS) $(CXXFLAGS) -MT libheptafranc_common_a-base58.o -MD -MP -MF $(DEPDIR)/libheptafranc_common_a-base58.Tpo -c -o libheptafranc_common_a-base58.o `test -f 'base58.cpp' || echo '$(srcdir)/'`base58.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libheptafranc_common_a-base58.Tpo $(DEPDIR)/libheptafranc_common_a-base58.Po
#	$(AM_V_CXX)source='base58.cpp' object='libheptafranc_common_a-base58.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_common_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_common_a_CXXFLAGS) $(CXXFLAGS) -c -o libheptafranc_common_a-base58.o `test -f 'base58.cpp' || echo '$(srcdir)/'`base58.cpp

libheptafranc_common_a-base58.obj: base58.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_common_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_common_a_CXXFLAGS) $(CXXFLAGS) -MT libheptafranc_common_a-base58.obj -MD -MP -MF $(DEPDIR)/libheptafranc_common_a-base58.Tpo -c -o libheptafranc_common_a-base58.obj `if test -f 'base58.cpp'; then $(CYGPATH_W) 'base58.cpp'; else $(CYGPATH_W) '$(srcdir)/base58.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libheptafranc_common_a-base58.Tpo $(DEPDIR)/libheptafranc_common_a-base58.Po
#	$(AM_V_CXX)source='base58.cpp' object='libheptafranc_common_a-base58.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_common_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_common_a_CXXFLAGS) $(CXXFLAGS) -c -o libheptafranc_common_a-base58.obj `if test -f 'base58.cpp'; then $(CYGPATH_W) 'base58.cpp'; else $(CYGPATH_W) '$(srcdir)/base58.cpp'; fi`

libheptafranc_common_a-bech32.o: bech32.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_common_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_common_a_CXXFLAGS) $(CXXFLAGS) -MT libheptafranc_common_a-bech32.o -MD -MP -MF $(DEPDIR)/libheptafranc_common_a-bech32.Tpo -c -o libheptafranc_common_a-bech32.o `test -f 'bech32.cpp' || echo '$(srcdir)/'`bech32.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libheptafranc_common_a-bech32.Tpo $(DEPDIR)/libheptafranc_common_a-bech32.Po
#	$(AM_V_CXX)source='bech32.cpp' object='libheptafranc_common_a-bech32.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_common_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_common_a_CXXFLAGS) $(CXXFLAGS) -c -o libheptafranc_common_a-bech32.o `test -f 'bech32.cpp' || echo '$(srcdir)/'`bech32.cpp

libheptafranc_common_a-bech32.obj: bech32.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_common_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_common_a_CXXFLAGS) $(CXXFLAGS) -MT libheptafranc_common_a-bech32.obj -MD -MP -MF $(DEPDIR)/libheptafranc_common_a-bech32.Tpo -c -o libheptafranc_common_a-bech32.obj `if test -f 'bech32.cpp'; then $(CYGPATH_W) 'bech32.cpp'; else $(CYGPATH_W) '$(srcdir)/bech32.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libheptafranc_common_a-bech32.Tpo $(DEPDIR)/libheptafranc_common_a-bech32.Po
#	$(AM_V_CXX)source='bech32.cpp' object='libheptafranc_common_a-bech32.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_common_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_common_a_CXXFLAGS) $(CXXFLAGS) -c -o libheptafranc_common_a-bech32.obj `if test -f 'bech32.cpp'; then $(CYGPATH_W) 'bech32.cpp'; else $(CYGPATH_W) '$(srcdir)/bech32.cpp'; fi`

libheptafranc_common_a-chainparams.o: chainparams.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_common_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_common_a_CXXFLAGS) $(CXXFLAGS) -MT libheptafranc_common_a-chainparams.o -MD -MP -MF $(DEPDIR)/libheptafranc_common_a-chainparams.Tpo -c -o libheptafranc_common_a-chainparams.o `test -f 'chainparams.cpp' || echo '$(srcdir)/'`chainparams.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libheptafranc_common_a-chainparams.Tpo $(DEPDIR)/libheptafranc_common_a-chainparams.Po
#	$(AM_V_CXX)source='chainparams.cpp' object='libheptafranc_common_a-chainparams.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_common_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_common_a_CXXFLAGS) $(CXXFLAGS) -c -o libheptafranc_common_a-chainparams.o `test -f 'chainparams.cpp' || echo '$(srcdir)/'`chainparams.cpp

libheptafranc_common_a-chainparams.obj: chainparams.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_common_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_common_a_CXXFLAGS) $(CXXFLAGS) -MT libheptafranc_common_a-chainparams.obj -MD -MP -MF $(DEPDIR)/libheptafranc_common_a-chainparams.Tpo -c -o libheptafranc_common_a-chainparams.obj `if test -f 'chainparams.cpp'; then $(CYGPATH_W) 'chainparams.cpp'; else $(CYGPATH_W) '$(srcdir)/chainparams.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libheptafranc_common_a-chainparams.Tpo $(DEPDIR)/libheptafranc_common_a-chainparams.Po
#	$(AM_V_CXX)source='chainparams.cpp' object='libheptafranc_common_a-chainparams.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_common_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_common_a_CXXFLAGS) $(CXXFLAGS) -c -o libheptafranc_common_a-chainparams.obj `if test -f 'chainparams.cpp'; then $(CYGPATH_W) 'chainparams.cpp'; else $(CYGPATH_W) '$(srcdir)/chainparams.cpp'; fi`

libheptafranc_common_a-coins.o: coins.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_common_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_common_a_CXXFLAGS) $(CXXFLAGS) -MT libheptafranc_common_a-coins.o -MD -MP -MF $(DEPDIR)/libheptafranc_common_a-coins.Tpo -c -o libheptafranc_common_a-coins.o `test -f 'coins.cpp' || echo '$(srcdir)/'`coins.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libheptafranc_common_a-coins.Tpo $(DEPDIR)/libheptafranc_common_a-coins.Po
#	$(AM_V_CXX)source='coins.cpp' object='libheptafranc_common_a-coins.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_common_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_common_a_CXXFLAGS) $(CXXFLAGS) -c -o libheptafranc_common_a-coins.o `test -f 'coins.cpp' || echo '$(srcdir)/'`coins.cpp

libheptafranc_common_a-coins.obj: coins.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_common_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_common_a_CXXFLAGS) $(CXXFLAGS) -MT libheptafranc_common_a-coins.obj -MD -MP -MF $(DEPDIR)/libheptafranc_common_a-coins.Tpo -c -o libheptafranc_common_a-coins.obj `if test -f 'coins.cpp'; then $(CYGPATH_W) 'coins.cpp'; else $(CYGPATH_W) '$(srcdir)/coins.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libheptafranc_common_a-coins.Tpo $(DEPDIR)/libheptafranc_common_a-coins.Po
#	$(AM_V_CXX)source='coins.cpp' object='libheptafranc_common_a-coins.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_common_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_common_a_CXXFLAGS) $(CXXFLAGS) -c -o libheptafranc_common_a-coins.obj `if test -f 'coins.cpp'; then $(CYGPATH_W) 'coins.cpp'; else $(CYGPATH_W) '$(srcdir)/coins.cpp'; fi`

libheptafranc_common_a-compressor.o: compressor.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_common_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_common_a_CXXFLAGS) $(CXXFLAGS) -MT libheptafranc_common_a-compressor.o -MD -MP -MF $(DEPDIR)/libheptafranc_common_a-compressor.Tpo -c -o libheptafranc_common_a-compressor.o `test -f 'compressor.cpp' || echo '$(srcdir)/'`compressor.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libheptafranc_common_a-compressor.Tpo $(DEPDIR)/libheptafranc_common_a-compressor.Po
#	$(AM_V_CXX)source='compressor.cpp' object='libheptafranc_common_a-compressor.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_common_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_common_a_CXXFLAGS) $(CXXFLAGS) -c -o libheptafranc_common_a-compressor.o `test -f 'compressor.cpp' || echo '$(srcdir)/'`compressor.cpp

libheptafranc_common_a-compressor.obj: compressor.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_common_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_common_a_CXXFLAGS) $(CXXFLAGS) -MT libheptafranc_common_a-compressor.obj -MD -MP -MF $(DEPDIR)/libheptafranc_common_a-compressor.Tpo -c -o libheptafranc_common_a-compressor.obj `if test -f 'compressor.cpp'; then $(CYGPATH_W) 'compressor.cpp'; else $(CYGPATH_W) '$(srcdir)/compressor.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libheptafranc_common_a-compressor.Tpo $(DEPDIR)/libheptafranc_common_a-compressor.Po
#	$(AM_V_CXX)source='compressor.cpp' object='libheptafranc_common_a-compressor.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_common_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_common_a_CXXFLAGS) $(CXXFLAGS) -c -o libheptafranc_common_a-compressor.obj `if test -f 'compressor.cpp'; then $(CYGPATH_W) 'compressor.cpp'; else $(CYGPATH_W) '$(srcdir)/compressor.cpp'; fi`

libheptafranc_common_a-core_read.o: core_read.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_common_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_common_a_CXXFLAGS) $(CXXFLAGS) -MT libheptafranc_common_a-core_read.o -MD -MP -MF $(DEPDIR)/libheptafranc_common_a-core_read.Tpo -c -o libheptafranc_common_a-core_read.o `test -f 'core_read.cpp' || echo '$(srcdir)/'`core_read.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libheptafranc_common_a-core_read.Tpo $(DEPDIR)/libheptafranc_common_a-core_read.Po
#	$(AM_V_CXX)source='core_read.cpp' object='libheptafranc_common_a-core_read.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_common_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_common_a_CXXFLAGS) $(CXXFLAGS) -c -o libheptafranc_common_a-core_read.o `test -f 'core_read.cpp' || echo '$(srcdir)/'`core_read.cpp

libheptafranc_common_a-core_read.obj: core_read.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_common_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_common_a_CXXFLAGS) $(CXXFLAGS) -MT libheptafranc_common_a-core_read.obj -MD -MP -MF $(DEPDIR)/libheptafranc_common_a-core_read.Tpo -c -o libheptafranc_common_a-core_read.obj `if test -f 'core_read.cpp'; then $(CYGPATH_W) 'core_read.cpp'; else $(CYGPATH_W) '$(srcdir)/core_read.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libheptafranc_common_a-core_read.Tpo $(DEPDIR)/libheptafranc_common_a-core_read.Po
#	$(AM_V_CXX)source='core_read.cpp' object='libheptafranc_common_a-core_read.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_common_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_common_a_CXXFLAGS) $(CXXFLAGS) -c -o libheptafranc_common_a-core_read.obj `if test -f 'core_read.cpp'; then $(CYGPATH_W) 'core_read.cpp'; else $(CYGPATH_W) '$(srcdir)/core_read.cpp'; fi`

libheptafranc_common_a-core_write.o: core_write.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_common_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_common_a_CXXFLAGS) $(CXXFLAGS) -MT libheptafranc_common_a-core_write.o -MD -MP -MF $(DEPDIR)/libheptafranc_common_a-core_write.Tpo -c -o libheptafranc_common_a-core_write.o `test -f 'core_write.cpp' || echo '$(srcdir)/'`core_write.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libheptafranc_common_a-core_write.Tpo $(DEPDIR)/libheptafranc_common_a-core_write.Po
#	$(AM_V_CXX)source='core_write.cpp' object='libheptafranc_common_a-core_write.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_common_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_common_a_CXXFLAGS) $(CXXFLAGS) -c -o libheptafranc_common_a-core_write.o `test -f 'core_write.cpp' || echo '$(srcdir)/'`core_write.cpp

libheptafranc_common_a-core_write.obj: core_write.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_common_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_common_a_CXXFLAGS) $(CXXFLAGS) -MT libheptafranc_common_a-core_write.obj -MD -MP -MF $(DEPDIR)/libheptafranc_common_a-core_write.Tpo -c -o libheptafranc_common_a-core_write.obj `if test -f 'core_write.cpp'; then $(CYGPATH_W) 'core_write.cpp'; else $(CYGPATH_W) '$(srcdir)/core_write.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libheptafranc_common_a-core_write.Tpo $(DEPDIR)/libheptafranc_common_a-core_write.Po
#	$(AM_V_CXX)source='core_write.cpp' object='libheptafranc_common_a-core_write.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_common_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_common_a_CXXFLAGS) $(CXXFLAGS) -c -o libheptafranc_common_a-core_write.obj `if test -f 'core_write.cpp'; then $(CYGPATH_W) 'core_write.cpp'; else $(CYGPATH_W) '$(srcdir)/core_write.cpp'; fi`

libheptafranc_common_a-key.o: key.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_common_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_common_a_CXXFLAGS) $(CXXFLAGS) -MT libheptafranc_common_a-key.o -MD -MP -MF $(DEPDIR)/libheptafranc_common_a-key.Tpo -c -o libheptafranc_common_a-key.o `test -f 'key.cpp' || echo '$(srcdir)/'`key.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libheptafranc_common_a-key.Tpo $(DEPDIR)/libheptafranc_common_a-key.Po
#	$(AM_V_CXX)source='key.cpp' object='libheptafranc_common_a-key.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_common_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_common_a_CXXFLAGS) $(CXXFLAGS) -c -o libheptafranc_common_a-key.o `test -f 'key.cpp' || echo '$(srcdir)/'`key.cpp

libheptafranc_common_a-key.obj: key.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_common_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_common_a_CXXFLAGS) $(CXXFLAGS) -MT libheptafranc_common_a-key.obj -MD -MP -MF $(DEPDIR)/libheptafranc_common_a-key.Tpo -c -o libheptafranc_common_a-key.obj `if test -f 'key.cpp'; then $(CYGPATH_W) 'key.cpp'; else $(CYGPATH_W) '$(srcdir)/key.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libheptafranc_common_a-key.Tpo $(DEPDIR)/libheptafranc_common_a-key.Po
#	$(AM_V_CXX)source='key.cpp' object='libheptafranc_common_a-key.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_common_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_common_a_CXXFLAGS) $(CXXFLAGS) -c -o libheptafranc_common_a-key.obj `if test -f 'key.cpp'; then $(CYGPATH_W) 'key.cpp'; else $(CYGPATH_W) '$(srcdir)/key.cpp'; fi`

libheptafranc_common_a-key_io.o: key_io.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_common_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_common_a_CXXFLAGS) $(CXXFLAGS) -MT libheptafranc_common_a-key_io.o -MD -MP -MF $(DEPDIR)/libheptafranc_common_a-key_io.Tpo -c -o libheptafranc_common_a-key_io.o `test -f 'key_io.cpp' || echo '$(srcdir)/'`key_io.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libheptafranc_common_a-key_io.Tpo $(DEPDIR)/libheptafranc_common_a-key_io.Po
#	$(AM_V_CXX)source='key_io.cpp' object='libheptafranc_common_a-key_io.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_common_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_common_a_CXXFLAGS) $(CXXFLAGS) -c -o libheptafranc_common_a-key_io.o `test -f 'key_io.cpp' || echo '$(srcdir)/'`key_io.cpp

libheptafranc_common_a-key_io.obj: key_io.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_common_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_common_a_CXXFLAGS) $(CXXFLAGS) -MT libheptafranc_common_a-key_io.obj -MD -MP -MF $(DEPDIR)/libheptafranc_common_a-key_io.Tpo -c -o libheptafranc_common_a-key_io.obj `if test -f 'key_io.cpp'; then $(CYGPATH_W) 'key_io.cpp'; else $(CYGPATH_W) '$(srcdir)/key_io.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libheptafranc_common_a-key_io.Tpo $(DEPDIR)/libheptafranc_common_a-key_io.Po
#	$(AM_V_CXX)source='key_io.cpp' object='libheptafranc_common_a-key_io.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_common_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_common_a_CXXFLAGS) $(CXXFLAGS) -c -o libheptafranc_common_a-key_io.obj `if test -f 'key_io.cpp'; then $(CYGPATH_W) 'key_io.cpp'; else $(CYGPATH_W) '$(srcdir)/key_io.cpp'; fi`

libheptafranc_common_a-keystore.o: keystore.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_common_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_common_a_CXXFLAGS) $(CXXFLAGS) -MT libheptafranc_common_a-keystore.o -MD -MP -MF $(DEPDIR)/libheptafranc_common_a-keystore.Tpo -c -o libheptafranc_common_a-keystore.o `test -f 'keystore.cpp' || echo '$(srcdir)/'`keystore.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libheptafranc_common_a-keystore.Tpo $(DEPDIR)/libheptafranc_common_a-keystore.Po
#	$(AM_V_CXX)source='keystore.cpp' object='libheptafranc_common_a-keystore.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_common_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_common_a_CXXFLAGS) $(CXXFLAGS) -c -o libheptafranc_common_a-keystore.o `test -f 'keystore.cpp' || echo '$(srcdir)/'`keystore.cpp

libheptafranc_common_a-keystore.obj: keystore.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_common_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_common_a_CXXFLAGS) $(CXXFLAGS) -MT libheptafranc_common_a-keystore.obj -MD -MP -MF $(DEPDIR)/libheptafranc_common_a-keystore.Tpo -c -o libheptafranc_common_a-keystore.obj `if test -f 'keystore.cpp'; then $(CYGPATH_W) 'keystore.cpp'; else $(CYGPATH_W) '$(srcdir)/keystore.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libheptafranc_common_a-keystore.Tpo $(DEPDIR)/libheptafranc_common_a-keystore.Po
#	$(AM_V_CXX)source='keystore.cpp' object='libheptafranc_common_a-keystore.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_common_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_common_a_CXXFLAGS) $(CXXFLAGS) -c -o libheptafranc_common_a-keystore.obj `if test -f 'keystore.cpp'; then $(CYGPATH_W) 'keystore.cpp'; else $(CYGPATH_W) '$(srcdir)/keystore.cpp'; fi`

libheptafranc_common_a-netaddress.o: netaddress.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_common_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_common_a_CXXFLAGS) $(CXXFLAGS) -MT libheptafranc_common_a-netaddress.o -MD -MP -MF $(DEPDIR)/libheptafranc_common_a-netaddress.Tpo -c -o libheptafranc_common_a-netaddress.o `test -f 'netaddress.cpp' || echo '$(srcdir)/'`netaddress.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libheptafranc_common_a-netaddress.Tpo $(DEPDIR)/libheptafranc_common_a-netaddress.Po
#	$(AM_V_CXX)source='netaddress.cpp' object='libheptafranc_common_a-netaddress.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_common_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_common_a_CXXFLAGS) $(CXXFLAGS) -c -o libheptafranc_common_a-netaddress.o `test -f 'netaddress.cpp' || echo '$(srcdir)/'`netaddress.cpp

libheptafranc_common_a-netaddress.obj: netaddress.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_common_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_common_a_CXXFLAGS) $(CXXFLAGS) -MT libheptafranc_common_a-netaddress.obj -MD -MP -MF $(DEPDIR)/libheptafranc_common_a-netaddress.Tpo -c -o libheptafranc_common_a-netaddress.obj `if test -f 'netaddress.cpp'; then $(CYGPATH_W) 'netaddress.cpp'; else $(CYGPATH_W) '$(srcdir)/netaddress.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libheptafranc_common_a-netaddress.Tpo $(DEPDIR)/libheptafranc_common_a-netaddress.Po
#	$(AM_V_CXX)source='netaddress.cpp' object='libheptafranc_common_a-netaddress.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_common_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_common_a_CXXFLAGS) $(CXXFLAGS) -c -o libheptafranc_common_a-netaddress.obj `if test -f 'netaddress.cpp'; then $(CYGPATH_W) 'netaddress.cpp'; else $(CYGPATH_W) '$(srcdir)/netaddress.cpp'; fi`

libheptafranc_common_a-netbase.o: netbase.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_common_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_common_a_CXXFLAGS) $(CXXFLAGS) -MT libheptafranc_common_a-netbase.o -MD -MP -MF $(DEPDIR)/libheptafranc_common_a-netbase.Tpo -c -o libheptafranc_common_a-netbase.o `test -f 'netbase.cpp' || echo '$(srcdir)/'`netbase.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libheptafranc_common_a-netbase.Tpo $(DEPDIR)/libheptafranc_common_a-netbase.Po
#	$(AM_V_CXX)source='netbase.cpp' object='libheptafranc_common_a-netbase.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_common_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_common_a_CXXFLAGS) $(CXXFLAGS) -c -o libheptafranc_common_a-netbase.o `test -f 'netbase.cpp' || echo '$(srcdir)/'`netbase.cpp

libheptafranc_common_a-netbase.obj: netbase.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_common_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_common_a_CXXFLAGS) $(CXXFLAGS) -MT libheptafranc_common_a-netbase.obj -MD -MP -MF $(DEPDIR)/libheptafranc_common_a-netbase.Tpo -c -o libheptafranc_common_a-netbase.obj `if test -f 'netbase.cpp'; then $(CYGPATH_W) 'netbase.cpp'; else $(CYGPATH_W) '$(srcdir)/netbase.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libheptafranc_common_a-netbase.Tpo $(DEPDIR)/libheptafranc_common_a-netbase.Po
#	$(AM_V_CXX)source='netbase.cpp' object='libheptafranc_common_a-netbase.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_common_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_common_a_CXXFLAGS) $(CXXFLAGS) -c -o libheptafranc_common_a-netbase.obj `if test -f 'netbase.cpp'; then $(CYGPATH_W) 'netbase.cpp'; else $(CYGPATH_W) '$(srcdir)/netbase.cpp'; fi`

policy/libheptafranc_common_a-feerate.o: policy/feerate.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_common_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_common_a_CXXFLAGS) $(CXXFLAGS) -MT policy/libheptafranc_common_a-feerate.o -MD -MP -MF policy/$(DEPDIR)/libheptafranc_common_a-feerate.Tpo -c -o policy/libheptafranc_common_a-feerate.o `test -f 'policy/feerate.cpp' || echo '$(srcdir)/'`policy/feerate.cpp
	$(AM_V_at)$(am__mv) policy/$(DEPDIR)/libheptafranc_common_a-feerate.Tpo policy/$(DEPDIR)/libheptafranc_common_a-feerate.Po
#	$(AM_V_CXX)source='policy/feerate.cpp' object='policy/libheptafranc_common_a-feerate.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_common_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_common_a_CXXFLAGS) $(CXXFLAGS) -c -o policy/libheptafranc_common_a-feerate.o `test -f 'policy/feerate.cpp' || echo '$(srcdir)/'`policy/feerate.cpp

policy/libheptafranc_common_a-feerate.obj: policy/feerate.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_common_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_common_a_CXXFLAGS) $(CXXFLAGS) -MT policy/libheptafranc_common_a-feerate.obj -MD -MP -MF policy/$(DEPDIR)/libheptafranc_common_a-feerate.Tpo -c -o policy/libheptafranc_common_a-feerate.obj `if test -f 'policy/feerate.cpp'; then $(CYGPATH_W) 'policy/feerate.cpp'; else $(CYGPATH_W) '$(srcdir)/policy/feerate.cpp'; fi`
	$(AM_V_at)$(am__mv) policy/$(DEPDIR)/libheptafranc_common_a-feerate.Tpo policy/$(DEPDIR)/libheptafranc_common_a-feerate.Po
#	$(AM_V_CXX)source='policy/feerate.cpp' object='policy/libheptafranc_common_a-feerate.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_common_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_common_a_CXXFLAGS) $(CXXFLAGS) -c -o policy/libheptafranc_common_a-feerate.obj `if test -f 'policy/feerate.cpp'; then $(CYGPATH_W) 'policy/feerate.cpp'; else $(CYGPATH_W) '$(srcdir)/policy/feerate.cpp'; fi`

libheptafranc_common_a-protocol.o: protocol.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_common_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_common_a_CXXFLAGS) $(CXXFLAGS) -MT libheptafranc_common_a-protocol.o -MD -MP -MF $(DEPDIR)/libheptafranc_common_a-protocol.Tpo -c -o libheptafranc_common_a-protocol.o `test -f 'protocol.cpp' || echo '$(srcdir)/'`protocol.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libheptafranc_common_a-protocol.Tpo $(DEPDIR)/libheptafranc_common_a-protocol.Po
#	$(AM_V_CXX)source='protocol.cpp' object='libheptafranc_common_a-protocol.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_common_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_common_a_CXXFLAGS) $(CXXFLAGS) -c -o libheptafranc_common_a-protocol.o `test -f 'protocol.cpp' || echo '$(srcdir)/'`protocol.cpp

libheptafranc_common_a-protocol.obj: protocol.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_common_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_common_a_CXXFLAGS) $(CXXFLAGS) -MT libheptafranc_common_a-protocol.obj -MD -MP -MF $(DEPDIR)/libheptafranc_common_a-protocol.Tpo -c -o libheptafranc_common_a-protocol.obj `if test -f 'protocol.cpp'; then $(CYGPATH_W) 'protocol.cpp'; else $(CYGPATH_W) '$(srcdir)/protocol.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libheptafranc_common_a-protocol.Tpo $(DEPDIR)/libheptafranc_common_a-protocol.Po
#	$(AM_V_CXX)source='protocol.cpp' object='libheptafranc_common_a-protocol.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_common_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_common_a_CXXFLAGS) $(CXXFLAGS) -c -o libheptafranc_common_a-protocol.obj `if test -f 'protocol.cpp'; then $(CYGPATH_W) 'protocol.cpp'; else $(CYGPATH_W) '$(srcdir)/protocol.cpp'; fi`

libheptafranc_common_a-scheduler.o: scheduler.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_common_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_common_a_CXXFLAGS) $(CXXFLAGS) -MT libheptafranc_common_a-scheduler.o -MD -MP -MF $(DEPDIR)/libheptafranc_common_a-scheduler.Tpo -c -o libheptafranc_common_a-scheduler.o `test -f 'scheduler.cpp' || echo '$(srcdir)/'`scheduler.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libheptafranc_common_a-scheduler.Tpo $(DEPDIR)/libheptafranc_common_a-scheduler.Po
#	$(AM_V_CXX)source='scheduler.cpp' object='libheptafranc_common_a-scheduler.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_common_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_common_a_CXXFLAGS) $(CXXFLAGS) -c -o libheptafranc_common_a-scheduler.o `test -f 'scheduler.cpp' || echo '$(srcdir)/'`scheduler.cpp

libheptafranc_common_a-scheduler.obj: scheduler.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_common_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_common_a_CXXFLAGS) $(CXXFLAGS) -MT libheptafranc_common_a-scheduler.obj -MD -MP -MF $(DEPDIR)/libheptafranc_common_a-scheduler.Tpo -c -o libheptafranc_common_a-scheduler.obj `if test -f 'scheduler.cpp'; then $(CYGPATH_W) 'scheduler.cpp'; else $(CYGPATH_W) '$(srcdir)/scheduler.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libheptafranc_common_a-scheduler.Tpo $(DEPDIR)/libheptafranc_common_a-scheduler.Po
#	$(AM_V_CXX)source='scheduler.cpp' object='libheptafranc_common_a-scheduler.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_common_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_common_a_CXXFLAGS) $(CXXFLAGS) -c -o libheptafranc_common_a-scheduler.obj `if test -f 'scheduler.cpp'; then $(CYGPATH_W) 'scheduler.cpp'; else $(CYGPATH_W) '$(srcdir)/scheduler.cpp'; fi`

script/libheptafranc_common_a-descriptor.o: script/descriptor.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_common_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_common_a_CXXFLAGS) $(CXXFLAGS) -MT script/libheptafranc_common_a-descriptor.o -MD -MP -MF script/$(DEPDIR)/libheptafranc_common_a-descriptor.Tpo -c -o script/libheptafranc_common_a-descriptor.o `test -f 'script/descriptor.cpp' || echo '$(srcdir)/'`script/descriptor.cpp
	$(AM_V_at)$(am__mv) script/$(DEPDIR)/libheptafranc_common_a-descriptor.Tpo script/$(DEPDIR)/libheptafranc_common_a-descriptor.Po
#	$(AM_V_CXX)source='script/descriptor.cpp' object='script/libheptafranc_common_a-descriptor.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_common_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_common_a_CXXFLAGS) $(CXXFLAGS) -c -o script/libheptafranc_common_a-descriptor.o `test -f 'script/descriptor.cpp' || echo '$(srcdir)/'`script/descriptor.cpp

script/libheptafranc_common_a-descriptor.obj: script/descriptor.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_common_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_common_a_CXXFLAGS) $(CXXFLAGS) -MT script/libheptafranc_common_a-descriptor.obj -MD -MP -MF script/$(DEPDIR)/libheptafranc_common_a-descriptor.Tpo -c -o script/libheptafranc_common_a-descriptor.obj `if test -f 'script/descriptor.cpp'; then $(CYGPATH_W) 'script/descriptor.cpp'; else $(CYGPATH_W) '$(srcdir)/script/descriptor.cpp'; fi`
	$(AM_V_at)$(am__mv) script/$(DEPDIR)/libheptafranc_common_a-descriptor.Tpo script/$(DEPDIR)/libheptafranc_common_a-descriptor.Po
#	$(AM_V_CXX)source='script/descriptor.cpp' object='script/libheptafranc_common_a-descriptor.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_common_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_common_a_CXXFLAGS) $(CXXFLAGS) -c -o script/libheptafranc_common_a-descriptor.obj `if test -f 'script/descriptor.cpp'; then $(CYGPATH_W) 'script/descriptor.cpp'; else $(CYGPATH_W) '$(srcdir)/script/descriptor.cpp'; fi`

script/libheptafranc_common_a-ismine.o: script/ismine.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_common_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_common_a_CXXFLAGS) $(CXXFLAGS) -MT script/libheptafranc_common_a-ismine.o -MD -MP -MF script/$(DEPDIR)/libheptafranc_common_a-ismine.Tpo -c -o script/libheptafranc_common_a-ismine.o `test -f 'script/ismine.cpp' || echo '$(srcdir)/'`script/ismine.cpp
	$(AM_V_at)$(am__mv) script/$(DEPDIR)/libheptafranc_common_a-ismine.Tpo script/$(DEPDIR)/libheptafranc_common_a-ismine.Po
#	$(AM_V_CXX)source='script/ismine.cpp' object='script/libheptafranc_common_a-ismine.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_common_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_common_a_CXXFLAGS) $(CXXFLAGS) -c -o script/libheptafranc_common_a-ismine.o `test -f 'script/ismine.cpp' || echo '$(srcdir)/'`script/ismine.cpp

script/libheptafranc_common_a-ismine.obj: script/ismine.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_common_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_common_a_CXXFLAGS) $(CXXFLAGS) -MT script/libheptafranc_common_a-ismine.obj -MD -MP -MF script/$(DEPDIR)/libheptafranc_common_a-ismine.Tpo -c -o script/libheptafranc_common_a-ismine.obj `if test -f 'script/ismine.cpp'; then $(CYGPATH_W) 'script/ismine.cpp'; else $(CYGPATH_W) '$(srcdir)/script/ismine.cpp'; fi`
	$(AM_V_at)$(am__mv) script/$(DEPDIR)/libheptafranc_common_a-ismine.Tpo script/$(DEPDIR)/libheptafranc_common_a-ismine.Po
#	$(AM_V_CXX)source='script/ismine.cpp' object='script/libheptafranc_common_a-ismine.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_common_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_common_a_CXXFLAGS) $(CXXFLAGS) -c -o script/libheptafranc_common_a-ismine.obj `if test -f 'script/ismine.cpp'; then $(CYGPATH_W) 'script/ismine.cpp'; else $(CYGPATH_W) '$(srcdir)/script/ismine.cpp'; fi`

script/libheptafranc_common_a-sign.o: script/sign.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_common_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_common_a_CXXFLAGS) $(CXXFLAGS) -MT script/libheptafranc_common_a-sign.o -MD -MP -MF script/$(DEPDIR)/libheptafranc_common_a-sign.Tpo -c -o script/libheptafranc_common_a-sign.o `test -f 'script/sign.cpp' || echo '$(srcdir)/'`script/sign.cpp
	$(AM_V_at)$(am__mv) script/$(DEPDIR)/libheptafranc_common_a-sign.Tpo script/$(DEPDIR)/libheptafranc_common_a-sign.Po
#	$(AM_V_CXX)source='script/sign.cpp' object='script/libheptafranc_common_a-sign.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_common_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_common_a_CXXFLAGS) $(CXXFLAGS) -c -o script/libheptafranc_common_a-sign.o `test -f 'script/sign.cpp' || echo '$(srcdir)/'`script/sign.cpp

script/libheptafranc_common_a-sign.obj: script/sign.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_common_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_common_a_CXXFLAGS) $(CXXFLAGS) -MT script/libheptafranc_common_a-sign.obj -MD -MP -MF script/$(DEPDIR)/libheptafranc_common_a-sign.Tpo -c -o script/libheptafranc_common_a-sign.obj `if test -f 'script/sign.cpp'; then $(CYGPATH_W) 'script/sign.cpp'; else $(CYGPATH_W) '$(srcdir)/script/sign.cpp'; fi`
	$(AM_V_at)$(am__mv) script/$(DEPDIR)/libheptafranc_common_a-sign.Tpo script/$(DEPDIR)/libheptafranc_common_a-sign.Po
#	$(AM_V_CXX)source='script/sign.cpp' object='script/libheptafranc_common_a-sign.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_common_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_common_a_CXXFLAGS) $(CXXFLAGS) -c -o script/libheptafranc_common_a-sign.obj `if test -f 'script/sign.cpp'; then $(CYGPATH_W) 'script/sign.cpp'; else $(CYGPATH_W) '$(srcdir)/script/sign.cpp'; fi`

script/libheptafranc_common_a-standard.o: script/standard.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_common_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_common_a_CXXFLAGS) $(CXXFLAGS) -MT script/libheptafranc_common_a-standard.o -MD -MP -MF script/$(DEPDIR)/libheptafranc_common_a-standard.Tpo -c -o script/libheptafranc_common_a-standard.o `test -f 'script/standard.cpp' || echo '$(srcdir)/'`script/standard.cpp
	$(AM_V_at)$(am__mv) script/$(DEPDIR)/libheptafranc_common_a-standard.Tpo script/$(DEPDIR)/libheptafranc_common_a-standard.Po
#	$(AM_V_CXX)source='script/standard.cpp' object='script/libheptafranc_common_a-standard.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_common_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_common_a_CXXFLAGS) $(CXXFLAGS) -c -o script/libheptafranc_common_a-standard.o `test -f 'script/standard.cpp' || echo '$(srcdir)/'`script/standard.cpp

script/libheptafranc_common_a-standard.obj: script/standard.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_common_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_common_a_CXXFLAGS) $(CXXFLAGS) -MT script/libheptafranc_common_a-standard.obj -MD -MP -MF script/$(DEPDIR)/libheptafranc_common_a-standard.Tpo -c -o script/libheptafranc_common_a-standard.obj `if test -f 'script/standard.cpp'; then $(CYGPATH_W) 'script/standard.cpp'; else $(CYGPATH_W) '$(srcdir)/script/standard.cpp'; fi`
	$(AM_V_at)$(am__mv) script/$(DEPDIR)/libheptafranc_common_a-standard.Tpo script/$(DEPDIR)/libheptafranc_common_a-standard.Po
#	$(AM_V_CXX)source='script/standard.cpp' object='script/libheptafranc_common_a-standard.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_common_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_common_a_CXXFLAGS) $(CXXFLAGS) -c -o script/libheptafranc_common_a-standard.obj `if test -f 'script/standard.cpp'; then $(CYGPATH_W) 'script/standard.cpp'; else $(CYGPATH_W) '$(srcdir)/script/standard.cpp'; fi`

libheptafranc_common_a-warnings.o: warnings.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_common_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_common_a_CXXFLAGS) $(CXXFLAGS) -MT libheptafranc_common_a-warnings.o -MD -MP -MF $(DEPDIR)/libheptafranc_common_a-warnings.Tpo -c -o libheptafranc_common_a-warnings.o `test -f 'warnings.cpp' || echo '$(srcdir)/'`warnings.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libheptafranc_common_a-warnings.Tpo $(DEPDIR)/libheptafranc_common_a-warnings.Po
#	$(AM_V_CXX)source='warnings.cpp' object='libheptafranc_common_a-warnings.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_common_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_common_a_CXXFLAGS) $(CXXFLAGS) -c -o libheptafranc_common_a-warnings.o `test -f 'warnings.cpp' || echo '$(srcdir)/'`warnings.cpp

libheptafranc_common_a-warnings.obj: warnings.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_common_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_common_a_CXXFLAGS) $(CXXFLAGS) -MT libheptafranc_common_a-warnings.obj -MD -MP -MF $(DEPDIR)/libheptafranc_common_a-warnings.Tpo -c -o libheptafranc_common_a-warnings.obj `if test -f 'warnings.cpp'; then $(CYGPATH_W) 'warnings.cpp'; else $(CYGPATH_W) '$(srcdir)/warnings.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libheptafranc_common_a-warnings.Tpo $(DEPDIR)/libheptafranc_common_a-warnings.Po
#	$(AM_V_CXX)source='warnings.cpp' object='libheptafranc_common_a-warnings.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_common_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_common_a_CXXFLAGS) $(CXXFLAGS) -c -o libheptafranc_common_a-warnings.obj `if test -f 'warnings.cpp'; then $(CYGPATH_W) 'warnings.cpp'; else $(CYGPATH_W) '$(srcdir)/warnings.cpp'; fi`

libheptafranc_consensus_a-arith_uint256.o: arith_uint256.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_consensus_a_CXXFLAGS) $(CXXFLAGS) -MT libheptafranc_consensus_a-arith_uint256.o -MD -MP -MF $(DEPDIR)/libheptafranc_consensus_a-arith_uint256.Tpo -c -o libheptafranc_consensus_a-arith_uint256.o `test -f 'arith_uint256.cpp' || echo '$(srcdir)/'`arith_uint256.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libheptafranc_consensus_a-arith_uint256.Tpo $(DEPDIR)/libheptafranc_consensus_a-arith_uint256.Po
#	$(AM_V_CXX)source='arith_uint256.cpp' object='libheptafranc_consensus_a-arith_uint256.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_consensus_a_CXXFLAGS) $(CXXFLAGS) -c -o libheptafranc_consensus_a-arith_uint256.o `test -f 'arith_uint256.cpp' || echo '$(srcdir)/'`arith_uint256.cpp

libheptafranc_consensus_a-arith_uint256.obj: arith_uint256.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_consensus_a_CXXFLAGS) $(CXXFLAGS) -MT libheptafranc_consensus_a-arith_uint256.obj -MD -MP -MF $(DEPDIR)/libheptafranc_consensus_a-arith_uint256.Tpo -c -o libheptafranc_consensus_a-arith_uint256.obj `if test -f 'arith_uint256.cpp'; then $(CYGPATH_W) 'arith_uint256.cpp'; else $(CYGPATH_W) '$(srcdir)/arith_uint256.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libheptafranc_consensus_a-arith_uint256.Tpo $(DEPDIR)/libheptafranc_consensus_a-arith_uint256.Po
#	$(AM_V_CXX)source='arith_uint256.cpp' object='libheptafranc_consensus_a-arith_uint256.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_consensus_a_CXXFLAGS) $(CXXFLAGS) -c -o libheptafranc_consensus_a-arith_uint256.obj `if test -f 'arith_uint256.cpp'; then $(CYGPATH_W) 'arith_uint256.cpp'; else $(CYGPATH_W) '$(srcdir)/arith_uint256.cpp'; fi`

consensus/libheptafranc_consensus_a-merkle.o: consensus/merkle.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_consensus_a_CXXFLAGS) $(CXXFLAGS) -MT consensus/libheptafranc_consensus_a-merkle.o -MD -MP -MF consensus/$(DEPDIR)/libheptafranc_consensus_a-merkle.Tpo -c -o consensus/libheptafranc_consensus_a-merkle.o `test -f 'consensus/merkle.cpp' || echo '$(srcdir)/'`consensus/merkle.cpp
	$(AM_V_at)$(am__mv) consensus/$(DEPDIR)/libheptafranc_consensus_a-merkle.Tpo consensus/$(DEPDIR)/libheptafranc_consensus_a-merkle.Po
#	$(AM_V_CXX)source='consensus/merkle.cpp' object='consensus/libheptafranc_consensus_a-merkle.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_consensus_a_CXXFLAGS) $(CXXFLAGS) -c -o consensus/libheptafranc_consensus_a-merkle.o `test -f 'consensus/merkle.cpp' || echo '$(srcdir)/'`consensus/merkle.cpp

consensus/libheptafranc_consensus_a-merkle.obj: consensus/merkle.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_consensus_a_CXXFLAGS) $(CXXFLAGS) -MT consensus/libheptafranc_consensus_a-merkle.obj -MD -MP -MF consensus/$(DEPDIR)/libheptafranc_consensus_a-merkle.Tpo -c -o consensus/libheptafranc_consensus_a-merkle.obj `if test -f 'consensus/merkle.cpp'; then $(CYGPATH_W) 'consensus/merkle.cpp'; else $(CYGPATH_W) '$(srcdir)/consensus/merkle.cpp'; fi`
	$(AM_V_at)$(am__mv) consensus/$(DEPDIR)/libheptafranc_consensus_a-merkle.Tpo consensus/$(DEPDIR)/libheptafranc_consensus_a-merkle.Po
#	$(AM_V_CXX)source='consensus/merkle.cpp' object='consensus/libheptafranc_consensus_a-merkle.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_consensus_a_CXXFLAGS) $(CXXFLAGS) -c -o consensus/libheptafranc_consensus_a-merkle.obj `if test -f 'consensus/merkle.cpp'; then $(CYGPATH_W) 'consensus/merkle.cpp'; else $(CYGPATH_W) '$(srcdir)/consensus/merkle.cpp'; fi`

libheptafranc_consensus_a-hash.o: hash.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_consensus_a_CXXFLAGS) $(CXXFLAGS) -MT libheptafranc_consensus_a-hash.o -MD -MP -MF $(DEPDIR)/libheptafranc_consensus_a-hash.Tpo -c -o libheptafranc_consensus_a-hash.o `test -f 'hash.cpp' || echo '$(srcdir)/'`hash.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libheptafranc_consensus_a-hash.Tpo $(DEPDIR)/libheptafranc_consensus_a-hash.Po
#	$(AM_V_CXX)source='hash.cpp' object='libheptafranc_consensus_a-hash.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_consensus_a_CXXFLAGS) $(CXXFLAGS) -c -o libheptafranc_consensus_a-hash.o `test -f 'hash.cpp' || echo '$(srcdir)/'`hash.cpp

libheptafranc_consensus_a-hash.obj: hash.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_consensus_a_CXXFLAGS) $(CXXFLAGS) -MT libheptafranc_consensus_a-hash.obj -MD -MP -MF $(DEPDIR)/libheptafranc_consensus_a-hash.Tpo -c -o libheptafranc_consensus_a-hash.obj `if test -f 'hash.cpp'; then $(CYGPATH_W) 'hash.cpp'; else $(CYGPATH_W) '$(srcdir)/hash.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libheptafranc_consensus_a-hash.Tpo $(DEPDIR)/libheptafranc_consensus_a-hash.Po
#	$(AM_V_CXX)source='hash.cpp' object='libheptafranc_consensus_a-hash.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_consensus_a_CXXFLAGS) $(CXXFLAGS) -c -o libheptafranc_consensus_a-hash.obj `if test -f 'hash.cpp'; then $(CYGPATH_W) 'hash.cpp'; else $(CYGPATH_W) '$(srcdir)/hash.cpp'; fi`

primitives/libheptafranc_consensus_a-block.o: primitives/block.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_consensus_a_CXXFLAGS) $(CXXFLAGS) -MT primitives/libheptafranc_consensus_a-block.o -MD -MP -MF primitives/$(DEPDIR)/libheptafranc_consensus_a-block.Tpo -c -o primitives/libheptafranc_consensus_a-block.o `test -f 'primitives/block.cpp' || echo '$(srcdir)/'`primitives/block.cpp
	$(AM_V_at)$(am__mv) primitives/$(DEPDIR)/libheptafranc_consensus_a-block.Tpo primitives/$(DEPDIR)/libheptafranc_consensus_a-block.Po
#	$(AM_V_CXX)source='primitives/block.cpp' object='primitives/libheptafranc_consensus_a-block.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_consensus_a_CXXFLAGS) $(CXXFLAGS) -c -o primitives/libheptafranc_consensus_a-block.o `test -f 'primitives/block.cpp' || echo '$(srcdir)/'`primitives/block.cpp

primitives/libheptafranc_consensus_a-block.obj: primitives/block.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_consensus_a_CXXFLAGS) $(CXXFLAGS) -MT primitives/libheptafranc_consensus_a-block.obj -MD -MP -MF primitives/$(DEPDIR)/libheptafranc_consensus_a-block.Tpo -c -o primitives/libheptafranc_consensus_a-block.obj `if test -f 'primitives/block.cpp'; then $(CYGPATH_W) 'primitives/block.cpp'; else $(CYGPATH_W) '$(srcdir)/primitives/block.cpp'; fi`
	$(AM_V_at)$(am__mv) primitives/$(DEPDIR)/libheptafranc_consensus_a-block.Tpo primitives/$(DEPDIR)/libheptafranc_consensus_a-block.Po
#	$(AM_V_CXX)source='primitives/block.cpp' object='primitives/libheptafranc_consensus_a-block.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_consensus_a_CXXFLAGS) $(CXXFLAGS) -c -o primitives/libheptafranc_consensus_a-block.obj `if test -f 'primitives/block.cpp'; then $(CYGPATH_W) 'primitives/block.cpp'; else $(CYGPATH_W) '$(srcdir)/primitives/block.cpp'; fi`

primitives/libheptafranc_consensus_a-transaction.o: primitives/transaction.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_consensus_a_CXXFLAGS) $(CXXFLAGS) -MT primitives/libheptafranc_consensus_a-transaction.o -MD -MP -MF primitives/$(DEPDIR)/libheptafranc_consensus_a-transaction.Tpo -c -o primitives/libheptafranc_consensus_a-transaction.o `test -f 'primitives/transaction.cpp' || echo '$(srcdir)/'`primitives/transaction.cpp
	$(AM_V_at)$(am__mv) primitives/$(DEPDIR)/libheptafranc_consensus_a-transaction.Tpo primitives/$(DEPDIR)/libheptafranc_consensus_a-transaction.Po
#	$(AM_V_CXX)source='primitives/transaction.cpp' object='primitives/libheptafranc_consensus_a-transaction.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_consensus_a_CXXFLAGS) $(CXXFLAGS) -c -o primitives/libheptafranc_consensus_a-transaction.o `test -f 'primitives/transaction.cpp' || echo '$(srcdir)/'`primitives/transaction.cpp

primitives/libheptafranc_consensus_a-transaction.obj: primitives/transaction.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_consensus_a_CXXFLAGS) $(CXXFLAGS) -MT primitives/libheptafranc_consensus_a-transaction.obj -MD -MP -MF primitives/$(DEPDIR)/libheptafranc_consensus_a-transaction.Tpo -c -o primitives/libheptafranc_consensus_a-transaction.obj `if test -f 'primitives/transaction.cpp'; then $(CYGPATH_W) 'primitives/transaction.cpp'; else $(CYGPATH_W) '$(srcdir)/primitives/transaction.cpp'; fi`
	$(AM_V_at)$(am__mv) primitives/$(DEPDIR)/libheptafranc_consensus_a-transaction.Tpo primitives/$(DEPDIR)/libheptafranc_consensus_a-transaction.Po
#	$(AM_V_CXX)source='primitives/transaction.cpp' object='primitives/libheptafranc_consensus_a-transaction.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_consensus_a_CXXFLAGS) $(CXXFLAGS) -c -o primitives/libheptafranc_consensus_a-transaction.obj `if test -f 'primitives/transaction.cpp'; then $(CYGPATH_W) 'primitives/transaction.cpp'; else $(CYGPATH_W) '$(srcdir)/primitives/transaction.cpp'; fi`

libheptafranc_consensus_a-pubkey.o: pubkey.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_consensus_a_CXXFLAGS) $(CXXFLAGS) -MT libheptafranc_consensus_a-pubkey.o -MD -MP -MF $(DEPDIR)/libheptafranc_consensus_a-pubkey.Tpo -c -o libheptafranc_consensus_a-pubkey.o `test -f 'pubkey.cpp' || echo '$(srcdir)/'`pubkey.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libheptafranc_consensus_a-pubkey.Tpo $(DEPDIR)/libheptafranc_consensus_a-pubkey.Po
#	$(AM_V_CXX)source='pubkey.cpp' object='libheptafranc_consensus_a-pubkey.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_consensus_a_CXXFLAGS) $(CXXFLAGS) -c -o libheptafranc_consensus_a-pubkey.o `test -f 'pubkey.cpp' || echo '$(srcdir)/'`pubkey.cpp

libheptafranc_consensus_a-pubkey.obj: pubkey.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_consensus_a_CXXFLAGS) $(CXXFLAGS) -MT libheptafranc_consensus_a-pubkey.obj -MD -MP -MF $(DEPDIR)/libheptafranc_consensus_a-pubkey.Tpo -c -o libheptafranc_consensus_a-pubkey.obj `if test -f 'pubkey.cpp'; then $(CYGPATH_W) 'pubkey.cpp'; else $(CYGPATH_W) '$(srcdir)/pubkey.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libheptafranc_consensus_a-pubkey.Tpo $(DEPDIR)/libheptafranc_consensus_a-pubkey.Po
#	$(AM_V_CXX)source='pubkey.cpp' object='libheptafranc_consensus_a-pubkey.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_consensus_a_CXXFLAGS) $(CXXFLAGS) -c -o libheptafranc_consensus_a-pubkey.obj `if test -f 'pubkey.cpp'; then $(CYGPATH_W) 'pubkey.cpp'; else $(CYGPATH_W) '$(srcdir)/pubkey.cpp'; fi`

script/libheptafranc_consensus_a-heptafrancconsensus.o: script/heptafrancconsensus.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_consensus_a_CXXFLAGS) $(CXXFLAGS) -MT script/libheptafranc_consensus_a-heptafrancconsensus.o -MD -MP -MF script/$(DEPDIR)/libheptafranc_consensus_a-heptafrancconsensus.Tpo -c -o script/libheptafranc_consensus_a-heptafrancconsensus.o `test -f 'script/heptafrancconsensus.cpp' || echo '$(srcdir)/'`script/heptafrancconsensus.cpp
	$(AM_V_at)$(am__mv) script/$(DEPDIR)/libheptafranc_consensus_a-heptafrancconsensus.Tpo script/$(DEPDIR)/libheptafranc_consensus_a-heptafrancconsensus.Po
#	$(AM_V_CXX)source='script/heptafrancconsensus.cpp' object='script/libheptafranc_consensus_a-heptafrancconsensus.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_consensus_a_CXXFLAGS) $(CXXFLAGS) -c -o script/libheptafranc_consensus_a-heptafrancconsensus.o `test -f 'script/heptafrancconsensus.cpp' || echo '$(srcdir)/'`script/heptafrancconsensus.cpp

script/libheptafranc_consensus_a-heptafrancconsensus.obj: script/heptafrancconsensus.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_consensus_a_CXXFLAGS) $(CXXFLAGS) -MT script/libheptafranc_consensus_a-heptafrancconsensus.obj -MD -MP -MF script/$(DEPDIR)/libheptafranc_consensus_a-heptafrancconsensus.Tpo -c -o script/libheptafranc_consensus_a-heptafrancconsensus.obj `if test -f 'script/heptafrancconsensus.cpp'; then $(CYGPATH_W) 'script/heptafrancconsensus.cpp'; else $(CYGPATH_W) '$(srcdir)/script/heptafrancconsensus.cpp'; fi`
	$(AM_V_at)$(am__mv) script/$(DEPDIR)/libheptafranc_consensus_a-heptafrancconsensus.Tpo script/$(DEPDIR)/libheptafranc_consensus_a-heptafrancconsensus.Po
#	$(AM_V_CXX)source='script/heptafrancconsensus.cpp' object='script/libheptafranc_consensus_a-heptafrancconsensus.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_consensus_a_CXXFLAGS) $(CXXFLAGS) -c -o script/libheptafranc_consensus_a-heptafrancconsensus.obj `if test -f 'script/heptafrancconsensus.cpp'; then $(CYGPATH_W) 'script/heptafrancconsensus.cpp'; else $(CYGPATH_W) '$(srcdir)/script/heptafrancconsensus.cpp'; fi`

script/libheptafranc_consensus_a-interpreter.o: script/interpreter.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_consensus_a_CXXFLAGS) $(CXXFLAGS) -MT script/libheptafranc_consensus_a-interpreter.o -MD -MP -MF script/$(DEPDIR)/libheptafranc_consensus_a-interpreter.Tpo -c -o script/libheptafranc_consensus_a-interpreter.o `test -f 'script/interpreter.cpp' || echo '$(srcdir)/'`script/interpreter.cpp
	$(AM_V_at)$(am__mv) script/$(DEPDIR)/libheptafranc_consensus_a-interpreter.Tpo script/$(DEPDIR)/libheptafranc_consensus_a-interpreter.Po
#	$(AM_V_CXX)source='script/interpreter.cpp' object='script/libheptafranc_consensus_a-interpreter.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_consensus_a_CXXFLAGS) $(CXXFLAGS) -c -o script/libheptafranc_consensus_a-interpreter.o `test -f 'script/interpreter.cpp' || echo '$(srcdir)/'`script/interpreter.cpp

script/libheptafranc_consensus_a-interpreter.obj: script/interpreter.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_consensus_a_CXXFLAGS) $(CXXFLAGS) -MT script/libheptafranc_consensus_a-interpreter.obj -MD -MP -MF script/$(DEPDIR)/libheptafranc_consensus_a-interpreter.Tpo -c -o script/libheptafranc_consensus_a-interpreter.obj `if test -f 'script/interpreter.cpp'; then $(CYGPATH_W) 'script/interpreter.cpp'; else $(CYGPATH_W) '$(srcdir)/script/interpreter.cpp'; fi`
	$(AM_V_at)$(am__mv) script/$(DEPDIR)/libheptafranc_consensus_a-interpreter.Tpo script/$(DEPDIR)/libheptafranc_consensus_a-interpreter.Po
#	$(AM_V_CXX)source='script/interpreter.cpp' object='script/libheptafranc_consensus_a-interpreter.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_consensus_a_CXXFLAGS) $(CXXFLAGS) -c -o script/libheptafranc_consensus_a-interpreter.obj `if test -f 'script/interpreter.cpp'; then $(CYGPATH_W) 'script/interpreter.cpp'; else $(CYGPATH_W) '$(srcdir)/script/interpreter.cpp'; fi`

script/libheptafranc_consensus_a-script.o: script/script.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_consensus_a_CXXFLAGS) $(CXXFLAGS) -MT script/libheptafranc_consensus_a-script.o -MD -MP -MF script/$(DEPDIR)/libheptafranc_consensus_a-script.Tpo -c -o script/libheptafranc_consensus_a-script.o `test -f 'script/script.cpp' || echo '$(srcdir)/'`script/script.cpp
	$(AM_V_at)$(am__mv) script/$(DEPDIR)/libheptafranc_consensus_a-script.Tpo script/$(DEPDIR)/libheptafranc_consensus_a-script.Po
#	$(AM_V_CXX)source='script/script.cpp' object='script/libheptafranc_consensus_a-script.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_consensus_a_CXXFLAGS) $(CXXFLAGS) -c -o script/libheptafranc_consensus_a-script.o `test -f 'script/script.cpp' || echo '$(srcdir)/'`script/script.cpp

script/libheptafranc_consensus_a-script.obj: script/script.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_consensus_a_CXXFLAGS) $(CXXFLAGS) -MT script/libheptafranc_consensus_a-script.obj -MD -MP -MF script/$(DEPDIR)/libheptafranc_consensus_a-script.Tpo -c -o script/libheptafranc_consensus_a-script.obj `if test -f 'script/script.cpp'; then $(CYGPATH_W) 'script/script.cpp'; else $(CYGPATH_W) '$(srcdir)/script/script.cpp'; fi`
	$(AM_V_at)$(am__mv) script/$(DEPDIR)/libheptafranc_consensus_a-script.Tpo script/$(DEPDIR)/libheptafranc_consensus_a-script.Po
#	$(AM_V_CXX)source='script/script.cpp' object='script/libheptafranc_consensus_a-script.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_consensus_a_CXXFLAGS) $(CXXFLAGS) -c -o script/libheptafranc_consensus_a-script.obj `if test -f 'script/script.cpp'; then $(CYGPATH_W) 'script/script.cpp'; else $(CYGPATH_W) '$(srcdir)/script/script.cpp'; fi`

script/libheptafranc_consensus_a-script_error.o: script/script_error.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_consensus_a_CXXFLAGS) $(CXXFLAGS) -MT script/libheptafranc_consensus_a-script_error.o -MD -MP -MF script/$(DEPDIR)/libheptafranc_consensus_a-script_error.Tpo -c -o script/libheptafranc_consensus_a-script_error.o `test -f 'script/script_error.cpp' || echo '$(srcdir)/'`script/script_error.cpp
	$(AM_V_at)$(am__mv) script/$(DEPDIR)/libheptafranc_consensus_a-script_error.Tpo script/$(DEPDIR)/libheptafranc_consensus_a-script_error.Po
#	$(AM_V_CXX)source='script/script_error.cpp' object='script/libheptafranc_consensus_a-script_error.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_consensus_a_CXXFLAGS) $(CXXFLAGS) -c -o script/libheptafranc_consensus_a-script_error.o `test -f 'script/script_error.cpp' || echo '$(srcdir)/'`script/script_error.cpp

script/libheptafranc_consensus_a-script_error.obj: script/script_error.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_consensus_a_CXXFLAGS) $(CXXFLAGS) -MT script/libheptafranc_consensus_a-script_error.obj -MD -MP -MF script/$(DEPDIR)/libheptafranc_consensus_a-script_error.Tpo -c -o script/libheptafranc_consensus_a-script_error.obj `if test -f 'script/script_error.cpp'; then $(CYGPATH_W) 'script/script_error.cpp'; else $(CYGPATH_W) '$(srcdir)/script/script_error.cpp'; fi`
	$(AM_V_at)$(am__mv) script/$(DEPDIR)/libheptafranc_consensus_a-script_error.Tpo script/$(DEPDIR)/libheptafranc_consensus_a-script_error.Po
#	$(AM_V_CXX)source='script/script_error.cpp' object='script/libheptafranc_consensus_a-script_error.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_consensus_a_CXXFLAGS) $(CXXFLAGS) -c -o script/libheptafranc_consensus_a-script_error.obj `if test -f 'script/script_error.cpp'; then $(CYGPATH_W) 'script/script_error.cpp'; else $(CYGPATH_W) '$(srcdir)/script/script_error.cpp'; fi`

libheptafranc_consensus_a-uint256.o: uint256.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_consensus_a_CXXFLAGS) $(CXXFLAGS) -MT libheptafranc_consensus_a-uint256.o -MD -MP -MF $(DEPDIR)/libheptafranc_consensus_a-uint256.Tpo -c -o libheptafranc_consensus_a-uint256.o `test -f 'uint256.cpp' || echo '$(srcdir)/'`uint256.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libheptafranc_consensus_a-uint256.Tpo $(DEPDIR)/libheptafranc_consensus_a-uint256.Po
#	$(AM_V_CXX)source='uint256.cpp' object='libheptafranc_consensus_a-uint256.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_consensus_a_CXXFLAGS) $(CXXFLAGS) -c -o libheptafranc_consensus_a-uint256.o `test -f 'uint256.cpp' || echo '$(srcdir)/'`uint256.cpp

libheptafranc_consensus_a-uint256.obj: uint256.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_consensus_a_CXXFLAGS) $(CXXFLAGS) -MT libheptafranc_consensus_a-uint256.obj -MD -MP -MF $(DEPDIR)/libheptafranc_consensus_a-uint256.Tpo -c -o libheptafranc_consensus_a-uint256.obj `if test -f 'uint256.cpp'; then $(CYGPATH_W) 'uint256.cpp'; else $(CYGPATH_W) '$(srcdir)/uint256.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libheptafranc_consensus_a-uint256.Tpo $(DEPDIR)/libheptafranc_consensus_a-uint256.Po
#	$(AM_V_CXX)source='uint256.cpp' object='libheptafranc_consensus_a-uint256.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_consensus_a_CXXFLAGS) $(CXXFLAGS) -c -o libheptafranc_consensus_a-uint256.obj `if test -f 'uint256.cpp'; then $(CYGPATH_W) 'uint256.cpp'; else $(CYGPATH_W) '$(srcdir)/uint256.cpp'; fi`

libheptafranc_consensus_a-utilstrencodings.o: utilstrencodings.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_consensus_a_CXXFLAGS) $(CXXFLAGS) -MT libheptafranc_consensus_a-utilstrencodings.o -MD -MP -MF $(DEPDIR)/libheptafranc_consensus_a-utilstrencodings.Tpo -c -o libheptafranc_consensus_a-utilstrencodings.o `test -f 'utilstrencodings.cpp' || echo '$(srcdir)/'`utilstrencodings.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libheptafranc_consensus_a-utilstrencodings.Tpo $(DEPDIR)/libheptafranc_consensus_a-utilstrencodings.Po
#	$(AM_V_CXX)source='utilstrencodings.cpp' object='libheptafranc_consensus_a-utilstrencodings.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_consensus_a_CXXFLAGS) $(CXXFLAGS) -c -o libheptafranc_consensus_a-utilstrencodings.o `test -f 'utilstrencodings.cpp' || echo '$(srcdir)/'`utilstrencodings.cpp

libheptafranc_consensus_a-utilstrencodings.obj: utilstrencodings.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_consensus_a_CXXFLAGS) $(CXXFLAGS) -MT libheptafranc_consensus_a-utilstrencodings.obj -MD -MP -MF $(DEPDIR)/libheptafranc_consensus_a-utilstrencodings.Tpo -c -o libheptafranc_consensus_a-utilstrencodings.obj `if test -f 'utilstrencodings.cpp'; then $(CYGPATH_W) 'utilstrencodings.cpp'; else $(CYGPATH_W) '$(srcdir)/utilstrencodings.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libheptafranc_consensus_a-utilstrencodings.Tpo $(DEPDIR)/libheptafranc_consensus_a-utilstrencodings.Po
#	$(AM_V_CXX)source='utilstrencodings.cpp' object='libheptafranc_consensus_a-utilstrencodings.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_consensus_a_CXXFLAGS) $(CXXFLAGS) -c -o libheptafranc_consensus_a-utilstrencodings.obj `if test -f 'utilstrencodings.cpp'; then $(CYGPATH_W) 'utilstrencodings.cpp'; else $(CYGPATH_W) '$(srcdir)/utilstrencodings.cpp'; fi`

libheptafranc_server_a-addrdb.o: addrdb.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_server_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_server_a_CXXFLAGS) $(CXXFLAGS) -MT libheptafranc_server_a-addrdb.o -MD -MP -MF $(DEPDIR)/libheptafranc_server_a-addrdb.Tpo -c -o libheptafranc_server_a-addrdb.o `test -f 'addrdb.cpp' || echo '$(srcdir)/'`addrdb.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libheptafranc_server_a-addrdb.Tpo $(DEPDIR)/libheptafranc_server_a-addrdb.Po
#	$(AM_V_CXX)source='addrdb.cpp' object='libheptafranc_server_a-addrdb.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_server_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libheptafranc_server_a-addrdb.o `test -f 'addrdb.cpp' || echo '$(srcdir)/'`addrdb.cpp

libheptafranc_server_a-addrdb.obj: addrdb.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_server_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_server_a_CXXFLAGS) $(CXXFLAGS) -MT libheptafranc_server_a-addrdb.obj -MD -MP -MF $(DEPDIR)/libheptafranc_server_a-addrdb.Tpo -c -o libheptafranc_server_a-addrdb.obj `if test -f 'addrdb.cpp'; then $(CYGPATH_W) 'addrdb.cpp'; else $(CYGPATH_W) '$(srcdir)/addrdb.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libheptafranc_server_a-addrdb.Tpo $(DEPDIR)/libheptafranc_server_a-addrdb.Po
#	$(AM_V_CXX)source='addrdb.cpp' object='libheptafranc_server_a-addrdb.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_server_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libheptafranc_server_a-addrdb.obj `if test -f 'addrdb.cpp'; then $(CYGPATH_W) 'addrdb.cpp'; else $(CYGPATH_W) '$(srcdir)/addrdb.cpp'; fi`

libheptafranc_server_a-addrman.o: addrman.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_server_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_server_a_CXXFLAGS) $(CXXFLAGS) -MT libheptafranc_server_a-addrman.o -MD -MP -MF $(DEPDIR)/libheptafranc_server_a-addrman.Tpo -c -o libheptafranc_server_a-addrman.o `test -f 'addrman.cpp' || echo '$(srcdir)/'`addrman.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libheptafranc_server_a-addrman.Tpo $(DEPDIR)/libheptafranc_server_a-addrman.Po
#	$(AM_V_CXX)source='addrman.cpp' object='libheptafranc_server_a-addrman.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_server_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libheptafranc_server_a-addrman.o `test -f 'addrman.cpp' || echo '$(srcdir)/'`addrman.cpp

libheptafranc_server_a-addrman.obj: addrman.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_server_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_server_a_CXXFLAGS) $(CXXFLAGS) -MT libheptafranc_server_a-addrman.obj -MD -MP -MF $(DEPDIR)/libheptafranc_server_a-addrman.Tpo -c -o libheptafranc_server_a-addrman.obj `if test -f 'addrman.cpp'; then $(CYGPATH_W) 'addrman.cpp'; else $(CYGPATH_W) '$(srcdir)/addrman.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libheptafranc_server_a-addrman.Tpo $(DEPDIR)/libheptafranc_server_a-addrman.Po
#	$(AM_V_CXX)source='addrman.cpp' object='libheptafranc_server_a-addrman.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_server_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libheptafranc_server_a-addrman.obj `if test -f 'addrman.cpp'; then $(CYGPATH_W) 'addrman.cpp'; else $(CYGPATH_W) '$(srcdir)/addrman.cpp'; fi`

libheptafranc_server_a-bloom.o: bloom.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_server_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_server_a_CXXFLAGS) $(CXXFLAGS) -MT libheptafranc_server_a-bloom.o -MD -MP -MF $(DEPDIR)/libheptafranc_server_a-bloom.Tpo -c -o libheptafranc_server_a-bloom.o `test -f 'bloom.cpp' || echo '$(srcdir)/'`bloom.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libheptafranc_server_a-bloom.Tpo $(DEPDIR)/libheptafranc_server_a-bloom.Po
#	$(AM_V_CXX)source='bloom.cpp' object='libheptafranc_server_a-bloom.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_server_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libheptafranc_server_a-bloom.o `test -f 'bloom.cpp' || echo '$(srcdir)/'`bloom.cpp

libheptafranc_server_a-bloom.obj: bloom.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_server_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_server_a_CXXFLAGS) $(CXXFLAGS) -MT libheptafranc_server_a-bloom.obj -MD -MP -MF $(DEPDIR)/libheptafranc_server_a-bloom.Tpo -c -o libheptafranc_server_a-bloom.obj `if test -f 'bloom.cpp'; then $(CYGPATH_W) 'bloom.cpp'; else $(CYGPATH_W) '$(srcdir)/bloom.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libheptafranc_server_a-bloom.Tpo $(DEPDIR)/libheptafranc_server_a-bloom.Po
#	$(AM_V_CXX)source='bloom.cpp' object='libheptafranc_server_a-bloom.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_server_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libheptafranc_server_a-bloom.obj `if test -f 'bloom.cpp'; then $(CYGPATH_W) 'bloom.cpp'; else $(CYGPATH_W) '$(srcdir)/bloom.cpp'; fi`

libheptafranc_server_a-blockencodings.o: blockencodings.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_server_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_server_a_CXXFLAGS) $(CXXFLAGS) -MT libheptafranc_server_a-blockencodings.o -MD -MP -MF $(DEPDIR)/libheptafranc_server_a-blockencodings.Tpo -c -o libheptafranc_server_a-blockencodings.o `test -f 'blockencodings.cpp' || echo '$(srcdir)/'`blockencodings.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libheptafranc_server_a-blockencodings.Tpo $(DEPDIR)/libheptafranc_server_a-blockencodings.Po
#	$(AM_V_CXX)source='blockencodings.cpp' object='libheptafranc_server_a-blockencodings.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_server_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libheptafranc_server_a-blockencodings.o `test -f 'blockencodings.cpp' || echo '$(srcdir)/'`blockencodings.cpp

libheptafranc_server_a-blockencodings.obj: blockencodings.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_server_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_server_a_CXXFLAGS) $(CXXFLAGS) -MT libheptafranc_server_a-blockencodings.obj -MD -MP -MF $(DEPDIR)/libheptafranc_server_a-blockencodings.Tpo -c -o libheptafranc_server_a-blockencodings.obj `if test -f 'blockencodings.cpp'; then $(CYGPATH_W) 'blockencodings.cpp'; else $(CYGPATH_W) '$(srcdir)/blockencodings.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libheptafranc_server_a-blockencodings.Tpo $(DEPDIR)/libheptafranc_server_a-blockencodings.Po
#	$(AM_V_CXX)source='blockencodings.cpp' object='libheptafranc_server_a-blockencodings.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_server_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libheptafranc_server_a-blockencodings.obj `if test -f 'blockencodings.cpp'; then $(CYGPATH_W) 'blockencodings.cpp'; else $(CYGPATH_W) '$(srcdir)/blockencodings.cpp'; fi`

libheptafranc_server_a-chain.o: chain.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_server_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_server_a_CXXFLAGS) $(CXXFLAGS) -MT libheptafranc_server_a-chain.o -MD -MP -MF $(DEPDIR)/libheptafranc_server_a-chain.Tpo -c -o libheptafranc_server_a-chain.o `test -f 'chain.cpp' || echo '$(srcdir)/'`chain.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libheptafranc_server_a-chain.Tpo $(DEPDIR)/libheptafranc_server_a-chain.Po
#	$(AM_V_CXX)source='chain.cpp' object='libheptafranc_server_a-chain.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_server_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libheptafranc_server_a-chain.o `test -f 'chain.cpp' || echo '$(srcdir)/'`chain.cpp

libheptafranc_server_a-chain.obj: chain.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_server_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_server_a_CXXFLAGS) $(CXXFLAGS) -MT libheptafranc_server_a-chain.obj -MD -MP -MF $(DEPDIR)/libheptafranc_server_a-chain.Tpo -c -o libheptafranc_server_a-chain.obj `if test -f 'chain.cpp'; then $(CYGPATH_W) 'chain.cpp'; else $(CYGPATH_W) '$(srcdir)/chain.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libheptafranc_server_a-chain.Tpo $(DEPDIR)/libheptafranc_server_a-chain.Po
#	$(AM_V_CXX)source='chain.cpp' object='libheptafranc_server_a-chain.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_server_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libheptafranc_server_a-chain.obj `if test -f 'chain.cpp'; then $(CYGPATH_W) 'chain.cpp'; else $(CYGPATH_W) '$(srcdir)/chain.cpp'; fi`

libheptafranc_server_a-checkpoints.o: checkpoints.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_server_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_server_a_CXXFLAGS) $(CXXFLAGS) -MT libheptafranc_server_a-checkpoints.o -MD -MP -MF $(DEPDIR)/libheptafranc_server_a-checkpoints.Tpo -c -o libheptafranc_server_a-checkpoints.o `test -f 'checkpoints.cpp' || echo '$(srcdir)/'`checkpoints.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libheptafranc_server_a-checkpoints.Tpo $(DEPDIR)/libheptafranc_server_a-checkpoints.Po
#	$(AM_V_CXX)source='checkpoints.cpp' object='libheptafranc_server_a-checkpoints.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_server_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libheptafranc_server_a-checkpoints.o `test -f 'checkpoints.cpp' || echo '$(srcdir)/'`checkpoints.cpp

libheptafranc_server_a-checkpoints.obj: checkpoints.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_server_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_server_a_CXXFLAGS) $(CXXFLAGS) -MT libheptafranc_server_a-checkpoints.obj -MD -MP -MF $(DEPDIR)/libheptafranc_server_a-checkpoints.Tpo -c -o libheptafranc_server_a-checkpoints.obj `if test -f 'checkpoints.cpp'; then $(CYGPATH_W) 'checkpoints.cpp'; else $(CYGPATH_W) '$(srcdir)/checkpoints.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libheptafranc_server_a-checkpoints.Tpo $(DEPDIR)/libheptafranc_server_a-checkpoints.Po
#	$(AM_V_CXX)source='checkpoints.cpp' object='libheptafranc_server_a-checkpoints.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_server_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libheptafranc_server_a-checkpoints.obj `if test -f 'checkpoints.cpp'; then $(CYGPATH_W) 'checkpoints.cpp'; else $(CYGPATH_W) '$(srcdir)/checkpoints.cpp'; fi`

consensus/libheptafranc_server_a-tx_verify.o: consensus/tx_verify.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_server_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_server_a_CXXFLAGS) $(CXXFLAGS) -MT consensus/libheptafranc_server_a-tx_verify.o -MD -MP -MF consensus/$(DEPDIR)/libheptafranc_server_a-tx_verify.Tpo -c -o consensus/libheptafranc_server_a-tx_verify.o `test -f 'consensus/tx_verify.cpp' || echo '$(srcdir)/'`consensus/tx_verify.cpp
	$(AM_V_at)$(am__mv) consensus/$(DEPDIR)/libheptafranc_server_a-tx_verify.Tpo consensus/$(DEPDIR)/libheptafranc_server_a-tx_verify.Po
#	$(AM_V_CXX)source='consensus/tx_verify.cpp' object='consensus/libheptafranc_server_a-tx_verify.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_server_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_server_a_CXXFLAGS) $(CXXFLAGS) -c -o consensus/libheptafranc_server_a-tx_verify.o `test -f 'consensus/tx_verify.cpp' || echo '$(srcdir)/'`consensus/tx_verify.cpp

consensus/libheptafranc_server_a-tx_verify.obj: consensus/tx_verify.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_server_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_server_a_CXXFLAGS) $(CXXFLAGS) -MT consensus/libheptafranc_server_a-tx_verify.obj -MD -MP -MF consensus/$(DEPDIR)/libheptafranc_server_a-tx_verify.Tpo -c -o consensus/libheptafranc_server_a-tx_verify.obj `if test -f 'consensus/tx_verify.cpp'; then $(CYGPATH_W) 'consensus/tx_verify.cpp'; else $(CYGPATH_W) '$(srcdir)/consensus/tx_verify.cpp'; fi`
	$(AM_V_at)$(am__mv) consensus/$(DEPDIR)/libheptafranc_server_a-tx_verify.Tpo consensus/$(DEPDIR)/libheptafranc_server_a-tx_verify.Po
#	$(AM_V_CXX)source='consensus/tx_verify.cpp' object='consensus/libheptafranc_server_a-tx_verify.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_server_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_server_a_CXXFLAGS) $(CXXFLAGS) -c -o consensus/libheptafranc_server_a-tx_verify.obj `if test -f 'consensus/tx_verify.cpp'; then $(CYGPATH_W) 'consensus/tx_verify.cpp'; else $(CYGPATH_W) '$(srcdir)/consensus/tx_verify.cpp'; fi`

libheptafranc_server_a-httprpc.o: httprpc.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_server_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_server_a_CXXFLAGS) $(CXXFLAGS) -MT libheptafranc_server_a-httprpc.o -MD -MP -MF $(DEPDIR)/libheptafranc_server_a-httprpc.Tpo -c -o libheptafranc_server_a-httprpc.o `test -f 'httprpc.cpp' || echo '$(srcdir)/'`httprpc.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libheptafranc_server_a-httprpc.Tpo $(DEPDIR)/libheptafranc_server_a-httprpc.Po
#	$(AM_V_CXX)source='httprpc.cpp' object='libheptafranc_server_a-httprpc.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_server_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libheptafranc_server_a-httprpc.o `test -f 'httprpc.cpp' || echo '$(srcdir)/'`httprpc.cpp

libheptafranc_server_a-httprpc.obj: httprpc.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_server_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_server_a_CXXFLAGS) $(CXXFLAGS) -MT libheptafranc_server_a-httprpc.obj -MD -MP -MF $(DEPDIR)/libheptafranc_server_a-httprpc.Tpo -c -o libheptafranc_server_a-httprpc.obj `if test -f 'httprpc.cpp'; then $(CYGPATH_W) 'httprpc.cpp'; else $(CYGPATH_W) '$(srcdir)/httprpc.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libheptafranc_server_a-httprpc.Tpo $(DEPDIR)/libheptafranc_server_a-httprpc.Po
#	$(AM_V_CXX)source='httprpc.cpp' object='libheptafranc_server_a-httprpc.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_server_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libheptafranc_server_a-httprpc.obj `if test -f 'httprpc.cpp'; then $(CYGPATH_W) 'httprpc.cpp'; else $(CYGPATH_W) '$(srcdir)/httprpc.cpp'; fi`

libheptafranc_server_a-httpserver.o: httpserver.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_server_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_server_a_CXXFLAGS) $(CXXFLAGS) -MT libheptafranc_server_a-httpserver.o -MD -MP -MF $(DEPDIR)/libheptafranc_server_a-httpserver.Tpo -c -o libheptafranc_server_a-httpserver.o `test -f 'httpserver.cpp' || echo '$(srcdir)/'`httpserver.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libheptafranc_server_a-httpserver.Tpo $(DEPDIR)/libheptafranc_server_a-httpserver.Po
#	$(AM_V_CXX)source='httpserver.cpp' object='libheptafranc_server_a-httpserver.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_server_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libheptafranc_server_a-httpserver.o `test -f 'httpserver.cpp' || echo '$(srcdir)/'`httpserver.cpp

libheptafranc_server_a-httpserver.obj: httpserver.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_server_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_server_a_CXXFLAGS) $(CXXFLAGS) -MT libheptafranc_server_a-httpserver.obj -MD -MP -MF $(DEPDIR)/libheptafranc_server_a-httpserver.Tpo -c -o libheptafranc_server_a-httpserver.obj `if test -f 'httpserver.cpp'; then $(CYGPATH_W) 'httpserver.cpp'; else $(CYGPATH_W) '$(srcdir)/httpserver.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libheptafranc_server_a-httpserver.Tpo $(DEPDIR)/libheptafranc_server_a-httpserver.Po
#	$(AM_V_CXX)source='httpserver.cpp' object='libheptafranc_server_a-httpserver.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_server_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libheptafranc_server_a-httpserver.obj `if test -f 'httpserver.cpp'; then $(CYGPATH_W) 'httpserver.cpp'; else $(CYGPATH_W) '$(srcdir)/httpserver.cpp'; fi`

index/libheptafranc_server_a-base.o: index/base.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_server_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_server_a_CXXFLAGS) $(CXXFLAGS) -MT index/libheptafranc_server_a-base.o -MD -MP -MF index/$(DEPDIR)/libheptafranc_server_a-base.Tpo -c -o index/libheptafranc_server_a-base.o `test -f 'index/base.cpp' || echo '$(srcdir)/'`index/base.cpp
	$(AM_V_at)$(am__mv) index/$(DEPDIR)/libheptafranc_server_a-base.Tpo index/$(DEPDIR)/libheptafranc_server_a-base.Po
#	$(AM_V_CXX)source='index/base.cpp' object='index/libheptafranc_server_a-base.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_server_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_server_a_CXXFLAGS) $(CXXFLAGS) -c -o index/libheptafranc_server_a-base.o `test -f 'index/base.cpp' || echo '$(srcdir)/'`index/base.cpp

index/libheptafranc_server_a-base.obj: index/base.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_server_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_server_a_CXXFLAGS) $(CXXFLAGS) -MT index/libheptafranc_server_a-base.obj -MD -MP -MF index/$(DEPDIR)/libheptafranc_server_a-base.Tpo -c -o index/libheptafranc_server_a-base.obj `if test -f 'index/base.cpp'; then $(CYGPATH_W) 'index/base.cpp'; else $(CYGPATH_W) '$(srcdir)/index/base.cpp'; fi`
	$(AM_V_at)$(am__mv) index/$(DEPDIR)/libheptafranc_server_a-base.Tpo index/$(DEPDIR)/libheptafranc_server_a-base.Po
#	$(AM_V_CXX)source='index/base.cpp' object='index/libheptafranc_server_a-base.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_server_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_server_a_CXXFLAGS) $(CXXFLAGS) -c -o index/libheptafranc_server_a-base.obj `if test -f 'index/base.cpp'; then $(CYGPATH_W) 'index/base.cpp'; else $(CYGPATH_W) '$(srcdir)/index/base.cpp'; fi`

index/libheptafranc_server_a-txindex.o: index/txindex.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_server_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_server_a_CXXFLAGS) $(CXXFLAGS) -MT index/libheptafranc_server_a-txindex.o -MD -MP -MF index/$(DEPDIR)/libheptafranc_server_a-txindex.Tpo -c -o index/libheptafranc_server_a-txindex.o `test -f 'index/txindex.cpp' || echo '$(srcdir)/'`index/txindex.cpp
	$(AM_V_at)$(am__mv) index/$(DEPDIR)/libheptafranc_server_a-txindex.Tpo index/$(DEPDIR)/libheptafranc_server_a-txindex.Po
#	$(AM_V_CXX)source='index/txindex.cpp' object='index/libheptafranc_server_a-txindex.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_server_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_server_a_CXXFLAGS) $(CXXFLAGS) -c -o index/libheptafranc_server_a-txindex.o `test -f 'index/txindex.cpp' || echo '$(srcdir)/'`index/txindex.cpp

index/libheptafranc_server_a-txindex.obj: index/txindex.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_server_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_server_a_CXXFLAGS) $(CXXFLAGS) -MT index/libheptafranc_server_a-txindex.obj -MD -MP -MF index/$(DEPDIR)/libheptafranc_server_a-txindex.Tpo -c -o index/libheptafranc_server_a-txindex.obj `if test -f 'index/txindex.cpp'; then $(CYGPATH_W) 'index/txindex.cpp'; else $(CYGPATH_W) '$(srcdir)/index/txindex.cpp'; fi`
	$(AM_V_at)$(am__mv) index/$(DEPDIR)/libheptafranc_server_a-txindex.Tpo index/$(DEPDIR)/libheptafranc_server_a-txindex.Po
#	$(AM_V_CXX)source='index/txindex.cpp' object='index/libheptafranc_server_a-txindex.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_server_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_server_a_CXXFLAGS) $(CXXFLAGS) -c -o index/libheptafranc_server_a-txindex.obj `if test -f 'index/txindex.cpp'; then $(CYGPATH_W) 'index/txindex.cpp'; else $(CYGPATH_W) '$(srcdir)/index/txindex.cpp'; fi`

libheptafranc_server_a-init.o: init.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_server_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_server_a_CXXFLAGS) $(CXXFLAGS) -MT libheptafranc_server_a-init.o -MD -MP -MF $(DEPDIR)/libheptafranc_server_a-init.Tpo -c -o libheptafranc_server_a-init.o `test -f 'init.cpp' || echo '$(srcdir)/'`init.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libheptafranc_server_a-init.Tpo $(DEPDIR)/libheptafranc_server_a-init.Po
#	$(AM_V_CXX)source='init.cpp' object='libheptafranc_server_a-init.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_server_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libheptafranc_server_a-init.o `test -f 'init.cpp' || echo '$(srcdir)/'`init.cpp

libheptafranc_server_a-init.obj: init.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_server_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_server_a_CXXFLAGS) $(CXXFLAGS) -MT libheptafranc_server_a-init.obj -MD -MP -MF $(DEPDIR)/libheptafranc_server_a-init.Tpo -c -o libheptafranc_server_a-init.obj `if test -f 'init.cpp'; then $(CYGPATH_W) 'init.cpp'; else $(CYGPATH_W) '$(srcdir)/init.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libheptafranc_server_a-init.Tpo $(DEPDIR)/libheptafranc_server_a-init.Po
#	$(AM_V_CXX)source='init.cpp' object='libheptafranc_server_a-init.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_server_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libheptafranc_server_a-init.obj `if test -f 'init.cpp'; then $(CYGPATH_W) 'init.cpp'; else $(CYGPATH_W) '$(srcdir)/init.cpp'; fi`

libheptafranc_server_a-dbwrapper.o: dbwrapper.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_server_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_server_a_CXXFLAGS) $(CXXFLAGS) -MT libheptafranc_server_a-dbwrapper.o -MD -MP -MF $(DEPDIR)/libheptafranc_server_a-dbwrapper.Tpo -c -o libheptafranc_server_a-dbwrapper.o `test -f 'dbwrapper.cpp' || echo '$(srcdir)/'`dbwrapper.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libheptafranc_server_a-dbwrapper.Tpo $(DEPDIR)/libheptafranc_server_a-dbwrapper.Po
#	$(AM_V_CXX)source='dbwrapper.cpp' object='libheptafranc_server_a-dbwrapper.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_server_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libheptafranc_server_a-dbwrapper.o `test -f 'dbwrapper.cpp' || echo '$(srcdir)/'`dbwrapper.cpp

libheptafranc_server_a-dbwrapper.obj: dbwrapper.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_server_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_server_a_CXXFLAGS) $(CXXFLAGS) -MT libheptafranc_server_a-dbwrapper.obj -MD -MP -MF $(DEPDIR)/libheptafranc_server_a-dbwrapper.Tpo -c -o libheptafranc_server_a-dbwrapper.obj `if test -f 'dbwrapper.cpp'; then $(CYGPATH_W) 'dbwrapper.cpp'; else $(CYGPATH_W) '$(srcdir)/dbwrapper.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libheptafranc_server_a-dbwrapper.Tpo $(DEPDIR)/libheptafranc_server_a-dbwrapper.Po
#	$(AM_V_CXX)source='dbwrapper.cpp' object='libheptafranc_server_a-dbwrapper.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_server_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libheptafranc_server_a-dbwrapper.obj `if test -f 'dbwrapper.cpp'; then $(CYGPATH_W) 'dbwrapper.cpp'; else $(CYGPATH_W) '$(srcdir)/dbwrapper.cpp'; fi`

libheptafranc_server_a-merkleblock.o: merkleblock.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_server_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_server_a_CXXFLAGS) $(CXXFLAGS) -MT libheptafranc_server_a-merkleblock.o -MD -MP -MF $(DEPDIR)/libheptafranc_server_a-merkleblock.Tpo -c -o libheptafranc_server_a-merkleblock.o `test -f 'merkleblock.cpp' || echo '$(srcdir)/'`merkleblock.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libheptafranc_server_a-merkleblock.Tpo $(DEPDIR)/libheptafranc_server_a-merkleblock.Po
#	$(AM_V_CXX)source='merkleblock.cpp' object='libheptafranc_server_a-merkleblock.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_server_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libheptafranc_server_a-merkleblock.o `test -f 'merkleblock.cpp' || echo '$(srcdir)/'`merkleblock.cpp

libheptafranc_server_a-merkleblock.obj: merkleblock.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_server_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_server_a_CXXFLAGS) $(CXXFLAGS) -MT libheptafranc_server_a-merkleblock.obj -MD -MP -MF $(DEPDIR)/libheptafranc_server_a-merkleblock.Tpo -c -o libheptafranc_server_a-merkleblock.obj `if test -f 'merkleblock.cpp'; then $(CYGPATH_W) 'merkleblock.cpp'; else $(CYGPATH_W) '$(srcdir)/merkleblock.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libheptafranc_server_a-merkleblock.Tpo $(DEPDIR)/libheptafranc_server_a-merkleblock.Po
#	$(AM_V_CXX)source='merkleblock.cpp' object='libheptafranc_server_a-merkleblock.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_server_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libheptafranc_server_a-merkleblock.obj `if test -f 'merkleblock.cpp'; then $(CYGPATH_W) 'merkleblock.cpp'; else $(CYGPATH_W) '$(srcdir)/merkleblock.cpp'; fi`

libheptafranc_server_a-miner.o: miner.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_server_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_server_a_CXXFLAGS) $(CXXFLAGS) -MT libheptafranc_server_a-miner.o -MD -MP -MF $(DEPDIR)/libheptafranc_server_a-miner.Tpo -c -o libheptafranc_server_a-miner.o `test -f 'miner.cpp' || echo '$(srcdir)/'`miner.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libheptafranc_server_a-miner.Tpo $(DEPDIR)/libheptafranc_server_a-miner.Po
#	$(AM_V_CXX)source='miner.cpp' object='libheptafranc_server_a-miner.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_server_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libheptafranc_server_a-miner.o `test -f 'miner.cpp' || echo '$(srcdir)/'`miner.cpp

libheptafranc_server_a-miner.obj: miner.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_server_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_server_a_CXXFLAGS) $(CXXFLAGS) -MT libheptafranc_server_a-miner.obj -MD -MP -MF $(DEPDIR)/libheptafranc_server_a-miner.Tpo -c -o libheptafranc_server_a-miner.obj `if test -f 'miner.cpp'; then $(CYGPATH_W) 'miner.cpp'; else $(CYGPATH_W) '$(srcdir)/miner.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libheptafranc_server_a-miner.Tpo $(DEPDIR)/libheptafranc_server_a-miner.Po
#	$(AM_V_CXX)source='miner.cpp' object='libheptafranc_server_a-miner.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_server_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libheptafranc_server_a-miner.obj `if test -f 'miner.cpp'; then $(CYGPATH_W) 'miner.cpp'; else $(CYGPATH_W) '$(srcdir)/miner.cpp'; fi`

libheptafranc_server_a-net.o: net.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_server_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_server_a_CXXFLAGS) $(CXXFLAGS) -MT libheptafranc_server_a-net.o -MD -MP -MF $(DEPDIR)/libheptafranc_server_a-net.Tpo -c -o libheptafranc_server_a-net.o `test -f 'net.cpp' || echo '$(srcdir)/'`net.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libheptafranc_server_a-net.Tpo $(DEPDIR)/libheptafranc_server_a-net.Po
#	$(AM_V_CXX)source='net.cpp' object='libheptafranc_server_a-net.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_server_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libheptafranc_server_a-net.o `test -f 'net.cpp' || echo '$(srcdir)/'`net.cpp

libheptafranc_server_a-net.obj: net.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_server_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_server_a_CXXFLAGS) $(CXXFLAGS) -MT libheptafranc_server_a-net.obj -MD -MP -MF $(DEPDIR)/libheptafranc_server_a-net.Tpo -c -o libheptafranc_server_a-net.obj `if test -f 'net.cpp'; then $(CYGPATH_W) 'net.cpp'; else $(CYGPATH_W) '$(srcdir)/net.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libheptafranc_server_a-net.Tpo $(DEPDIR)/libheptafranc_server_a-net.Po
#	$(AM_V_CXX)source='net.cpp' object='libheptafranc_server_a-net.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_server_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libheptafranc_server_a-net.obj `if test -f 'net.cpp'; then $(CYGPATH_W) 'net.cpp'; else $(CYGPATH_W) '$(srcdir)/net.cpp'; fi`

libheptafranc_server_a-net_processing.o: net_processing.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_server_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_server_a_CXXFLAGS) $(CXXFLAGS) -MT libheptafranc_server_a-net_processing.o -MD -MP -MF $(DEPDIR)/libheptafranc_server_a-net_processing.Tpo -c -o libheptafranc_server_a-net_processing.o `test -f 'net_processing.cpp' || echo '$(srcdir)/'`net_processing.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libheptafranc_server_a-net_processing.Tpo $(DEPDIR)/libheptafranc_server_a-net_processing.Po
#	$(AM_V_CXX)source='net_processing.cpp' object='libheptafranc_server_a-net_processing.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_server_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libheptafranc_server_a-net_processing.o `test -f 'net_processing.cpp' || echo '$(srcdir)/'`net_processing.cpp

libheptafranc_server_a-net_processing.obj: net_processing.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_server_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_server_a_CXXFLAGS) $(CXXFLAGS) -MT libheptafranc_server_a-net_processing.obj -MD -MP -MF $(DEPDIR)/libheptafranc_server_a-net_processing.Tpo -c -o libheptafranc_server_a-net_processing.obj `if test -f 'net_processing.cpp'; then $(CYGPATH_W) 'net_processing.cpp'; else $(CYGPATH_W) '$(srcdir)/net_processing.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libheptafranc_server_a-net_processing.Tpo $(DEPDIR)/libheptafranc_server_a-net_processing.Po
#	$(AM_V_CXX)source='net_processing.cpp' object='libheptafranc_server_a-net_processing.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_server_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libheptafranc_server_a-net_processing.obj `if test -f 'net_processing.cpp'; then $(CYGPATH_W) 'net_processing.cpp'; else $(CYGPATH_W) '$(srcdir)/net_processing.cpp'; fi`

libheptafranc_server_a-noui.o: noui.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_server_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_server_a_CXXFLAGS) $(CXXFLAGS) -MT libheptafranc_server_a-noui.o -MD -MP -MF $(DEPDIR)/libheptafranc_server_a-noui.Tpo -c -o libheptafranc_server_a-noui.o `test -f 'noui.cpp' || echo '$(srcdir)/'`noui.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libheptafranc_server_a-noui.Tpo $(DEPDIR)/libheptafranc_server_a-noui.Po
#	$(AM_V_CXX)source='noui.cpp' object='libheptafranc_server_a-noui.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_server_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libheptafranc_server_a-noui.o `test -f 'noui.cpp' || echo '$(srcdir)/'`noui.cpp

libheptafranc_server_a-noui.obj: noui.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_server_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_server_a_CXXFLAGS) $(CXXFLAGS) -MT libheptafranc_server_a-noui.obj -MD -MP -MF $(DEPDIR)/libheptafranc_server_a-noui.Tpo -c -o libheptafranc_server_a-noui.obj `if test -f 'noui.cpp'; then $(CYGPATH_W) 'noui.cpp'; else $(CYGPATH_W) '$(srcdir)/noui.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libheptafranc_server_a-noui.Tpo $(DEPDIR)/libheptafranc_server_a-noui.Po
#	$(AM_V_CXX)source='noui.cpp' object='libheptafranc_server_a-noui.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_server_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libheptafranc_server_a-noui.obj `if test -f 'noui.cpp'; then $(CYGPATH_W) 'noui.cpp'; else $(CYGPATH_W) '$(srcdir)/noui.cpp'; fi`

libheptafranc_server_a-outputtype.o: outputtype.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_server_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_server_a_CXXFLAGS) $(CXXFLAGS) -MT libheptafranc_server_a-outputtype.o -MD -MP -MF $(DEPDIR)/libheptafranc_server_a-outputtype.Tpo -c -o libheptafranc_server_a-outputtype.o `test -f 'outputtype.cpp' || echo '$(srcdir)/'`outputtype.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libheptafranc_server_a-outputtype.Tpo $(DEPDIR)/libheptafranc_server_a-outputtype.Po
#	$(AM_V_CXX)source='outputtype.cpp' object='libheptafranc_server_a-outputtype.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_server_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libheptafranc_server_a-outputtype.o `test -f 'outputtype.cpp' || echo '$(srcdir)/'`outputtype.cpp

libheptafranc_server_a-outputtype.obj: outputtype.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_server_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_server_a_CXXFLAGS) $(CXXFLAGS) -MT libheptafranc_server_a-outputtype.obj -MD -MP -MF $(DEPDIR)/libheptafranc_server_a-outputtype.Tpo -c -o libheptafranc_server_a-outputtype.obj `if test -f 'outputtype.cpp'; then $(CYGPATH_W) 'outputtype.cpp'; else $(CYGPATH_W) '$(srcdir)/outputtype.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libheptafranc_server_a-outputtype.Tpo $(DEPDIR)/libheptafranc_server_a-outputtype.Po
#	$(AM_V_CXX)source='outputtype.cpp' object='libheptafranc_server_a-outputtype.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_server_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libheptafranc_server_a-outputtype.obj `if test -f 'outputtype.cpp'; then $(CYGPATH_W) 'outputtype.cpp'; else $(CYGPATH_W) '$(srcdir)/outputtype.cpp'; fi`

policy/libheptafranc_server_a-fees.o: policy/fees.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_server_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_server_a_CXXFLAGS) $(CXXFLAGS) -MT policy/libheptafranc_server_a-fees.o -MD -MP -MF policy/$(DEPDIR)/libheptafranc_server_a-fees.Tpo -c -o policy/libheptafranc_server_a-fees.o `test -f 'policy/fees.cpp' || echo '$(srcdir)/'`policy/fees.cpp
	$(AM_V_at)$(am__mv) policy/$(DEPDIR)/libheptafranc_server_a-fees.Tpo policy/$(DEPDIR)/libheptafranc_server_a-fees.Po
#	$(AM_V_CXX)source='policy/fees.cpp' object='policy/libheptafranc_server_a-fees.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_server_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_server_a_CXXFLAGS) $(CXXFLAGS) -c -o policy/libheptafranc_server_a-fees.o `test -f 'policy/fees.cpp' || echo '$(srcdir)/'`policy/fees.cpp

policy/libheptafranc_server_a-fees.obj: policy/fees.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_server_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_server_a_CXXFLAGS) $(CXXFLAGS) -MT policy/libheptafranc_server_a-fees.obj -MD -MP -MF policy/$(DEPDIR)/libheptafranc_server_a-fees.Tpo -c -o policy/libheptafranc_server_a-fees.obj `if test -f 'policy/fees.cpp'; then $(CYGPATH_W) 'policy/fees.cpp'; else $(CYGPATH_W) '$(srcdir)/policy/fees.cpp'; fi`
	$(AM_V_at)$(am__mv) policy/$(DEPDIR)/libheptafranc_server_a-fees.Tpo policy/$(DEPDIR)/libheptafranc_server_a-fees.Po
#	$(AM_V_CXX)source='policy/fees.cpp' object='policy/libheptafranc_server_a-fees.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_server_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_server_a_CXXFLAGS) $(CXXFLAGS) -c -o policy/libheptafranc_server_a-fees.obj `if test -f 'policy/fees.cpp'; then $(CYGPATH_W) 'policy/fees.cpp'; else $(CYGPATH_W) '$(srcdir)/policy/fees.cpp'; fi`

policy/libheptafranc_server_a-policy.o: policy/policy.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_server_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_server_a_CXXFLAGS) $(CXXFLAGS) -MT policy/libheptafranc_server_a-policy.o -MD -MP -MF policy/$(DEPDIR)/libheptafranc_server_a-policy.Tpo -c -o policy/libheptafranc_server_a-policy.o `test -f 'policy/policy.cpp' || echo '$(srcdir)/'`policy/policy.cpp
	$(AM_V_at)$(am__mv) policy/$(DEPDIR)/libheptafranc_server_a-policy.Tpo policy/$(DEPDIR)/libheptafranc_server_a-policy.Po
#	$(AM_V_CXX)source='policy/policy.cpp' object='policy/libheptafranc_server_a-policy.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_server_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_server_a_CXXFLAGS) $(CXXFLAGS) -c -o policy/libheptafranc_server_a-policy.o `test -f 'policy/policy.cpp' || echo '$(srcdir)/'`policy/policy.cpp

policy/libheptafranc_server_a-policy.obj: policy/policy.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_server_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_server_a_CXXFLAGS) $(CXXFLAGS) -MT policy/libheptafranc_server_a-policy.obj -MD -MP -MF policy/$(DEPDIR)/libheptafranc_server_a-policy.Tpo -c -o policy/libheptafranc_server_a-policy.obj `if test -f 'policy/policy.cpp'; then $(CYGPATH_W) 'policy/policy.cpp'; else $(CYGPATH_W) '$(srcdir)/policy/policy.cpp'; fi`
	$(AM_V_at)$(am__mv) policy/$(DEPDIR)/libheptafranc_server_a-policy.Tpo policy/$(DEPDIR)/libheptafranc_server_a-policy.Po
#	$(AM_V_CXX)source='policy/policy.cpp' object='policy/libheptafranc_server_a-policy.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_server_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_server_a_CXXFLAGS) $(CXXFLAGS) -c -o policy/libheptafranc_server_a-policy.obj `if test -f 'policy/policy.cpp'; then $(CYGPATH_W) 'policy/policy.cpp'; else $(CYGPATH_W) '$(srcdir)/policy/policy.cpp'; fi`

policy/libheptafranc_server_a-rbf.o: policy/rbf.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_server_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_server_a_CXXFLAGS) $(CXXFLAGS) -MT policy/libheptafranc_server_a-rbf.o -MD -MP -MF policy/$(DEPDIR)/libheptafranc_server_a-rbf.Tpo -c -o policy/libheptafranc_server_a-rbf.o `test -f 'policy/rbf.cpp' || echo '$(srcdir)/'`policy/rbf.cpp
	$(AM_V_at)$(am__mv) policy/$(DEPDIR)/libheptafranc_server_a-rbf.Tpo policy/$(DEPDIR)/libheptafranc_server_a-rbf.Po
#	$(AM_V_CXX)source='policy/rbf.cpp' object='policy/libheptafranc_server_a-rbf.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_server_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_server_a_CXXFLAGS) $(CXXFLAGS) -c -o policy/libheptafranc_server_a-rbf.o `test -f 'policy/rbf.cpp' || echo '$(srcdir)/'`policy/rbf.cpp

policy/libheptafranc_server_a-rbf.obj: policy/rbf.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_server_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_server_a_CXXFLAGS) $(CXXFLAGS) -MT policy/libheptafranc_server_a-rbf.obj -MD -MP -MF policy/$(DEPDIR)/libheptafranc_server_a-rbf.Tpo -c -o policy/libheptafranc_server_a-rbf.obj `if test -f 'policy/rbf.cpp'; then $(CYGPATH_W) 'policy/rbf.cpp'; else $(CYGPATH_W) '$(srcdir)/policy/rbf.cpp'; fi`
	$(AM_V_at)$(am__mv) policy/$(DEPDIR)/libheptafranc_server_a-rbf.Tpo policy/$(DEPDIR)/libheptafranc_server_a-rbf.Po
#	$(AM_V_CXX)source='policy/rbf.cpp' object='policy/libheptafranc_server_a-rbf.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_server_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_server_a_CXXFLAGS) $(CXXFLAGS) -c -o policy/libheptafranc_server_a-rbf.obj `if test -f 'policy/rbf.cpp'; then $(CYGPATH_W) 'policy/rbf.cpp'; else $(CYGPATH_W) '$(srcdir)/policy/rbf.cpp'; fi`

libheptafranc_server_a-pow.o: pow.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_server_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_server_a_CXXFLAGS) $(CXXFLAGS) -MT libheptafranc_server_a-pow.o -MD -MP -MF $(DEPDIR)/libheptafranc_server_a-pow.Tpo -c -o libheptafranc_server_a-pow.o `test -f 'pow.cpp' || echo '$(srcdir)/'`pow.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libheptafranc_server_a-pow.Tpo $(DEPDIR)/libheptafranc_server_a-pow.Po
#	$(AM_V_CXX)source='pow.cpp' object='libheptafranc_server_a-pow.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_server_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libheptafranc_server_a-pow.o `test -f 'pow.cpp' || echo '$(srcdir)/'`pow.cpp

libheptafranc_server_a-pow.obj: pow.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_server_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_server_a_CXXFLAGS) $(CXXFLAGS) -MT libheptafranc_server_a-pow.obj -MD -MP -MF $(DEPDIR)/libheptafranc_server_a-pow.Tpo -c -o libheptafranc_server_a-pow.obj `if test -f 'pow.cpp'; then $(CYGPATH_W) 'pow.cpp'; else $(CYGPATH_W) '$(srcdir)/pow.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libheptafranc_server_a-pow.Tpo $(DEPDIR)/libheptafranc_server_a-pow.Po
#	$(AM_V_CXX)source='pow.cpp' object='libheptafranc_server_a-pow.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_server_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libheptafranc_server_a-pow.obj `if test -f 'pow.cpp'; then $(CYGPATH_W) 'pow.cpp'; else $(CYGPATH_W) '$(srcdir)/pow.cpp'; fi`

libheptafranc_server_a-rest.o: rest.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_server_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_server_a_CXXFLAGS) $(CXXFLAGS) -MT libheptafranc_server_a-rest.o -MD -MP -MF $(DEPDIR)/libheptafranc_server_a-rest.Tpo -c -o libheptafranc_server_a-rest.o `test -f 'rest.cpp' || echo '$(srcdir)/'`rest.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libheptafranc_server_a-rest.Tpo $(DEPDIR)/libheptafranc_server_a-rest.Po
#	$(AM_V_CXX)source='rest.cpp' object='libheptafranc_server_a-rest.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_server_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libheptafranc_server_a-rest.o `test -f 'rest.cpp' || echo '$(srcdir)/'`rest.cpp

libheptafranc_server_a-rest.obj: rest.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_server_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_server_a_CXXFLAGS) $(CXXFLAGS) -MT libheptafranc_server_a-rest.obj -MD -MP -MF $(DEPDIR)/libheptafranc_server_a-rest.Tpo -c -o libheptafranc_server_a-rest.obj `if test -f 'rest.cpp'; then $(CYGPATH_W) 'rest.cpp'; else $(CYGPATH_W) '$(srcdir)/rest.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libheptafranc_server_a-rest.Tpo $(DEPDIR)/libheptafranc_server_a-rest.Po
#	$(AM_V_CXX)source='rest.cpp' object='libheptafranc_server_a-rest.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_server_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libheptafranc_server_a-rest.obj `if test -f 'rest.cpp'; then $(CYGPATH_W) 'rest.cpp'; else $(CYGPATH_W) '$(srcdir)/rest.cpp'; fi`

rpc/libheptafranc_server_a-blockchain.o: rpc/blockchain.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_server_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_server_a_CXXFLAGS) $(CXXFLAGS) -MT rpc/libheptafranc_server_a-blockchain.o -MD -MP -MF rpc/$(DEPDIR)/libheptafranc_server_a-blockchain.Tpo -c -o rpc/libheptafranc_server_a-blockchain.o `test -f 'rpc/blockchain.cpp' || echo '$(srcdir)/'`rpc/blockchain.cpp
	$(AM_V_at)$(am__mv) rpc/$(DEPDIR)/libheptafranc_server_a-blockchain.Tpo rpc/$(DEPDIR)/libheptafranc_server_a-blockchain.Po
#	$(AM_V_CXX)source='rpc/blockchain.cpp' object='rpc/libheptafranc_server_a-blockchain.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_server_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_server_a_CXXFLAGS) $(CXXFLAGS) -c -o rpc/libheptafranc_server_a-blockchain.o `test -f 'rpc/blockchain.cpp' || echo '$(srcdir)/'`rpc/blockchain.cpp

rpc/libheptafranc_server_a-blockchain.obj: rpc/blockchain.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_server_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_server_a_CXXFLAGS) $(CXXFLAGS) -MT rpc/libheptafranc_server_a-blockchain.obj -MD -MP -MF rpc/$(DEPDIR)/libheptafranc_server_a-blockchain.Tpo -c -o rpc/libheptafranc_server_a-blockchain.obj `if test -f 'rpc/blockchain.cpp'; then $(CYGPATH_W) 'rpc/blockchain.cpp'; else $(CYGPATH_W) '$(srcdir)/rpc/blockchain.cpp'; fi`
	$(AM_V_at)$(am__mv) rpc/$(DEPDIR)/libheptafranc_server_a-blockchain.Tpo rpc/$(DEPDIR)/libheptafranc_server_a-blockchain.Po
#	$(AM_V_CXX)source='rpc/blockchain.cpp' object='rpc/libheptafranc_server_a-blockchain.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_server_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_server_a_CXXFLAGS) $(CXXFLAGS) -c -o rpc/libheptafranc_server_a-blockchain.obj `if test -f 'rpc/blockchain.cpp'; then $(CYGPATH_W) 'rpc/blockchain.cpp'; else $(CYGPATH_W) '$(srcdir)/rpc/blockchain.cpp'; fi`

rpc/libheptafranc_server_a-mining.o: rpc/mining.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_server_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_server_a_CXXFLAGS) $(CXXFLAGS) -MT rpc/libheptafranc_server_a-mining.o -MD -MP -MF rpc/$(DEPDIR)/libheptafranc_server_a-mining.Tpo -c -o rpc/libheptafranc_server_a-mining.o `test -f 'rpc/mining.cpp' || echo '$(srcdir)/'`rpc/mining.cpp
	$(AM_V_at)$(am__mv) rpc/$(DEPDIR)/libheptafranc_server_a-mining.Tpo rpc/$(DEPDIR)/libheptafranc_server_a-mining.Po
#	$(AM_V_CXX)source='rpc/mining.cpp' object='rpc/libheptafranc_server_a-mining.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_server_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_server_a_CXXFLAGS) $(CXXFLAGS) -c -o rpc/libheptafranc_server_a-mining.o `test -f 'rpc/mining.cpp' || echo '$(srcdir)/'`rpc/mining.cpp

rpc/libheptafranc_server_a-mining.obj: rpc/mining.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_server_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_server_a_CXXFLAGS) $(CXXFLAGS) -MT rpc/libheptafranc_server_a-mining.obj -MD -MP -MF rpc/$(DEPDIR)/libheptafranc_server_a-mining.Tpo -c -o rpc/libheptafranc_server_a-mining.obj `if test -f 'rpc/mining.cpp'; then $(CYGPATH_W) 'rpc/mining.cpp'; else $(CYGPATH_W) '$(srcdir)/rpc/mining.cpp'; fi`
	$(AM_V_at)$(am__mv) rpc/$(DEPDIR)/libheptafranc_server_a-mining.Tpo rpc/$(DEPDIR)/libheptafranc_server_a-mining.Po
#	$(AM_V_CXX)source='rpc/mining.cpp' object='rpc/libheptafranc_server_a-mining.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_server_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_server_a_CXXFLAGS) $(CXXFLAGS) -c -o rpc/libheptafranc_server_a-mining.obj `if test -f 'rpc/mining.cpp'; then $(CYGPATH_W) 'rpc/mining.cpp'; else $(CYGPATH_W) '$(srcdir)/rpc/mining.cpp'; fi`

rpc/libheptafranc_server_a-misc.o: rpc/misc.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_server_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_server_a_CXXFLAGS) $(CXXFLAGS) -MT rpc/libheptafranc_server_a-misc.o -MD -MP -MF rpc/$(DEPDIR)/libheptafranc_server_a-misc.Tpo -c -o rpc/libheptafranc_server_a-misc.o `test -f 'rpc/misc.cpp' || echo '$(srcdir)/'`rpc/misc.cpp
	$(AM_V_at)$(am__mv) rpc/$(DEPDIR)/libheptafranc_server_a-misc.Tpo rpc/$(DEPDIR)/libheptafranc_server_a-misc.Po
#	$(AM_V_CXX)source='rpc/misc.cpp' object='rpc/libheptafranc_server_a-misc.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_server_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_server_a_CXXFLAGS) $(CXXFLAGS) -c -o rpc/libheptafranc_server_a-misc.o `test -f 'rpc/misc.cpp' || echo '$(srcdir)/'`rpc/misc.cpp

rpc/libheptafranc_server_a-misc.obj: rpc/misc.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_server_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_server_a_CXXFLAGS) $(CXXFLAGS) -MT rpc/libheptafranc_server_a-misc.obj -MD -MP -MF rpc/$(DEPDIR)/libheptafranc_server_a-misc.Tpo -c -o rpc/libheptafranc_server_a-misc.obj `if test -f 'rpc/misc.cpp'; then $(CYGPATH_W) 'rpc/misc.cpp'; else $(CYGPATH_W) '$(srcdir)/rpc/misc.cpp'; fi`
	$(AM_V_at)$(am__mv) rpc/$(DEPDIR)/libheptafranc_server_a-misc.Tpo rpc/$(DEPDIR)/libheptafranc_server_a-misc.Po
#	$(AM_V_CXX)source='rpc/misc.cpp' object='rpc/libheptafranc_server_a-misc.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_server_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_server_a_CXXFLAGS) $(CXXFLAGS) -c -o rpc/libheptafranc_server_a-misc.obj `if test -f 'rpc/misc.cpp'; then $(CYGPATH_W) 'rpc/misc.cpp'; else $(CYGPATH_W) '$(srcdir)/rpc/misc.cpp'; fi`

rpc/libheptafranc_server_a-net.o: rpc/net.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_server_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_server_a_CXXFLAGS) $(CXXFLAGS) -MT rpc/libheptafranc_server_a-net.o -MD -MP -MF rpc/$(DEPDIR)/libheptafranc_server_a-net.Tpo -c -o rpc/libheptafranc_server_a-net.o `test -f 'rpc/net.cpp' || echo '$(srcdir)/'`rpc/net.cpp
	$(AM_V_at)$(am__mv) rpc/$(DEPDIR)/libheptafranc_server_a-net.Tpo rpc/$(DEPDIR)/libheptafranc_server_a-net.Po
#	$(AM_V_CXX)source='rpc/net.cpp' object='rpc/libheptafranc_server_a-net.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_server_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_server_a_CXXFLAGS) $(CXXFLAGS) -c -o rpc/libheptafranc_server_a-net.o `test -f 'rpc/net.cpp' || echo '$(srcdir)/'`rpc/net.cpp

rpc/libheptafranc_server_a-net.obj: rpc/net.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_server_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_server_a_CXXFLAGS) $(CXXFLAGS) -MT rpc/libheptafranc_server_a-net.obj -MD -MP -MF rpc/$(DEPDIR)/libheptafranc_server_a-net.Tpo -c -o rpc/libheptafranc_server_a-net.obj `if test -f 'rpc/net.cpp'; then $(CYGPATH_W) 'rpc/net.cpp'; else $(CYGPATH_W) '$(srcdir)/rpc/net.cpp'; fi`
	$(AM_V_at)$(am__mv) rpc/$(DEPDIR)/libheptafranc_server_a-net.Tpo rpc/$(DEPDIR)/libheptafranc_server_a-net.Po
#	$(AM_V_CXX)source='rpc/net.cpp' object='rpc/libheptafranc_server_a-net.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_server_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_server_a_CXXFLAGS) $(CXXFLAGS) -c -o rpc/libheptafranc_server_a-net.obj `if test -f 'rpc/net.cpp'; then $(CYGPATH_W) 'rpc/net.cpp'; else $(CYGPATH_W) '$(srcdir)/rpc/net.cpp'; fi`

rpc/libheptafranc_server_a-rawtransaction.o: rpc/rawtransaction.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_server_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_server_a_CXXFLAGS) $(CXXFLAGS) -MT rpc/libheptafranc_server_a-rawtransaction.o -MD -MP -MF rpc/$(DEPDIR)/libheptafranc_server_a-rawtransaction.Tpo -c -o rpc/libheptafranc_server_a-rawtransaction.o `test -f 'rpc/rawtransaction.cpp' || echo '$(srcdir)/'`rpc/rawtransaction.cpp
	$(AM_V_at)$(am__mv) rpc/$(DEPDIR)/libheptafranc_server_a-rawtransaction.Tpo rpc/$(DEPDIR)/libheptafranc_server_a-rawtransaction.Po
#	$(AM_V_CXX)source='rpc/rawtransaction.cpp' object='rpc/libheptafranc_server_a-rawtransaction.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_server_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_server_a_CXXFLAGS) $(CXXFLAGS) -c -o rpc/libheptafranc_server_a-rawtransaction.o `test -f 'rpc/rawtransaction.cpp' || echo '$(srcdir)/'`rpc/rawtransaction.cpp

rpc/libheptafranc_server_a-rawtransaction.obj: rpc/rawtransaction.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_server_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_server_a_CXXFLAGS) $(CXXFLAGS) -MT rpc/libheptafranc_server_a-rawtransaction.obj -MD -MP -MF rpc/$(DEPDIR)/libheptafranc_server_a-rawtransaction.Tpo -c -o rpc/libheptafranc_server_a-rawtransaction.obj `if test -f 'rpc/rawtransaction.cpp'; then $(CYGPATH_W) 'rpc/rawtransaction.cpp'; else $(CYGPATH_W) '$(srcdir)/rpc/rawtransaction.cpp'; fi`
	$(AM_V_at)$(am__mv) rpc/$(DEPDIR)/libheptafranc_server_a-rawtransaction.Tpo rpc/$(DEPDIR)/libheptafranc_server_a-rawtransaction.Po
#	$(AM_V_CXX)source='rpc/rawtransaction.cpp' object='rpc/libheptafranc_server_a-rawtransaction.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_server_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_server_a_CXXFLAGS) $(CXXFLAGS) -c -o rpc/libheptafranc_server_a-rawtransaction.obj `if test -f 'rpc/rawtransaction.cpp'; then $(CYGPATH_W) 'rpc/rawtransaction.cpp'; else $(CYGPATH_W) '$(srcdir)/rpc/rawtransaction.cpp'; fi`

rpc/libheptafranc_server_a-server.o: rpc/server.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_server_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_server_a_CXXFLAGS) $(CXXFLAGS) -MT rpc/libheptafranc_server_a-server.o -MD -MP -MF rpc/$(DEPDIR)/libheptafranc_server_a-server.Tpo -c -o rpc/libheptafranc_server_a-server.o `test -f 'rpc/server.cpp' || echo '$(srcdir)/'`rpc/server.cpp
	$(AM_V_at)$(am__mv) rpc/$(DEPDIR)/libheptafranc_server_a-server.Tpo rpc/$(DEPDIR)/libheptafranc_server_a-server.Po
#	$(AM_V_CXX)source='rpc/server.cpp' object='rpc/libheptafranc_server_a-server.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_server_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_server_a_CXXFLAGS) $(CXXFLAGS) -c -o rpc/libheptafranc_server_a-server.o `test -f 'rpc/server.cpp' || echo '$(srcdir)/'`rpc/server.cpp

rpc/libheptafranc_server_a-server.obj: rpc/server.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_server_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_server_a_CXXFLAGS) $(CXXFLAGS) -MT rpc/libheptafranc_server_a-server.obj -MD -MP -MF rpc/$(DEPDIR)/libheptafranc_server_a-server.Tpo -c -o rpc/libheptafranc_server_a-server.obj `if test -f 'rpc/server.cpp'; then $(CYGPATH_W) 'rpc/server.cpp'; else $(CYGPATH_W) '$(srcdir)/rpc/server.cpp'; fi`
	$(AM_V_at)$(am__mv) rpc/$(DEPDIR)/libheptafranc_server_a-server.Tpo rpc/$(DEPDIR)/libheptafranc_server_a-server.Po
#	$(AM_V_CXX)source='rpc/server.cpp' object='rpc/libheptafranc_server_a-server.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_server_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_server_a_CXXFLAGS) $(CXXFLAGS) -c -o rpc/libheptafranc_server_a-server.obj `if test -f 'rpc/server.cpp'; then $(CYGPATH_W) 'rpc/server.cpp'; else $(CYGPATH_W) '$(srcdir)/rpc/server.cpp'; fi`

rpc/libheptafranc_server_a-util.o: rpc/util.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_server_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_server_a_CXXFLAGS) $(CXXFLAGS) -MT rpc/libheptafranc_server_a-util.o -MD -MP -MF rpc/$(DEPDIR)/libheptafranc_server_a-util.Tpo -c -o rpc/libheptafranc_server_a-util.o `test -f 'rpc/util.cpp' || echo '$(srcdir)/'`rpc/util.cpp
	$(AM_V_at)$(am__mv) rpc/$(DEPDIR)/libheptafranc_server_a-util.Tpo rpc/$(DEPDIR)/libheptafranc_server_a-util.Po
#	$(AM_V_CXX)source='rpc/util.cpp' object='rpc/libheptafranc_server_a-util.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_server_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_server_a_CXXFLAGS) $(CXXFLAGS) -c -o rpc/libheptafranc_server_a-util.o `test -f 'rpc/util.cpp' || echo '$(srcdir)/'`rpc/util.cpp

rpc/libheptafranc_server_a-util.obj: rpc/util.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_server_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_server_a_CXXFLAGS) $(CXXFLAGS) -MT rpc/libheptafranc_server_a-util.obj -MD -MP -MF rpc/$(DEPDIR)/libheptafranc_server_a-util.Tpo -c -o rpc/libheptafranc_server_a-util.obj `if test -f 'rpc/util.cpp'; then $(CYGPATH_W) 'rpc/util.cpp'; else $(CYGPATH_W) '$(srcdir)/rpc/util.cpp'; fi`
	$(AM_V_at)$(am__mv) rpc/$(DEPDIR)/libheptafranc_server_a-util.Tpo rpc/$(DEPDIR)/libheptafranc_server_a-util.Po
#	$(AM_V_CXX)source='rpc/util.cpp' object='rpc/libheptafranc_server_a-util.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_server_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_server_a_CXXFLAGS) $(CXXFLAGS) -c -o rpc/libheptafranc_server_a-util.obj `if test -f 'rpc/util.cpp'; then $(CYGPATH_W) 'rpc/util.cpp'; else $(CYGPATH_W) '$(srcdir)/rpc/util.cpp'; fi`

script/libheptafranc_server_a-sigcache.o: script/sigcache.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_server_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_server_a_CXXFLAGS) $(CXXFLAGS) -MT script/libheptafranc_server_a-sigcache.o -MD -MP -MF script/$(DEPDIR)/libheptafranc_server_a-sigcache.Tpo -c -o script/libheptafranc_server_a-sigcache.o `test -f 'script/sigcache.cpp' || echo '$(srcdir)/'`script/sigcache.cpp
	$(AM_V_at)$(am__mv) script/$(DEPDIR)/libheptafranc_server_a-sigcache.Tpo script/$(DEPDIR)/libheptafranc_server_a-sigcache.Po
#	$(AM_V_CXX)source='script/sigcache.cpp' object='script/libheptafranc_server_a-sigcache.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_server_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_server_a_CXXFLAGS) $(CXXFLAGS) -c -o script/libheptafranc_server_a-sigcache.o `test -f 'script/sigcache.cpp' || echo '$(srcdir)/'`script/sigcache.cpp

script/libheptafranc_server_a-sigcache.obj: script/sigcache.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_server_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_server_a_CXXFLAGS) $(CXXFLAGS) -MT script/libheptafranc_server_a-sigcache.obj -MD -MP -MF script/$(DEPDIR)/libheptafranc_server_a-sigcache.Tpo -c -o script/libheptafranc_server_a-sigcache.obj `if test -f 'script/sigcache.cpp'; then $(CYGPATH_W) 'script/sigcache.cpp'; else $(CYGPATH_W) '$(srcdir)/script/sigcache.cpp'; fi`
	$(AM_V_at)$(am__mv) script/$(DEPDIR)/libheptafranc_server_a-sigcache.Tpo script/$(DEPDIR)/libheptafranc_server_a-sigcache.Po
#	$(AM_V_CXX)source='script/sigcache.cpp' object='script/libheptafranc_server_a-sigcache.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_server_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_server_a_CXXFLAGS) $(CXXFLAGS) -c -o script/libheptafranc_server_a-sigcache.obj `if test -f 'script/sigcache.cpp'; then $(CYGPATH_W) 'script/sigcache.cpp'; else $(CYGPATH_W) '$(srcdir)/script/sigcache.cpp'; fi`

libheptafranc_server_a-shutdown.o: shutdown.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_server_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_server_a_CXXFLAGS) $(CXXFLAGS) -MT libheptafranc_server_a-shutdown.o -MD -MP -MF $(DEPDIR)/libheptafranc_server_a-shutdown.Tpo -c -o libheptafranc_server_a-shutdown.o `test -f 'shutdown.cpp' || echo '$(srcdir)/'`shutdown.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libheptafranc_server_a-shutdown.Tpo $(DEPDIR)/libheptafranc_server_a-shutdown.Po
#	$(AM_V_CXX)source='shutdown.cpp' object='libheptafranc_server_a-shutdown.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_server_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libheptafranc_server_a-shutdown.o `test -f 'shutdown.cpp' || echo '$(srcdir)/'`shutdown.cpp

libheptafranc_server_a-shutdown.obj: shutdown.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_server_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_server_a_CXXFLAGS) $(CXXFLAGS) -MT libheptafranc_server_a-shutdown.obj -MD -MP -MF $(DEPDIR)/libheptafranc_server_a-shutdown.Tpo -c -o libheptafranc_server_a-shutdown.obj `if test -f 'shutdown.cpp'; then $(CYGPATH_W) 'shutdown.cpp'; else $(CYGPATH_W) '$(srcdir)/shutdown.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libheptafranc_server_a-shutdown.Tpo $(DEPDIR)/libheptafranc_server_a-shutdown.Po
#	$(AM_V_CXX)source='shutdown.cpp' object='libheptafranc_server_a-shutdown.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_server_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libheptafranc_server_a-shutdown.obj `if test -f 'shutdown.cpp'; then $(CYGPATH_W) 'shutdown.cpp'; else $(CYGPATH_W) '$(srcdir)/shutdown.cpp'; fi`

libheptafranc_server_a-timedata.o: timedata.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_server_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_server_a_CXXFLAGS) $(CXXFLAGS) -MT libheptafranc_server_a-timedata.o -MD -MP -MF $(DEPDIR)/libheptafranc_server_a-timedata.Tpo -c -o libheptafranc_server_a-timedata.o `test -f 'timedata.cpp' || echo '$(srcdir)/'`timedata.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libheptafranc_server_a-timedata.Tpo $(DEPDIR)/libheptafranc_server_a-timedata.Po
#	$(AM_V_CXX)source='timedata.cpp' object='libheptafranc_server_a-timedata.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_server_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libheptafranc_server_a-timedata.o `test -f 'timedata.cpp' || echo '$(srcdir)/'`timedata.cpp

libheptafranc_server_a-timedata.obj: timedata.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_server_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_server_a_CXXFLAGS) $(CXXFLAGS) -MT libheptafranc_server_a-timedata.obj -MD -MP -MF $(DEPDIR)/libheptafranc_server_a-timedata.Tpo -c -o libheptafranc_server_a-timedata.obj `if test -f 'timedata.cpp'; then $(CYGPATH_W) 'timedata.cpp'; else $(CYGPATH_W) '$(srcdir)/timedata.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libheptafranc_server_a-timedata.Tpo $(DEPDIR)/libheptafranc_server_a-timedata.Po
#	$(AM_V_CXX)source='timedata.cpp' object='libheptafranc_server_a-timedata.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_server_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libheptafranc_server_a-timedata.obj `if test -f 'timedata.cpp'; then $(CYGPATH_W) 'timedata.cpp'; else $(CYGPATH_W) '$(srcdir)/timedata.cpp'; fi`

libheptafranc_server_a-torcontrol.o: torcontrol.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_server_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_server_a_CXXFLAGS) $(CXXFLAGS) -MT libheptafranc_server_a-torcontrol.o -MD -MP -MF $(DEPDIR)/libheptafranc_server_a-torcontrol.Tpo -c -o libheptafranc_server_a-torcontrol.o `test -f 'torcontrol.cpp' || echo '$(srcdir)/'`torcontrol.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libheptafranc_server_a-torcontrol.Tpo $(DEPDIR)/libheptafranc_server_a-torcontrol.Po
#	$(AM_V_CXX)source='torcontrol.cpp' object='libheptafranc_server_a-torcontrol.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_server_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libheptafranc_server_a-torcontrol.o `test -f 'torcontrol.cpp' || echo '$(srcdir)/'`torcontrol.cpp

libheptafranc_server_a-torcontrol.obj: torcontrol.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_server_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_server_a_CXXFLAGS) $(CXXFLAGS) -MT libheptafranc_server_a-torcontrol.obj -MD -MP -MF $(DEPDIR)/libheptafranc_server_a-torcontrol.Tpo -c -o libheptafranc_server_a-torcontrol.obj `if test -f 'torcontrol.cpp'; then $(CYGPATH_W) 'torcontrol.cpp'; else $(CYGPATH_W) '$(srcdir)/torcontrol.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libheptafranc_server_a-torcontrol.Tpo $(DEPDIR)/libheptafranc_server_a-torcontrol.Po
#	$(AM_V_CXX)source='torcontrol.cpp' object='libheptafranc_server_a-torcontrol.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_server_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libheptafranc_server_a-torcontrol.obj `if test -f 'torcontrol.cpp'; then $(CYGPATH_W) 'torcontrol.cpp'; else $(CYGPATH_W) '$(srcdir)/torcontrol.cpp'; fi`

libheptafranc_server_a-txdb.o: txdb.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_server_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_server_a_CXXFLAGS) $(CXXFLAGS) -MT libheptafranc_server_a-txdb.o -MD -MP -MF $(DEPDIR)/libheptafranc_server_a-txdb.Tpo -c -o libheptafranc_server_a-txdb.o `test -f 'txdb.cpp' || echo '$(srcdir)/'`txdb.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libheptafranc_server_a-txdb.Tpo $(DEPDIR)/libheptafranc_server_a-txdb.Po
#	$(AM_V_CXX)source='txdb.cpp' object='libheptafranc_server_a-txdb.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_server_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libheptafranc_server_a-txdb.o `test -f 'txdb.cpp' || echo '$(srcdir)/'`txdb.cpp

libheptafranc_server_a-txdb.obj: txdb.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_server_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_server_a_CXXFLAGS) $(CXXFLAGS) -MT libheptafranc_server_a-txdb.obj -MD -MP -MF $(DEPDIR)/libheptafranc_server_a-txdb.Tpo -c -o libheptafranc_server_a-txdb.obj `if test -f 'txdb.cpp'; then $(CYGPATH_W) 'txdb.cpp'; else $(CYGPATH_W) '$(srcdir)/txdb.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libheptafranc_server_a-txdb.Tpo $(DEPDIR)/libheptafranc_server_a-txdb.Po
#	$(AM_V_CXX)source='txdb.cpp' object='libheptafranc_server_a-txdb.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_server_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libheptafranc_server_a-txdb.obj `if test -f 'txdb.cpp'; then $(CYGPATH_W) 'txdb.cpp'; else $(CYGPATH_W) '$(srcdir)/txdb.cpp'; fi`

libheptafranc_server_a-txmempool.o: txmempool.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_server_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_server_a_CXXFLAGS) $(CXXFLAGS) -MT libheptafranc_server_a-txmempool.o -MD -MP -MF $(DEPDIR)/libheptafranc_server_a-txmempool.Tpo -c -o libheptafranc_server_a-txmempool.o `test -f 'txmempool.cpp' || echo '$(srcdir)/'`txmempool.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libheptafranc_server_a-txmempool.Tpo $(DEPDIR)/libheptafranc_server_a-txmempool.Po
#	$(AM_V_CXX)source='txmempool.cpp' object='libheptafranc_server_a-txmempool.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_server_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libheptafranc_server_a-txmempool.o `test -f 'txmempool.cpp' || echo '$(srcdir)/'`txmempool.cpp

libheptafranc_server_a-txmempool.obj: txmempool.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_server_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_server_a_CXXFLAGS) $(CXXFLAGS) -MT libheptafranc_server_a-txmempool.obj -MD -MP -MF $(DEPDIR)/libheptafranc_server_a-txmempool.Tpo -c -o libheptafranc_server_a-txmempool.obj `if test -f 'txmempool.cpp'; then $(CYGPATH_W) 'txmempool.cpp'; else $(CYGPATH_W) '$(srcdir)/txmempool.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libheptafranc_server_a-txmempool.Tpo $(DEPDIR)/libheptafranc_server_a-txmempool.Po
#	$(AM_V_CXX)source='txmempool.cpp' object='libheptafranc_server_a-txmempool.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_server_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libheptafranc_server_a-txmempool.obj `if test -f 'txmempool.cpp'; then $(CYGPATH_W) 'txmempool.cpp'; else $(CYGPATH_W) '$(srcdir)/txmempool.cpp'; fi`

libheptafranc_server_a-ui_interface.o: ui_interface.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_server_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_server_a_CXXFLAGS) $(CXXFLAGS) -MT libheptafranc_server_a-ui_interface.o -MD -MP -MF $(DEPDIR)/libheptafranc_server_a-ui_interface.Tpo -c -o libheptafranc_server_a-ui_interface.o `test -f 'ui_interface.cpp' || echo '$(srcdir)/'`ui_interface.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libheptafranc_server_a-ui_interface.Tpo $(DEPDIR)/libheptafranc_server_a-ui_interface.Po
#	$(AM_V_CXX)source='ui_interface.cpp' object='libheptafranc_server_a-ui_interface.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_server_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libheptafranc_server_a-ui_interface.o `test -f 'ui_interface.cpp' || echo '$(srcdir)/'`ui_interface.cpp

libheptafranc_server_a-ui_interface.obj: ui_interface.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_server_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_server_a_CXXFLAGS) $(CXXFLAGS) -MT libheptafranc_server_a-ui_interface.obj -MD -MP -MF $(DEPDIR)/libheptafranc_server_a-ui_interface.Tpo -c -o libheptafranc_server_a-ui_interface.obj `if test -f 'ui_interface.cpp'; then $(CYGPATH_W) 'ui_interface.cpp'; else $(CYGPATH_W) '$(srcdir)/ui_interface.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libheptafranc_server_a-ui_interface.Tpo $(DEPDIR)/libheptafranc_server_a-ui_interface.Po
#	$(AM_V_CXX)source='ui_interface.cpp' object='libheptafranc_server_a-ui_interface.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_server_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libheptafranc_server_a-ui_interface.obj `if test -f 'ui_interface.cpp'; then $(CYGPATH_W) 'ui_interface.cpp'; else $(CYGPATH_W) '$(srcdir)/ui_interface.cpp'; fi`

libheptafranc_server_a-validation.o: validation.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_server_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_server_a_CXXFLAGS) $(CXXFLAGS) -MT libheptafranc_server_a-validation.o -MD -MP -MF $(DEPDIR)/libheptafranc_server_a-validation.Tpo -c -o libheptafranc_server_a-validation.o `test -f 'validation.cpp' || echo '$(srcdir)/'`validation.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libheptafranc_server_a-validation.Tpo $(DEPDIR)/libheptafranc_server_a-validation.Po
#	$(AM_V_CXX)source='validation.cpp' object='libheptafranc_server_a-validation.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_server_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libheptafranc_server_a-validation.o `test -f 'validation.cpp' || echo '$(srcdir)/'`validation.cpp

libheptafranc_server_a-validation.obj: validation.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_server_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_server_a_CXXFLAGS) $(CXXFLAGS) -MT libheptafranc_server_a-validation.obj -MD -MP -MF $(DEPDIR)/libheptafranc_server_a-validation.Tpo -c -o libheptafranc_server_a-validation.obj `if test -f 'validation.cpp'; then $(CYGPATH_W) 'validation.cpp'; else $(CYGPATH_W) '$(srcdir)/validation.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libheptafranc_server_a-validation.Tpo $(DEPDIR)/libheptafranc_server_a-validation.Po
#	$(AM_V_CXX)source='validation.cpp' object='libheptafranc_server_a-validation.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_server_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libheptafranc_server_a-validation.obj `if test -f 'validation.cpp'; then $(CYGPATH_W) 'validation.cpp'; else $(CYGPATH_W) '$(srcdir)/validation.cpp'; fi`

libheptafranc_server_a-validationinterface.o: validationinterface.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_server_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_server_a_CXXFLAGS) $(CXXFLAGS) -MT libheptafranc_server_a-validationinterface.o -MD -MP -MF $(DEPDIR)/libheptafranc_server_a-validationinterface.Tpo -c -o libheptafranc_server_a-validationinterface.o `test -f 'validationinterface.cpp' || echo '$(srcdir)/'`validationinterface.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libheptafranc_server_a-validationinterface.Tpo $(DEPDIR)/libheptafranc_server_a-validationinterface.Po
#	$(AM_V_CXX)source='validationinterface.cpp' object='libheptafranc_server_a-validationinterface.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_server_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libheptafranc_server_a-validationinterface.o `test -f 'validationinterface.cpp' || echo '$(srcdir)/'`validationinterface.cpp

libheptafranc_server_a-validationinterface.obj: validationinterface.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_server_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_server_a_CXXFLAGS) $(CXXFLAGS) -MT libheptafranc_server_a-validationinterface.obj -MD -MP -MF $(DEPDIR)/libheptafranc_server_a-validationinterface.Tpo -c -o libheptafranc_server_a-validationinterface.obj `if test -f 'validationinterface.cpp'; then $(CYGPATH_W) 'validationinterface.cpp'; else $(CYGPATH_W) '$(srcdir)/validationinterface.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libheptafranc_server_a-validationinterface.Tpo $(DEPDIR)/libheptafranc_server_a-validationinterface.Po
#	$(AM_V_CXX)source='validationinterface.cpp' object='libheptafranc_server_a-validationinterface.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_server_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libheptafranc_server_a-validationinterface.obj `if test -f 'validationinterface.cpp'; then $(CYGPATH_W) 'validationinterface.cpp'; else $(CYGPATH_W) '$(srcdir)/validationinterface.cpp'; fi`

libheptafranc_server_a-versionbits.o: versionbits.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_server_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_server_a_CXXFLAGS) $(CXXFLAGS) -MT libheptafranc_server_a-versionbits.o -MD -MP -MF $(DEPDIR)/libheptafranc_server_a-versionbits.Tpo -c -o libheptafranc_server_a-versionbits.o `test -f 'versionbits.cpp' || echo '$(srcdir)/'`versionbits.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libheptafranc_server_a-versionbits.Tpo $(DEPDIR)/libheptafranc_server_a-versionbits.Po
#	$(AM_V_CXX)source='versionbits.cpp' object='libheptafranc_server_a-versionbits.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_server_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libheptafranc_server_a-versionbits.o `test -f 'versionbits.cpp' || echo '$(srcdir)/'`versionbits.cpp

libheptafranc_server_a-versionbits.obj: versionbits.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_server_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_server_a_CXXFLAGS) $(CXXFLAGS) -MT libheptafranc_server_a-versionbits.obj -MD -MP -MF $(DEPDIR)/libheptafranc_server_a-versionbits.Tpo -c -o libheptafranc_server_a-versionbits.obj `if test -f 'versionbits.cpp'; then $(CYGPATH_W) 'versionbits.cpp'; else $(CYGPATH_W) '$(srcdir)/versionbits.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libheptafranc_server_a-versionbits.Tpo $(DEPDIR)/libheptafranc_server_a-versionbits.Po
#	$(AM_V_CXX)source='versionbits.cpp' object='libheptafranc_server_a-versionbits.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_server_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libheptafranc_server_a-versionbits.obj `if test -f 'versionbits.cpp'; then $(CYGPATH_W) 'versionbits.cpp'; else $(CYGPATH_W) '$(srcdir)/versionbits.cpp'; fi`

support/libheptafranc_util_a-lockedpool.o: support/lockedpool.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_util_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_util_a_CXXFLAGS) $(CXXFLAGS) -MT support/libheptafranc_util_a-lockedpool.o -MD -MP -MF support/$(DEPDIR)/libheptafranc_util_a-lockedpool.Tpo -c -o support/libheptafranc_util_a-lockedpool.o `test -f 'support/lockedpool.cpp' || echo '$(srcdir)/'`support/lockedpool.cpp
	$(AM_V_at)$(am__mv) support/$(DEPDIR)/libheptafranc_util_a-lockedpool.Tpo support/$(DEPDIR)/libheptafranc_util_a-lockedpool.Po
#	$(AM_V_CXX)source='support/lockedpool.cpp' object='support/libheptafranc_util_a-lockedpool.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_util_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_util_a_CXXFLAGS) $(CXXFLAGS) -c -o support/libheptafranc_util_a-lockedpool.o `test -f 'support/lockedpool.cpp' || echo '$(srcdir)/'`support/lockedpool.cpp

support/libheptafranc_util_a-lockedpool.obj: support/lockedpool.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_util_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_util_a_CXXFLAGS) $(CXXFLAGS) -MT support/libheptafranc_util_a-lockedpool.obj -MD -MP -MF support/$(DEPDIR)/libheptafranc_util_a-lockedpool.Tpo -c -o support/libheptafranc_util_a-lockedpool.obj `if test -f 'support/lockedpool.cpp'; then $(CYGPATH_W) 'support/lockedpool.cpp'; else $(CYGPATH_W) '$(srcdir)/support/lockedpool.cpp'; fi`
	$(AM_V_at)$(am__mv) support/$(DEPDIR)/libheptafranc_util_a-lockedpool.Tpo support/$(DEPDIR)/libheptafranc_util_a-lockedpool.Po
#	$(AM_V_CXX)source='support/lockedpool.cpp' object='support/libheptafranc_util_a-lockedpool.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_util_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_util_a_CXXFLAGS) $(CXXFLAGS) -c -o support/libheptafranc_util_a-lockedpool.obj `if test -f 'support/lockedpool.cpp'; then $(CYGPATH_W) 'support/lockedpool.cpp'; else $(CYGPATH_W) '$(srcdir)/support/lockedpool.cpp'; fi`

libheptafranc_util_a-chainparamsbase.o: chainparamsbase.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_util_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_util_a_CXXFLAGS) $(CXXFLAGS) -MT libheptafranc_util_a-chainparamsbase.o -MD -MP -MF $(DEPDIR)/libheptafranc_util_a-chainparamsbase.Tpo -c -o libheptafranc_util_a-chainparamsbase.o `test -f 'chainparamsbase.cpp' || echo '$(srcdir)/'`chainparamsbase.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libheptafranc_util_a-chainparamsbase.Tpo $(DEPDIR)/libheptafranc_util_a-chainparamsbase.Po
#	$(AM_V_CXX)source='chainparamsbase.cpp' object='libheptafranc_util_a-chainparamsbase.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_util_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_util_a_CXXFLAGS) $(CXXFLAGS) -c -o libheptafranc_util_a-chainparamsbase.o `test -f 'chainparamsbase.cpp' || echo '$(srcdir)/'`chainparamsbase.cpp

libheptafranc_util_a-chainparamsbase.obj: chainparamsbase.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_util_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_util_a_CXXFLAGS) $(CXXFLAGS) -MT libheptafranc_util_a-chainparamsbase.obj -MD -MP -MF $(DEPDIR)/libheptafranc_util_a-chainparamsbase.Tpo -c -o libheptafranc_util_a-chainparamsbase.obj `if test -f 'chainparamsbase.cpp'; then $(CYGPATH_W) 'chainparamsbase.cpp'; else $(CYGPATH_W) '$(srcdir)/chainparamsbase.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libheptafranc_util_a-chainparamsbase.Tpo $(DEPDIR)/libheptafranc_util_a-chainparamsbase.Po
#	$(AM_V_CXX)source='chainparamsbase.cpp' object='libheptafranc_util_a-chainparamsbase.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_util_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_util_a_CXXFLAGS) $(CXXFLAGS) -c -o libheptafranc_util_a-chainparamsbase.obj `if test -f 'chainparamsbase.cpp'; then $(CYGPATH_W) 'chainparamsbase.cpp'; else $(CYGPATH_W) '$(srcdir)/chainparamsbase.cpp'; fi`

libheptafranc_util_a-clientversion.o: clientversion.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_util_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_util_a_CXXFLAGS) $(CXXFLAGS) -MT libheptafranc_util_a-clientversion.o -MD -MP -MF $(DEPDIR)/libheptafranc_util_a-clientversion.Tpo -c -o libheptafranc_util_a-clientversion.o `test -f 'clientversion.cpp' || echo '$(srcdir)/'`clientversion.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libheptafranc_util_a-clientversion.Tpo $(DEPDIR)/libheptafranc_util_a-clientversion.Po
#	$(AM_V_CXX)source='clientversion.cpp' object='libheptafranc_util_a-clientversion.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_util_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_util_a_CXXFLAGS) $(CXXFLAGS) -c -o libheptafranc_util_a-clientversion.o `test -f 'clientversion.cpp' || echo '$(srcdir)/'`clientversion.cpp

libheptafranc_util_a-clientversion.obj: clientversion.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_util_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_util_a_CXXFLAGS) $(CXXFLAGS) -MT libheptafranc_util_a-clientversion.obj -MD -MP -MF $(DEPDIR)/libheptafranc_util_a-clientversion.Tpo -c -o libheptafranc_util_a-clientversion.obj `if test -f 'clientversion.cpp'; then $(CYGPATH_W) 'clientversion.cpp'; else $(CYGPATH_W) '$(srcdir)/clientversion.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libheptafranc_util_a-clientversion.Tpo $(DEPDIR)/libheptafranc_util_a-clientversion.Po
#	$(AM_V_CXX)source='clientversion.cpp' object='libheptafranc_util_a-clientversion.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_util_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_util_a_CXXFLAGS) $(CXXFLAGS) -c -o libheptafranc_util_a-clientversion.obj `if test -f 'clientversion.cpp'; then $(CYGPATH_W) 'clientversion.cpp'; else $(CYGPATH_W) '$(srcdir)/clientversion.cpp'; fi`

compat/libheptafranc_util_a-glibc_sanity.o: compat/glibc_sanity.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_util_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_util_a_CXXFLAGS) $(CXXFLAGS) -MT compat/libheptafranc_util_a-glibc_sanity.o -MD -MP -MF compat/$(DEPDIR)/libheptafranc_util_a-glibc_sanity.Tpo -c -o compat/libheptafranc_util_a-glibc_sanity.o `test -f 'compat/glibc_sanity.cpp' || echo '$(srcdir)/'`compat/glibc_sanity.cpp
	$(AM_V_at)$(am__mv) compat/$(DEPDIR)/libheptafranc_util_a-glibc_sanity.Tpo compat/$(DEPDIR)/libheptafranc_util_a-glibc_sanity.Po
#	$(AM_V_CXX)source='compat/glibc_sanity.cpp' object='compat/libheptafranc_util_a-glibc_sanity.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_util_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_util_a_CXXFLAGS) $(CXXFLAGS) -c -o compat/libheptafranc_util_a-glibc_sanity.o `test -f 'compat/glibc_sanity.cpp' || echo '$(srcdir)/'`compat/glibc_sanity.cpp

compat/libheptafranc_util_a-glibc_sanity.obj: compat/glibc_sanity.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_util_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_util_a_CXXFLAGS) $(CXXFLAGS) -MT compat/libheptafranc_util_a-glibc_sanity.obj -MD -MP -MF compat/$(DEPDIR)/libheptafranc_util_a-glibc_sanity.Tpo -c -o compat/libheptafranc_util_a-glibc_sanity.obj `if test -f 'compat/glibc_sanity.cpp'; then $(CYGPATH_W) 'compat/glibc_sanity.cpp'; else $(CYGPATH_W) '$(srcdir)/compat/glibc_sanity.cpp'; fi`
	$(AM_V_at)$(am__mv) compat/$(DEPDIR)/libheptafranc_util_a-glibc_sanity.Tpo compat/$(DEPDIR)/libheptafranc_util_a-glibc_sanity.Po
#	$(AM_V_CXX)source='compat/glibc_sanity.cpp' object='compat/libheptafranc_util_a-glibc_sanity.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_util_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_util_a_CXXFLAGS) $(CXXFLAGS) -c -o compat/libheptafranc_util_a-glibc_sanity.obj `if test -f 'compat/glibc_sanity.cpp'; then $(CYGPATH_W) 'compat/glibc_sanity.cpp'; else $(CYGPATH_W) '$(srcdir)/compat/glibc_sanity.cpp'; fi`

compat/libheptafranc_util_a-glibcxx_sanity.o: compat/glibcxx_sanity.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_util_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_util_a_CXXFLAGS) $(CXXFLAGS) -MT compat/libheptafranc_util_a-glibcxx_sanity.o -MD -MP -MF compat/$(DEPDIR)/libheptafranc_util_a-glibcxx_sanity.Tpo -c -o compat/libheptafranc_util_a-glibcxx_sanity.o `test -f 'compat/glibcxx_sanity.cpp' || echo '$(srcdir)/'`compat/glibcxx_sanity.cpp
	$(AM_V_at)$(am__mv) compat/$(DEPDIR)/libheptafranc_util_a-glibcxx_sanity.Tpo compat/$(DEPDIR)/libheptafranc_util_a-glibcxx_sanity.Po
#	$(AM_V_CXX)source='compat/glibcxx_sanity.cpp' object='compat/libheptafranc_util_a-glibcxx_sanity.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_util_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_util_a_CXXFLAGS) $(CXXFLAGS) -c -o compat/libheptafranc_util_a-glibcxx_sanity.o `test -f 'compat/glibcxx_sanity.cpp' || echo '$(srcdir)/'`compat/glibcxx_sanity.cpp

compat/libheptafranc_util_a-glibcxx_sanity.obj: compat/glibcxx_sanity.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_util_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_util_a_CXXFLAGS) $(CXXFLAGS) -MT compat/libheptafranc_util_a-glibcxx_sanity.obj -MD -MP -MF compat/$(DEPDIR)/libheptafranc_util_a-glibcxx_sanity.Tpo -c -o compat/libheptafranc_util_a-glibcxx_sanity.obj `if test -f 'compat/glibcxx_sanity.cpp'; then $(CYGPATH_W) 'compat/glibcxx_sanity.cpp'; else $(CYGPATH_W) '$(srcdir)/compat/glibcxx_sanity.cpp'; fi`
	$(AM_V_at)$(am__mv) compat/$(DEPDIR)/libheptafranc_util_a-glibcxx_sanity.Tpo compat/$(DEPDIR)/libheptafranc_util_a-glibcxx_sanity.Po
#	$(AM_V_CXX)source='compat/glibcxx_sanity.cpp' object='compat/libheptafranc_util_a-glibcxx_sanity.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_util_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_util_a_CXXFLAGS) $(CXXFLAGS) -c -o compat/libheptafranc_util_a-glibcxx_sanity.obj `if test -f 'compat/glibcxx_sanity.cpp'; then $(CYGPATH_W) 'compat/glibcxx_sanity.cpp'; else $(CYGPATH_W) '$(srcdir)/compat/glibcxx_sanity.cpp'; fi`

compat/libheptafranc_util_a-strnlen.o: compat/strnlen.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_util_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_util_a_CXXFLAGS) $(CXXFLAGS) -MT compat/libheptafranc_util_a-strnlen.o -MD -MP -MF compat/$(DEPDIR)/libheptafranc_util_a-strnlen.Tpo -c -o compat/libheptafranc_util_a-strnlen.o `test -f 'compat/strnlen.cpp' || echo '$(srcdir)/'`compat/strnlen.cpp
	$(AM_V_at)$(am__mv) compat/$(DEPDIR)/libheptafranc_util_a-strnlen.Tpo compat/$(DEPDIR)/libheptafranc_util_a-strnlen.Po
#	$(AM_V_CXX)source='compat/strnlen.cpp' object='compat/libheptafranc_util_a-strnlen.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_util_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_util_a_CXXFLAGS) $(CXXFLAGS) -c -o compat/libheptafranc_util_a-strnlen.o `test -f 'compat/strnlen.cpp' || echo '$(srcdir)/'`compat/strnlen.cpp

compat/libheptafranc_util_a-strnlen.obj: compat/strnlen.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_util_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_util_a_CXXFLAGS) $(CXXFLAGS) -MT compat/libheptafranc_util_a-strnlen.obj -MD -MP -MF compat/$(DEPDIR)/libheptafranc_util_a-strnlen.Tpo -c -o compat/libheptafranc_util_a-strnlen.obj `if test -f 'compat/strnlen.cpp'; then $(CYGPATH_W) 'compat/strnlen.cpp'; else $(CYGPATH_W) '$(srcdir)/compat/strnlen.cpp'; fi`
	$(AM_V_at)$(am__mv) compat/$(DEPDIR)/libheptafranc_util_a-strnlen.Tpo compat/$(DEPDIR)/libheptafranc_util_a-strnlen.Po
#	$(AM_V_CXX)source='compat/strnlen.cpp' object='compat/libheptafranc_util_a-strnlen.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_util_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_util_a_CXXFLAGS) $(CXXFLAGS) -c -o compat/libheptafranc_util_a-strnlen.obj `if test -f 'compat/strnlen.cpp'; then $(CYGPATH_W) 'compat/strnlen.cpp'; else $(CYGPATH_W) '$(srcdir)/compat/strnlen.cpp'; fi`

libheptafranc_util_a-fs.o: fs.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_util_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_util_a_CXXFLAGS) $(CXXFLAGS) -MT libheptafranc_util_a-fs.o -MD -MP -MF $(DEPDIR)/libheptafranc_util_a-fs.Tpo -c -o libheptafranc_util_a-fs.o `test -f 'fs.cpp' || echo '$(srcdir)/'`fs.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libheptafranc_util_a-fs.Tpo $(DEPDIR)/libheptafranc_util_a-fs.Po
#	$(AM_V_CXX)source='fs.cpp' object='libheptafranc_util_a-fs.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_util_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_util_a_CXXFLAGS) $(CXXFLAGS) -c -o libheptafranc_util_a-fs.o `test -f 'fs.cpp' || echo '$(srcdir)/'`fs.cpp

libheptafranc_util_a-fs.obj: fs.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_util_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_util_a_CXXFLAGS) $(CXXFLAGS) -MT libheptafranc_util_a-fs.obj -MD -MP -MF $(DEPDIR)/libheptafranc_util_a-fs.Tpo -c -o libheptafranc_util_a-fs.obj `if test -f 'fs.cpp'; then $(CYGPATH_W) 'fs.cpp'; else $(CYGPATH_W) '$(srcdir)/fs.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libheptafranc_util_a-fs.Tpo $(DEPDIR)/libheptafranc_util_a-fs.Po
#	$(AM_V_CXX)source='fs.cpp' object='libheptafranc_util_a-fs.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_util_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_util_a_CXXFLAGS) $(CXXFLAGS) -c -o libheptafranc_util_a-fs.obj `if test -f 'fs.cpp'; then $(CYGPATH_W) 'fs.cpp'; else $(CYGPATH_W) '$(srcdir)/fs.cpp'; fi`

interfaces/libheptafranc_util_a-handler.o: interfaces/handler.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_util_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_util_a_CXXFLAGS) $(CXXFLAGS) -MT interfaces/libheptafranc_util_a-handler.o -MD -MP -MF interfaces/$(DEPDIR)/libheptafranc_util_a-handler.Tpo -c -o interfaces/libheptafranc_util_a-handler.o `test -f 'interfaces/handler.cpp' || echo '$(srcdir)/'`interfaces/handler.cpp
	$(AM_V_at)$(am__mv) interfaces/$(DEPDIR)/libheptafranc_util_a-handler.Tpo interfaces/$(DEPDIR)/libheptafranc_util_a-handler.Po
#	$(AM_V_CXX)source='interfaces/handler.cpp' object='interfaces/libheptafranc_util_a-handler.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_util_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_util_a_CXXFLAGS) $(CXXFLAGS) -c -o interfaces/libheptafranc_util_a-handler.o `test -f 'interfaces/handler.cpp' || echo '$(srcdir)/'`interfaces/handler.cpp

interfaces/libheptafranc_util_a-handler.obj: interfaces/handler.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_util_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_util_a_CXXFLAGS) $(CXXFLAGS) -MT interfaces/libheptafranc_util_a-handler.obj -MD -MP -MF interfaces/$(DEPDIR)/libheptafranc_util_a-handler.Tpo -c -o interfaces/libheptafranc_util_a-handler.obj `if test -f 'interfaces/handler.cpp'; then $(CYGPATH_W) 'interfaces/handler.cpp'; else $(CYGPATH_W) '$(srcdir)/interfaces/handler.cpp'; fi`
	$(AM_V_at)$(am__mv) interfaces/$(DEPDIR)/libheptafranc_util_a-handler.Tpo interfaces/$(DEPDIR)/libheptafranc_util_a-handler.Po
#	$(AM_V_CXX)source='interfaces/handler.cpp' object='interfaces/libheptafranc_util_a-handler.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_util_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_util_a_CXXFLAGS) $(CXXFLAGS) -c -o interfaces/libheptafranc_util_a-handler.obj `if test -f 'interfaces/handler.cpp'; then $(CYGPATH_W) 'interfaces/handler.cpp'; else $(CYGPATH_W) '$(srcdir)/interfaces/handler.cpp'; fi`

interfaces/libheptafranc_util_a-node.o: interfaces/node.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_util_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_util_a_CXXFLAGS) $(CXXFLAGS) -MT interfaces/libheptafranc_util_a-node.o -MD -MP -MF interfaces/$(DEPDIR)/libheptafranc_util_a-node.Tpo -c -o interfaces/libheptafranc_util_a-node.o `test -f 'interfaces/node.cpp' || echo '$(srcdir)/'`interfaces/node.cpp
	$(AM_V_at)$(am__mv) interfaces/$(DEPDIR)/libheptafranc_util_a-node.Tpo interfaces/$(DEPDIR)/libheptafranc_util_a-node.Po
#	$(AM_V_CXX)source='interfaces/node.cpp' object='interfaces/libheptafranc_util_a-node.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_util_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_util_a_CXXFLAGS) $(CXXFLAGS) -c -o interfaces/libheptafranc_util_a-node.o `test -f 'interfaces/node.cpp' || echo '$(srcdir)/'`interfaces/node.cpp

interfaces/libheptafranc_util_a-node.obj: interfaces/node.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_util_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_util_a_CXXFLAGS) $(CXXFLAGS) -MT interfaces/libheptafranc_util_a-node.obj -MD -MP -MF interfaces/$(DEPDIR)/libheptafranc_util_a-node.Tpo -c -o interfaces/libheptafranc_util_a-node.obj `if test -f 'interfaces/node.cpp'; then $(CYGPATH_W) 'interfaces/node.cpp'; else $(CYGPATH_W) '$(srcdir)/interfaces/node.cpp'; fi`
	$(AM_V_at)$(am__mv) interfaces/$(DEPDIR)/libheptafranc_util_a-node.Tpo interfaces/$(DEPDIR)/libheptafranc_util_a-node.Po
#	$(AM_V_CXX)source='interfaces/node.cpp' object='interfaces/libheptafranc_util_a-node.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_util_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_util_a_CXXFLAGS) $(CXXFLAGS) -c -o interfaces/libheptafranc_util_a-node.obj `if test -f 'interfaces/node.cpp'; then $(CYGPATH_W) 'interfaces/node.cpp'; else $(CYGPATH_W) '$(srcdir)/interfaces/node.cpp'; fi`

libheptafranc_util_a-logging.o: logging.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_util_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_util_a_CXXFLAGS) $(CXXFLAGS) -MT libheptafranc_util_a-logging.o -MD -MP -MF $(DEPDIR)/libheptafranc_util_a-logging.Tpo -c -o libheptafranc_util_a-logging.o `test -f 'logging.cpp' || echo '$(srcdir)/'`logging.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libheptafranc_util_a-logging.Tpo $(DEPDIR)/libheptafranc_util_a-logging.Po
#	$(AM_V_CXX)source='logging.cpp' object='libheptafranc_util_a-logging.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_util_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_util_a_CXXFLAGS) $(CXXFLAGS) -c -o libheptafranc_util_a-logging.o `test -f 'logging.cpp' || echo '$(srcdir)/'`logging.cpp

libheptafranc_util_a-logging.obj: logging.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_util_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_util_a_CXXFLAGS) $(CXXFLAGS) -MT libheptafranc_util_a-logging.obj -MD -MP -MF $(DEPDIR)/libheptafranc_util_a-logging.Tpo -c -o libheptafranc_util_a-logging.obj `if test -f 'logging.cpp'; then $(CYGPATH_W) 'logging.cpp'; else $(CYGPATH_W) '$(srcdir)/logging.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libheptafranc_util_a-logging.Tpo $(DEPDIR)/libheptafranc_util_a-logging.Po
#	$(AM_V_CXX)source='logging.cpp' object='libheptafranc_util_a-logging.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_util_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_util_a_CXXFLAGS) $(CXXFLAGS) -c -o libheptafranc_util_a-logging.obj `if test -f 'logging.cpp'; then $(CYGPATH_W) 'logging.cpp'; else $(CYGPATH_W) '$(srcdir)/logging.cpp'; fi`

libheptafranc_util_a-random.o: random.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_util_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_util_a_CXXFLAGS) $(CXXFLAGS) -MT libheptafranc_util_a-random.o -MD -MP -MF $(DEPDIR)/libheptafranc_util_a-random.Tpo -c -o libheptafranc_util_a-random.o `test -f 'random.cpp' || echo '$(srcdir)/'`random.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libheptafranc_util_a-random.Tpo $(DEPDIR)/libheptafranc_util_a-random.Po
#	$(AM_V_CXX)source='random.cpp' object='libheptafranc_util_a-random.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_util_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_util_a_CXXFLAGS) $(CXXFLAGS) -c -o libheptafranc_util_a-random.o `test -f 'random.cpp' || echo '$(srcdir)/'`random.cpp

libheptafranc_util_a-random.obj: random.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_util_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_util_a_CXXFLAGS) $(CXXFLAGS) -MT libheptafranc_util_a-random.obj -MD -MP -MF $(DEPDIR)/libheptafranc_util_a-random.Tpo -c -o libheptafranc_util_a-random.obj `if test -f 'random.cpp'; then $(CYGPATH_W) 'random.cpp'; else $(CYGPATH_W) '$(srcdir)/random.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libheptafranc_util_a-random.Tpo $(DEPDIR)/libheptafranc_util_a-random.Po
#	$(AM_V_CXX)source='random.cpp' object='libheptafranc_util_a-random.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_util_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_util_a_CXXFLAGS) $(CXXFLAGS) -c -o libheptafranc_util_a-random.obj `if test -f 'random.cpp'; then $(CYGPATH_W) 'random.cpp'; else $(CYGPATH_W) '$(srcdir)/random.cpp'; fi`

rpc/libheptafranc_util_a-protocol.o: rpc/protocol.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_util_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_util_a_CXXFLAGS) $(CXXFLAGS) -MT rpc/libheptafranc_util_a-protocol.o -MD -MP -MF rpc/$(DEPDIR)/libheptafranc_util_a-protocol.Tpo -c -o rpc/libheptafranc_util_a-protocol.o `test -f 'rpc/protocol.cpp' || echo '$(srcdir)/'`rpc/protocol.cpp
	$(AM_V_at)$(am__mv) rpc/$(DEPDIR)/libheptafranc_util_a-protocol.Tpo rpc/$(DEPDIR)/libheptafranc_util_a-protocol.Po
#	$(AM_V_CXX)source='rpc/protocol.cpp' object='rpc/libheptafranc_util_a-protocol.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_util_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_util_a_CXXFLAGS) $(CXXFLAGS) -c -o rpc/libheptafranc_util_a-protocol.o `test -f 'rpc/protocol.cpp' || echo '$(srcdir)/'`rpc/protocol.cpp

rpc/libheptafranc_util_a-protocol.obj: rpc/protocol.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_util_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_util_a_CXXFLAGS) $(CXXFLAGS) -MT rpc/libheptafranc_util_a-protocol.obj -MD -MP -MF rpc/$(DEPDIR)/libheptafranc_util_a-protocol.Tpo -c -o rpc/libheptafranc_util_a-protocol.obj `if test -f 'rpc/protocol.cpp'; then $(CYGPATH_W) 'rpc/protocol.cpp'; else $(CYGPATH_W) '$(srcdir)/rpc/protocol.cpp'; fi`
	$(AM_V_at)$(am__mv) rpc/$(DEPDIR)/libheptafranc_util_a-protocol.Tpo rpc/$(DEPDIR)/libheptafranc_util_a-protocol.Po
#	$(AM_V_CXX)source='rpc/protocol.cpp' object='rpc/libheptafranc_util_a-protocol.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_util_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_util_a_CXXFLAGS) $(CXXFLAGS) -c -o rpc/libheptafranc_util_a-protocol.obj `if test -f 'rpc/protocol.cpp'; then $(CYGPATH_W) 'rpc/protocol.cpp'; else $(CYGPATH_W) '$(srcdir)/rpc/protocol.cpp'; fi`

support/libheptafranc_util_a-cleanse.o: support/cleanse.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_util_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_util_a_CXXFLAGS) $(CXXFLAGS) -MT support/libheptafranc_util_a-cleanse.o -MD -MP -MF support/$(DEPDIR)/libheptafranc_util_a-cleanse.Tpo -c -o support/libheptafranc_util_a-cleanse.o `test -f 'support/cleanse.cpp' || echo '$(srcdir)/'`support/cleanse.cpp
	$(AM_V_at)$(am__mv) support/$(DEPDIR)/libheptafranc_util_a-cleanse.Tpo support/$(DEPDIR)/libheptafranc_util_a-cleanse.Po
#	$(AM_V_CXX)source='support/cleanse.cpp' object='support/libheptafranc_util_a-cleanse.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_util_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_util_a_CXXFLAGS) $(CXXFLAGS) -c -o support/libheptafranc_util_a-cleanse.o `test -f 'support/cleanse.cpp' || echo '$(srcdir)/'`support/cleanse.cpp

support/libheptafranc_util_a-cleanse.obj: support/cleanse.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_util_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_util_a_CXXFLAGS) $(CXXFLAGS) -MT support/libheptafranc_util_a-cleanse.obj -MD -MP -MF support/$(DEPDIR)/libheptafranc_util_a-cleanse.Tpo -c -o support/libheptafranc_util_a-cleanse.obj `if test -f 'support/cleanse.cpp'; then $(CYGPATH_W) 'support/cleanse.cpp'; else $(CYGPATH_W) '$(srcdir)/support/cleanse.cpp'; fi`
	$(AM_V_at)$(am__mv) support/$(DEPDIR)/libheptafranc_util_a-cleanse.Tpo support/$(DEPDIR)/libheptafranc_util_a-cleanse.Po
#	$(AM_V_CXX)source='support/cleanse.cpp' object='support/libheptafranc_util_a-cleanse.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_util_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_util_a_CXXFLAGS) $(CXXFLAGS) -c -o support/libheptafranc_util_a-cleanse.obj `if test -f 'support/cleanse.cpp'; then $(CYGPATH_W) 'support/cleanse.cpp'; else $(CYGPATH_W) '$(srcdir)/support/cleanse.cpp'; fi`

libheptafranc_util_a-sync.o: sync.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_util_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_util_a_CXXFLAGS) $(CXXFLAGS) -MT libheptafranc_util_a-sync.o -MD -MP -MF $(DEPDIR)/libheptafranc_util_a-sync.Tpo -c -o libheptafranc_util_a-sync.o `test -f 'sync.cpp' || echo '$(srcdir)/'`sync.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libheptafranc_util_a-sync.Tpo $(DEPDIR)/libheptafranc_util_a-sync.Po
#	$(AM_V_CXX)source='sync.cpp' object='libheptafranc_util_a-sync.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_util_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_util_a_CXXFLAGS) $(CXXFLAGS) -c -o libheptafranc_util_a-sync.o `test -f 'sync.cpp' || echo '$(srcdir)/'`sync.cpp

libheptafranc_util_a-sync.obj: sync.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_util_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_util_a_CXXFLAGS) $(CXXFLAGS) -MT libheptafranc_util_a-sync.obj -MD -MP -MF $(DEPDIR)/libheptafranc_util_a-sync.Tpo -c -o libheptafranc_util_a-sync.obj `if test -f 'sync.cpp'; then $(CYGPATH_W) 'sync.cpp'; else $(CYGPATH_W) '$(srcdir)/sync.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libheptafranc_util_a-sync.Tpo $(DEPDIR)/libheptafranc_util_a-sync.Po
#	$(AM_V_CXX)source='sync.cpp' object='libheptafranc_util_a-sync.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_util_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_util_a_CXXFLAGS) $(CXXFLAGS) -c -o libheptafranc_util_a-sync.obj `if test -f 'sync.cpp'; then $(CYGPATH_W) 'sync.cpp'; else $(CYGPATH_W) '$(srcdir)/sync.cpp'; fi`

libheptafranc_util_a-threadinterrupt.o: threadinterrupt.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_util_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_util_a_CXXFLAGS) $(CXXFLAGS) -MT libheptafranc_util_a-threadinterrupt.o -MD -MP -MF $(DEPDIR)/libheptafranc_util_a-threadinterrupt.Tpo -c -o libheptafranc_util_a-threadinterrupt.o `test -f 'threadinterrupt.cpp' || echo '$(srcdir)/'`threadinterrupt.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libheptafranc_util_a-threadinterrupt.Tpo $(DEPDIR)/libheptafranc_util_a-threadinterrupt.Po
#	$(AM_V_CXX)source='threadinterrupt.cpp' object='libheptafranc_util_a-threadinterrupt.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_util_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_util_a_CXXFLAGS) $(CXXFLAGS) -c -o libheptafranc_util_a-threadinterrupt.o `test -f 'threadinterrupt.cpp' || echo '$(srcdir)/'`threadinterrupt.cpp

libheptafranc_util_a-threadinterrupt.obj: threadinterrupt.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_util_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_util_a_CXXFLAGS) $(CXXFLAGS) -MT libheptafranc_util_a-threadinterrupt.obj -MD -MP -MF $(DEPDIR)/libheptafranc_util_a-threadinterrupt.Tpo -c -o libheptafranc_util_a-threadinterrupt.obj `if test -f 'threadinterrupt.cpp'; then $(CYGPATH_W) 'threadinterrupt.cpp'; else $(CYGPATH_W) '$(srcdir)/threadinterrupt.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libheptafranc_util_a-threadinterrupt.Tpo $(DEPDIR)/libheptafranc_util_a-threadinterrupt.Po
#	$(AM_V_CXX)source='threadinterrupt.cpp' object='libheptafranc_util_a-threadinterrupt.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_util_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_util_a_CXXFLAGS) $(CXXFLAGS) -c -o libheptafranc_util_a-threadinterrupt.obj `if test -f 'threadinterrupt.cpp'; then $(CYGPATH_W) 'threadinterrupt.cpp'; else $(CYGPATH_W) '$(srcdir)/threadinterrupt.cpp'; fi`

libheptafranc_util_a-util.o: util.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_util_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_util_a_CXXFLAGS) $(CXXFLAGS) -MT libheptafranc_util_a-util.o -MD -MP -MF $(DEPDIR)/libheptafranc_util_a-util.Tpo -c -o libheptafranc_util_a-util.o `test -f 'util.cpp' || echo '$(srcdir)/'`util.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libheptafranc_util_a-util.Tpo $(DEPDIR)/libheptafranc_util_a-util.Po
#	$(AM_V_CXX)source='util.cpp' object='libheptafranc_util_a-util.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_util_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_util_a_CXXFLAGS) $(CXXFLAGS) -c -o libheptafranc_util_a-util.o `test -f 'util.cpp' || echo '$(srcdir)/'`util.cpp

libheptafranc_util_a-util.obj: util.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_util_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_util_a_CXXFLAGS) $(CXXFLAGS) -MT libheptafranc_util_a-util.obj -MD -MP -MF $(DEPDIR)/libheptafranc_util_a-util.Tpo -c -o libheptafranc_util_a-util.obj `if test -f 'util.cpp'; then $(CYGPATH_W) 'util.cpp'; else $(CYGPATH_W) '$(srcdir)/util.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libheptafranc_util_a-util.Tpo $(DEPDIR)/libheptafranc_util_a-util.Po
#	$(AM_V_CXX)source='util.cpp' object='libheptafranc_util_a-util.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_util_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_util_a_CXXFLAGS) $(CXXFLAGS) -c -o libheptafranc_util_a-util.obj `if test -f 'util.cpp'; then $(CYGPATH_W) 'util.cpp'; else $(CYGPATH_W) '$(srcdir)/util.cpp'; fi`

libheptafranc_util_a-utilmoneystr.o: utilmoneystr.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_util_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_util_a_CXXFLAGS) $(CXXFLAGS) -MT libheptafranc_util_a-utilmoneystr.o -MD -MP -MF $(DEPDIR)/libheptafranc_util_a-utilmoneystr.Tpo -c -o libheptafranc_util_a-utilmoneystr.o `test -f 'utilmoneystr.cpp' || echo '$(srcdir)/'`utilmoneystr.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libheptafranc_util_a-utilmoneystr.Tpo $(DEPDIR)/libheptafranc_util_a-utilmoneystr.Po
#	$(AM_V_CXX)source='utilmoneystr.cpp' object='libheptafranc_util_a-utilmoneystr.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_util_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_util_a_CXXFLAGS) $(CXXFLAGS) -c -o libheptafranc_util_a-utilmoneystr.o `test -f 'utilmoneystr.cpp' || echo '$(srcdir)/'`utilmoneystr.cpp

libheptafranc_util_a-utilmoneystr.obj: utilmoneystr.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_util_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_util_a_CXXFLAGS) $(CXXFLAGS) -MT libheptafranc_util_a-utilmoneystr.obj -MD -MP -MF $(DEPDIR)/libheptafranc_util_a-utilmoneystr.Tpo -c -o libheptafranc_util_a-utilmoneystr.obj `if test -f 'utilmoneystr.cpp'; then $(CYGPATH_W) 'utilmoneystr.cpp'; else $(CYGPATH_W) '$(srcdir)/utilmoneystr.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libheptafranc_util_a-utilmoneystr.Tpo $(DEPDIR)/libheptafranc_util_a-utilmoneystr.Po
#	$(AM_V_CXX)source='utilmoneystr.cpp' object='libheptafranc_util_a-utilmoneystr.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_util_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_util_a_CXXFLAGS) $(CXXFLAGS) -c -o libheptafranc_util_a-utilmoneystr.obj `if test -f 'utilmoneystr.cpp'; then $(CYGPATH_W) 'utilmoneystr.cpp'; else $(CYGPATH_W) '$(srcdir)/utilmoneystr.cpp'; fi`

libheptafranc_util_a-utilstrencodings.o: utilstrencodings.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_util_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_util_a_CXXFLAGS) $(CXXFLAGS) -MT libheptafranc_util_a-utilstrencodings.o -MD -MP -MF $(DEPDIR)/libheptafranc_util_a-utilstrencodings.Tpo -c -o libheptafranc_util_a-utilstrencodings.o `test -f 'utilstrencodings.cpp' || echo '$(srcdir)/'`utilstrencodings.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libheptafranc_util_a-utilstrencodings.Tpo $(DEPDIR)/libheptafranc_util_a-utilstrencodings.Po
#	$(AM_V_CXX)source='utilstrencodings.cpp' object='libheptafranc_util_a-utilstrencodings.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_util_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_util_a_CXXFLAGS) $(CXXFLAGS) -c -o libheptafranc_util_a-utilstrencodings.o `test -f 'utilstrencodings.cpp' || echo '$(srcdir)/'`utilstrencodings.cpp

libheptafranc_util_a-utilstrencodings.obj: utilstrencodings.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_util_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_util_a_CXXFLAGS) $(CXXFLAGS) -MT libheptafranc_util_a-utilstrencodings.obj -MD -MP -MF $(DEPDIR)/libheptafranc_util_a-utilstrencodings.Tpo -c -o libheptafranc_util_a-utilstrencodings.obj `if test -f 'utilstrencodings.cpp'; then $(CYGPATH_W) 'utilstrencodings.cpp'; else $(CYGPATH_W) '$(srcdir)/utilstrencodings.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libheptafranc_util_a-utilstrencodings.Tpo $(DEPDIR)/libheptafranc_util_a-utilstrencodings.Po
#	$(AM_V_CXX)source='utilstrencodings.cpp' object='libheptafranc_util_a-utilstrencodings.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_util_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_util_a_CXXFLAGS) $(CXXFLAGS) -c -o libheptafranc_util_a-utilstrencodings.obj `if test -f 'utilstrencodings.cpp'; then $(CYGPATH_W) 'utilstrencodings.cpp'; else $(CYGPATH_W) '$(srcdir)/utilstrencodings.cpp'; fi`

libheptafranc_util_a-utiltime.o: utiltime.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_util_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_util_a_CXXFLAGS) $(CXXFLAGS) -MT libheptafranc_util_a-utiltime.o -MD -MP -MF $(DEPDIR)/libheptafranc_util_a-utiltime.Tpo -c -o libheptafranc_util_a-utiltime.o `test -f 'utiltime.cpp' || echo '$(srcdir)/'`utiltime.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libheptafranc_util_a-utiltime.Tpo $(DEPDIR)/libheptafranc_util_a-utiltime.Po
#	$(AM_V_CXX)source='utiltime.cpp' object='libheptafranc_util_a-utiltime.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_util_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_util_a_CXXFLAGS) $(CXXFLAGS) -c -o libheptafranc_util_a-utiltime.o `test -f 'utiltime.cpp' || echo '$(srcdir)/'`utiltime.cpp

libheptafranc_util_a-utiltime.obj: utiltime.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_util_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_util_a_CXXFLAGS) $(CXXFLAGS) -MT libheptafranc_util_a-utiltime.obj -MD -MP -MF $(DEPDIR)/libheptafranc_util_a-utiltime.Tpo -c -o libheptafranc_util_a-utiltime.obj `if test -f 'utiltime.cpp'; then $(CYGPATH_W) 'utiltime.cpp'; else $(CYGPATH_W) '$(srcdir)/utiltime.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libheptafranc_util_a-utiltime.Tpo $(DEPDIR)/libheptafranc_util_a-utiltime.Po
#	$(AM_V_CXX)source='utiltime.cpp' object='libheptafranc_util_a-utiltime.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_util_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_util_a_CXXFLAGS) $(CXXFLAGS) -c -o libheptafranc_util_a-utiltime.obj `if test -f 'utiltime.cpp'; then $(CYGPATH_W) 'utiltime.cpp'; else $(CYGPATH_W) '$(srcdir)/utiltime.cpp'; fi`

compat/libheptafranc_util_a-glibc_compat.o: compat/glibc_compat.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_util_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_util_a_CXXFLAGS) $(CXXFLAGS) -MT compat/libheptafranc_util_a-glibc_compat.o -MD -MP -MF compat/$(DEPDIR)/libheptafranc_util_a-glibc_compat.Tpo -c -o compat/libheptafranc_util_a-glibc_compat.o `test -f 'compat/glibc_compat.cpp' || echo '$(srcdir)/'`compat/glibc_compat.cpp
	$(AM_V_at)$(am__mv) compat/$(DEPDIR)/libheptafranc_util_a-glibc_compat.Tpo compat/$(DEPDIR)/libheptafranc_util_a-glibc_compat.Po
#	$(AM_V_CXX)source='compat/glibc_compat.cpp' object='compat/libheptafranc_util_a-glibc_compat.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_util_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_util_a_CXXFLAGS) $(CXXFLAGS) -c -o compat/libheptafranc_util_a-glibc_compat.o `test -f 'compat/glibc_compat.cpp' || echo '$(srcdir)/'`compat/glibc_compat.cpp

compat/libheptafranc_util_a-glibc_compat.obj: compat/glibc_compat.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_util_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_util_a_CXXFLAGS) $(CXXFLAGS) -MT compat/libheptafranc_util_a-glibc_compat.obj -MD -MP -MF compat/$(DEPDIR)/libheptafranc_util_a-glibc_compat.Tpo -c -o compat/libheptafranc_util_a-glibc_compat.obj `if test -f 'compat/glibc_compat.cpp'; then $(CYGPATH_W) 'compat/glibc_compat.cpp'; else $(CYGPATH_W) '$(srcdir)/compat/glibc_compat.cpp'; fi`
	$(AM_V_at)$(am__mv) compat/$(DEPDIR)/libheptafranc_util_a-glibc_compat.Tpo compat/$(DEPDIR)/libheptafranc_util_a-glibc_compat.Po
#	$(AM_V_CXX)source='compat/glibc_compat.cpp' object='compat/libheptafranc_util_a-glibc_compat.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_util_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_util_a_CXXFLAGS) $(CXXFLAGS) -c -o compat/libheptafranc_util_a-glibc_compat.obj `if test -f 'compat/glibc_compat.cpp'; then $(CYGPATH_W) 'compat/glibc_compat.cpp'; else $(CYGPATH_W) '$(srcdir)/compat/glibc_compat.cpp'; fi`

interfaces/libheptafranc_wallet_a-wallet.o: interfaces/wallet.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_wallet_a_CXXFLAGS) $(CXXFLAGS) -MT interfaces/libheptafranc_wallet_a-wallet.o -MD -MP -MF interfaces/$(DEPDIR)/libheptafranc_wallet_a-wallet.Tpo -c -o interfaces/libheptafranc_wallet_a-wallet.o `test -f 'interfaces/wallet.cpp' || echo '$(srcdir)/'`interfaces/wallet.cpp
	$(AM_V_at)$(am__mv) interfaces/$(DEPDIR)/libheptafranc_wallet_a-wallet.Tpo interfaces/$(DEPDIR)/libheptafranc_wallet_a-wallet.Po
#	$(AM_V_CXX)source='interfaces/wallet.cpp' object='interfaces/libheptafranc_wallet_a-wallet.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_wallet_a_CXXFLAGS) $(CXXFLAGS) -c -o interfaces/libheptafranc_wallet_a-wallet.o `test -f 'interfaces/wallet.cpp' || echo '$(srcdir)/'`interfaces/wallet.cpp

interfaces/libheptafranc_wallet_a-wallet.obj: interfaces/wallet.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_wallet_a_CXXFLAGS) $(CXXFLAGS) -MT interfaces/libheptafranc_wallet_a-wallet.obj -MD -MP -MF interfaces/$(DEPDIR)/libheptafranc_wallet_a-wallet.Tpo -c -o interfaces/libheptafranc_wallet_a-wallet.obj `if test -f 'interfaces/wallet.cpp'; then $(CYGPATH_W) 'interfaces/wallet.cpp'; else $(CYGPATH_W) '$(srcdir)/interfaces/wallet.cpp'; fi`
	$(AM_V_at)$(am__mv) interfaces/$(DEPDIR)/libheptafranc_wallet_a-wallet.Tpo interfaces/$(DEPDIR)/libheptafranc_wallet_a-wallet.Po
#	$(AM_V_CXX)source='interfaces/wallet.cpp' object='interfaces/libheptafranc_wallet_a-wallet.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_wallet_a_CXXFLAGS) $(CXXFLAGS) -c -o interfaces/libheptafranc_wallet_a-wallet.obj `if test -f 'interfaces/wallet.cpp'; then $(CYGPATH_W) 'interfaces/wallet.cpp'; else $(CYGPATH_W) '$(srcdir)/interfaces/wallet.cpp'; fi`

wallet/libheptafranc_wallet_a-coincontrol.o: wallet/coincontrol.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_wallet_a_CXXFLAGS) $(CXXFLAGS) -MT wallet/libheptafranc_wallet_a-coincontrol.o -MD -MP -MF wallet/$(DEPDIR)/libheptafranc_wallet_a-coincontrol.Tpo -c -o wallet/libheptafranc_wallet_a-coincontrol.o `test -f 'wallet/coincontrol.cpp' || echo '$(srcdir)/'`wallet/coincontrol.cpp
	$(AM_V_at)$(am__mv) wallet/$(DEPDIR)/libheptafranc_wallet_a-coincontrol.Tpo wallet/$(DEPDIR)/libheptafranc_wallet_a-coincontrol.Po
#	$(AM_V_CXX)source='wallet/coincontrol.cpp' object='wallet/libheptafranc_wallet_a-coincontrol.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_wallet_a_CXXFLAGS) $(CXXFLAGS) -c -o wallet/libheptafranc_wallet_a-coincontrol.o `test -f 'wallet/coincontrol.cpp' || echo '$(srcdir)/'`wallet/coincontrol.cpp

wallet/libheptafranc_wallet_a-coincontrol.obj: wallet/coincontrol.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_wallet_a_CXXFLAGS) $(CXXFLAGS) -MT wallet/libheptafranc_wallet_a-coincontrol.obj -MD -MP -MF wallet/$(DEPDIR)/libheptafranc_wallet_a-coincontrol.Tpo -c -o wallet/libheptafranc_wallet_a-coincontrol.obj `if test -f 'wallet/coincontrol.cpp'; then $(CYGPATH_W) 'wallet/coincontrol.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/coincontrol.cpp'; fi`
	$(AM_V_at)$(am__mv) wallet/$(DEPDIR)/libheptafranc_wallet_a-coincontrol.Tpo wallet/$(DEPDIR)/libheptafranc_wallet_a-coincontrol.Po
#	$(AM_V_CXX)source='wallet/coincontrol.cpp' object='wallet/libheptafranc_wallet_a-coincontrol.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_wallet_a_CXXFLAGS) $(CXXFLAGS) -c -o wallet/libheptafranc_wallet_a-coincontrol.obj `if test -f 'wallet/coincontrol.cpp'; then $(CYGPATH_W) 'wallet/coincontrol.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/coincontrol.cpp'; fi`

wallet/libheptafranc_wallet_a-crypter.o: wallet/crypter.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_wallet_a_CXXFLAGS) $(CXXFLAGS) -MT wallet/libheptafranc_wallet_a-crypter.o -MD -MP -MF wallet/$(DEPDIR)/libheptafranc_wallet_a-crypter.Tpo -c -o wallet/libheptafranc_wallet_a-crypter.o `test -f 'wallet/crypter.cpp' || echo '$(srcdir)/'`wallet/crypter.cpp
	$(AM_V_at)$(am__mv) wallet/$(DEPDIR)/libheptafranc_wallet_a-crypter.Tpo wallet/$(DEPDIR)/libheptafranc_wallet_a-crypter.Po
#	$(AM_V_CXX)source='wallet/crypter.cpp' object='wallet/libheptafranc_wallet_a-crypter.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_wallet_a_CXXFLAGS) $(CXXFLAGS) -c -o wallet/libheptafranc_wallet_a-crypter.o `test -f 'wallet/crypter.cpp' || echo '$(srcdir)/'`wallet/crypter.cpp

wallet/libheptafranc_wallet_a-crypter.obj: wallet/crypter.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_wallet_a_CXXFLAGS) $(CXXFLAGS) -MT wallet/libheptafranc_wallet_a-crypter.obj -MD -MP -MF wallet/$(DEPDIR)/libheptafranc_wallet_a-crypter.Tpo -c -o wallet/libheptafranc_wallet_a-crypter.obj `if test -f 'wallet/crypter.cpp'; then $(CYGPATH_W) 'wallet/crypter.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/crypter.cpp'; fi`
	$(AM_V_at)$(am__mv) wallet/$(DEPDIR)/libheptafranc_wallet_a-crypter.Tpo wallet/$(DEPDIR)/libheptafranc_wallet_a-crypter.Po
#	$(AM_V_CXX)source='wallet/crypter.cpp' object='wallet/libheptafranc_wallet_a-crypter.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_wallet_a_CXXFLAGS) $(CXXFLAGS) -c -o wallet/libheptafranc_wallet_a-crypter.obj `if test -f 'wallet/crypter.cpp'; then $(CYGPATH_W) 'wallet/crypter.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/crypter.cpp'; fi`

wallet/libheptafranc_wallet_a-db.o: wallet/db.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_wallet_a_CXXFLAGS) $(CXXFLAGS) -MT wallet/libheptafranc_wallet_a-db.o -MD -MP -MF wallet/$(DEPDIR)/libheptafranc_wallet_a-db.Tpo -c -o wallet/libheptafranc_wallet_a-db.o `test -f 'wallet/db.cpp' || echo '$(srcdir)/'`wallet/db.cpp
	$(AM_V_at)$(am__mv) wallet/$(DEPDIR)/libheptafranc_wallet_a-db.Tpo wallet/$(DEPDIR)/libheptafranc_wallet_a-db.Po
#	$(AM_V_CXX)source='wallet/db.cpp' object='wallet/libheptafranc_wallet_a-db.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_wallet_a_CXXFLAGS) $(CXXFLAGS) -c -o wallet/libheptafranc_wallet_a-db.o `test -f 'wallet/db.cpp' || echo '$(srcdir)/'`wallet/db.cpp

wallet/libheptafranc_wallet_a-db.obj: wallet/db.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_wallet_a_CXXFLAGS) $(CXXFLAGS) -MT wallet/libheptafranc_wallet_a-db.obj -MD -MP -MF wallet/$(DEPDIR)/libheptafranc_wallet_a-db.Tpo -c -o wallet/libheptafranc_wallet_a-db.obj `if test -f 'wallet/db.cpp'; then $(CYGPATH_W) 'wallet/db.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/db.cpp'; fi`
	$(AM_V_at)$(am__mv) wallet/$(DEPDIR)/libheptafranc_wallet_a-db.Tpo wallet/$(DEPDIR)/libheptafranc_wallet_a-db.Po
#	$(AM_V_CXX)source='wallet/db.cpp' object='wallet/libheptafranc_wallet_a-db.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_wallet_a_CXXFLAGS) $(CXXFLAGS) -c -o wallet/libheptafranc_wallet_a-db.obj `if test -f 'wallet/db.cpp'; then $(CYGPATH_W) 'wallet/db.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/db.cpp'; fi`

wallet/libheptafranc_wallet_a-feebumper.o: wallet/feebumper.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_wallet_a_CXXFLAGS) $(CXXFLAGS) -MT wallet/libheptafranc_wallet_a-feebumper.o -MD -MP -MF wallet/$(DEPDIR)/libheptafranc_wallet_a-feebumper.Tpo -c -o wallet/libheptafranc_wallet_a-feebumper.o `test -f 'wallet/feebumper.cpp' || echo '$(srcdir)/'`wallet/feebumper.cpp
	$(AM_V_at)$(am__mv) wallet/$(DEPDIR)/libheptafranc_wallet_a-feebumper.Tpo wallet/$(DEPDIR)/libheptafranc_wallet_a-feebumper.Po
#	$(AM_V_CXX)source='wallet/feebumper.cpp' object='wallet/libheptafranc_wallet_a-feebumper.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_wallet_a_CXXFLAGS) $(CXXFLAGS) -c -o wallet/libheptafranc_wallet_a-feebumper.o `test -f 'wallet/feebumper.cpp' || echo '$(srcdir)/'`wallet/feebumper.cpp

wallet/libheptafranc_wallet_a-feebumper.obj: wallet/feebumper.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_wallet_a_CXXFLAGS) $(CXXFLAGS) -MT wallet/libheptafranc_wallet_a-feebumper.obj -MD -MP -MF wallet/$(DEPDIR)/libheptafranc_wallet_a-feebumper.Tpo -c -o wallet/libheptafranc_wallet_a-feebumper.obj `if test -f 'wallet/feebumper.cpp'; then $(CYGPATH_W) 'wallet/feebumper.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/feebumper.cpp'; fi`
	$(AM_V_at)$(am__mv) wallet/$(DEPDIR)/libheptafranc_wallet_a-feebumper.Tpo wallet/$(DEPDIR)/libheptafranc_wallet_a-feebumper.Po
#	$(AM_V_CXX)source='wallet/feebumper.cpp' object='wallet/libheptafranc_wallet_a-feebumper.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_wallet_a_CXXFLAGS) $(CXXFLAGS) -c -o wallet/libheptafranc_wallet_a-feebumper.obj `if test -f 'wallet/feebumper.cpp'; then $(CYGPATH_W) 'wallet/feebumper.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/feebumper.cpp'; fi`

wallet/libheptafranc_wallet_a-fees.o: wallet/fees.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_wallet_a_CXXFLAGS) $(CXXFLAGS) -MT wallet/libheptafranc_wallet_a-fees.o -MD -MP -MF wallet/$(DEPDIR)/libheptafranc_wallet_a-fees.Tpo -c -o wallet/libheptafranc_wallet_a-fees.o `test -f 'wallet/fees.cpp' || echo '$(srcdir)/'`wallet/fees.cpp
	$(AM_V_at)$(am__mv) wallet/$(DEPDIR)/libheptafranc_wallet_a-fees.Tpo wallet/$(DEPDIR)/libheptafranc_wallet_a-fees.Po
#	$(AM_V_CXX)source='wallet/fees.cpp' object='wallet/libheptafranc_wallet_a-fees.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_wallet_a_CXXFLAGS) $(CXXFLAGS) -c -o wallet/libheptafranc_wallet_a-fees.o `test -f 'wallet/fees.cpp' || echo '$(srcdir)/'`wallet/fees.cpp

wallet/libheptafranc_wallet_a-fees.obj: wallet/fees.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_wallet_a_CXXFLAGS) $(CXXFLAGS) -MT wallet/libheptafranc_wallet_a-fees.obj -MD -MP -MF wallet/$(DEPDIR)/libheptafranc_wallet_a-fees.Tpo -c -o wallet/libheptafranc_wallet_a-fees.obj `if test -f 'wallet/fees.cpp'; then $(CYGPATH_W) 'wallet/fees.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/fees.cpp'; fi`
	$(AM_V_at)$(am__mv) wallet/$(DEPDIR)/libheptafranc_wallet_a-fees.Tpo wallet/$(DEPDIR)/libheptafranc_wallet_a-fees.Po
#	$(AM_V_CXX)source='wallet/fees.cpp' object='wallet/libheptafranc_wallet_a-fees.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_wallet_a_CXXFLAGS) $(CXXFLAGS) -c -o wallet/libheptafranc_wallet_a-fees.obj `if test -f 'wallet/fees.cpp'; then $(CYGPATH_W) 'wallet/fees.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/fees.cpp'; fi`

wallet/libheptafranc_wallet_a-init.o: wallet/init.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_wallet_a_CXXFLAGS) $(CXXFLAGS) -MT wallet/libheptafranc_wallet_a-init.o -MD -MP -MF wallet/$(DEPDIR)/libheptafranc_wallet_a-init.Tpo -c -o wallet/libheptafranc_wallet_a-init.o `test -f 'wallet/init.cpp' || echo '$(srcdir)/'`wallet/init.cpp
	$(AM_V_at)$(am__mv) wallet/$(DEPDIR)/libheptafranc_wallet_a-init.Tpo wallet/$(DEPDIR)/libheptafranc_wallet_a-init.Po
#	$(AM_V_CXX)source='wallet/init.cpp' object='wallet/libheptafranc_wallet_a-init.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_wallet_a_CXXFLAGS) $(CXXFLAGS) -c -o wallet/libheptafranc_wallet_a-init.o `test -f 'wallet/init.cpp' || echo '$(srcdir)/'`wallet/init.cpp

wallet/libheptafranc_wallet_a-init.obj: wallet/init.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_wallet_a_CXXFLAGS) $(CXXFLAGS) -MT wallet/libheptafranc_wallet_a-init.obj -MD -MP -MF wallet/$(DEPDIR)/libheptafranc_wallet_a-init.Tpo -c -o wallet/libheptafranc_wallet_a-init.obj `if test -f 'wallet/init.cpp'; then $(CYGPATH_W) 'wallet/init.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/init.cpp'; fi`
	$(AM_V_at)$(am__mv) wallet/$(DEPDIR)/libheptafranc_wallet_a-init.Tpo wallet/$(DEPDIR)/libheptafranc_wallet_a-init.Po
#	$(AM_V_CXX)source='wallet/init.cpp' object='wallet/libheptafranc_wallet_a-init.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_wallet_a_CXXFLAGS) $(CXXFLAGS) -c -o wallet/libheptafranc_wallet_a-init.obj `if test -f 'wallet/init.cpp'; then $(CYGPATH_W) 'wallet/init.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/init.cpp'; fi`

wallet/libheptafranc_wallet_a-rpcdump.o: wallet/rpcdump.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_wallet_a_CXXFLAGS) $(CXXFLAGS) -MT wallet/libheptafranc_wallet_a-rpcdump.o -MD -MP -MF wallet/$(DEPDIR)/libheptafranc_wallet_a-rpcdump.Tpo -c -o wallet/libheptafranc_wallet_a-rpcdump.o `test -f 'wallet/rpcdump.cpp' || echo '$(srcdir)/'`wallet/rpcdump.cpp
	$(AM_V_at)$(am__mv) wallet/$(DEPDIR)/libheptafranc_wallet_a-rpcdump.Tpo wallet/$(DEPDIR)/libheptafranc_wallet_a-rpcdump.Po
#	$(AM_V_CXX)source='wallet/rpcdump.cpp' object='wallet/libheptafranc_wallet_a-rpcdump.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_wallet_a_CXXFLAGS) $(CXXFLAGS) -c -o wallet/libheptafranc_wallet_a-rpcdump.o `test -f 'wallet/rpcdump.cpp' || echo '$(srcdir)/'`wallet/rpcdump.cpp

wallet/libheptafranc_wallet_a-rpcdump.obj: wallet/rpcdump.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_wallet_a_CXXFLAGS) $(CXXFLAGS) -MT wallet/libheptafranc_wallet_a-rpcdump.obj -MD -MP -MF wallet/$(DEPDIR)/libheptafranc_wallet_a-rpcdump.Tpo -c -o wallet/libheptafranc_wallet_a-rpcdump.obj `if test -f 'wallet/rpcdump.cpp'; then $(CYGPATH_W) 'wallet/rpcdump.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/rpcdump.cpp'; fi`
	$(AM_V_at)$(am__mv) wallet/$(DEPDIR)/libheptafranc_wallet_a-rpcdump.Tpo wallet/$(DEPDIR)/libheptafranc_wallet_a-rpcdump.Po
#	$(AM_V_CXX)source='wallet/rpcdump.cpp' object='wallet/libheptafranc_wallet_a-rpcdump.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_wallet_a_CXXFLAGS) $(CXXFLAGS) -c -o wallet/libheptafranc_wallet_a-rpcdump.obj `if test -f 'wallet/rpcdump.cpp'; then $(CYGPATH_W) 'wallet/rpcdump.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/rpcdump.cpp'; fi`

wallet/libheptafranc_wallet_a-rpcwallet.o: wallet/rpcwallet.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_wallet_a_CXXFLAGS) $(CXXFLAGS) -MT wallet/libheptafranc_wallet_a-rpcwallet.o -MD -MP -MF wallet/$(DEPDIR)/libheptafranc_wallet_a-rpcwallet.Tpo -c -o wallet/libheptafranc_wallet_a-rpcwallet.o `test -f 'wallet/rpcwallet.cpp' || echo '$(srcdir)/'`wallet/rpcwallet.cpp
	$(AM_V_at)$(am__mv) wallet/$(DEPDIR)/libheptafranc_wallet_a-rpcwallet.Tpo wallet/$(DEPDIR)/libheptafranc_wallet_a-rpcwallet.Po
#	$(AM_V_CXX)source='wallet/rpcwallet.cpp' object='wallet/libheptafranc_wallet_a-rpcwallet.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_wallet_a_CXXFLAGS) $(CXXFLAGS) -c -o wallet/libheptafranc_wallet_a-rpcwallet.o `test -f 'wallet/rpcwallet.cpp' || echo '$(srcdir)/'`wallet/rpcwallet.cpp

wallet/libheptafranc_wallet_a-rpcwallet.obj: wallet/rpcwallet.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_wallet_a_CXXFLAGS) $(CXXFLAGS) -MT wallet/libheptafranc_wallet_a-rpcwallet.obj -MD -MP -MF wallet/$(DEPDIR)/libheptafranc_wallet_a-rpcwallet.Tpo -c -o wallet/libheptafranc_wallet_a-rpcwallet.obj `if test -f 'wallet/rpcwallet.cpp'; then $(CYGPATH_W) 'wallet/rpcwallet.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/rpcwallet.cpp'; fi`
	$(AM_V_at)$(am__mv) wallet/$(DEPDIR)/libheptafranc_wallet_a-rpcwallet.Tpo wallet/$(DEPDIR)/libheptafranc_wallet_a-rpcwallet.Po
#	$(AM_V_CXX)source='wallet/rpcwallet.cpp' object='wallet/libheptafranc_wallet_a-rpcwallet.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_wallet_a_CXXFLAGS) $(CXXFLAGS) -c -o wallet/libheptafranc_wallet_a-rpcwallet.obj `if test -f 'wallet/rpcwallet.cpp'; then $(CYGPATH_W) 'wallet/rpcwallet.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/rpcwallet.cpp'; fi`

wallet/libheptafranc_wallet_a-wallet.o: wallet/wallet.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_wallet_a_CXXFLAGS) $(CXXFLAGS) -MT wallet/libheptafranc_wallet_a-wallet.o -MD -MP -MF wallet/$(DEPDIR)/libheptafranc_wallet_a-wallet.Tpo -c -o wallet/libheptafranc_wallet_a-wallet.o `test -f 'wallet/wallet.cpp' || echo '$(srcdir)/'`wallet/wallet.cpp
	$(AM_V_at)$(am__mv) wallet/$(DEPDIR)/libheptafranc_wallet_a-wallet.Tpo wallet/$(DEPDIR)/libheptafranc_wallet_a-wallet.Po
#	$(AM_V_CXX)source='wallet/wallet.cpp' object='wallet/libheptafranc_wallet_a-wallet.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_wallet_a_CXXFLAGS) $(CXXFLAGS) -c -o wallet/libheptafranc_wallet_a-wallet.o `test -f 'wallet/wallet.cpp' || echo '$(srcdir)/'`wallet/wallet.cpp

wallet/libheptafranc_wallet_a-wallet.obj: wallet/wallet.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_wallet_a_CXXFLAGS) $(CXXFLAGS) -MT wallet/libheptafranc_wallet_a-wallet.obj -MD -MP -MF wallet/$(DEPDIR)/libheptafranc_wallet_a-wallet.Tpo -c -o wallet/libheptafranc_wallet_a-wallet.obj `if test -f 'wallet/wallet.cpp'; then $(CYGPATH_W) 'wallet/wallet.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/wallet.cpp'; fi`
	$(AM_V_at)$(am__mv) wallet/$(DEPDIR)/libheptafranc_wallet_a-wallet.Tpo wallet/$(DEPDIR)/libheptafranc_wallet_a-wallet.Po
#	$(AM_V_CXX)source='wallet/wallet.cpp' object='wallet/libheptafranc_wallet_a-wallet.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_wallet_a_CXXFLAGS) $(CXXFLAGS) -c -o wallet/libheptafranc_wallet_a-wallet.obj `if test -f 'wallet/wallet.cpp'; then $(CYGPATH_W) 'wallet/wallet.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/wallet.cpp'; fi`

wallet/libheptafranc_wallet_a-walletdb.o: wallet/walletdb.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_wallet_a_CXXFLAGS) $(CXXFLAGS) -MT wallet/libheptafranc_wallet_a-walletdb.o -MD -MP -MF wallet/$(DEPDIR)/libheptafranc_wallet_a-walletdb.Tpo -c -o wallet/libheptafranc_wallet_a-walletdb.o `test -f 'wallet/walletdb.cpp' || echo '$(srcdir)/'`wallet/walletdb.cpp
	$(AM_V_at)$(am__mv) wallet/$(DEPDIR)/libheptafranc_wallet_a-walletdb.Tpo wallet/$(DEPDIR)/libheptafranc_wallet_a-walletdb.Po
#	$(AM_V_CXX)source='wallet/walletdb.cpp' object='wallet/libheptafranc_wallet_a-walletdb.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_wallet_a_CXXFLAGS) $(CXXFLAGS) -c -o wallet/libheptafranc_wallet_a-walletdb.o `test -f 'wallet/walletdb.cpp' || echo '$(srcdir)/'`wallet/walletdb.cpp

wallet/libheptafranc_wallet_a-walletdb.obj: wallet/walletdb.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_wallet_a_CXXFLAGS) $(CXXFLAGS) -MT wallet/libheptafranc_wallet_a-walletdb.obj -MD -MP -MF wallet/$(DEPDIR)/libheptafranc_wallet_a-walletdb.Tpo -c -o wallet/libheptafranc_wallet_a-walletdb.obj `if test -f 'wallet/walletdb.cpp'; then $(CYGPATH_W) 'wallet/walletdb.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/walletdb.cpp'; fi`
	$(AM_V_at)$(am__mv) wallet/$(DEPDIR)/libheptafranc_wallet_a-walletdb.Tpo wallet/$(DEPDIR)/libheptafranc_wallet_a-walletdb.Po
#	$(AM_V_CXX)source='wallet/walletdb.cpp' object='wallet/libheptafranc_wallet_a-walletdb.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_wallet_a_CXXFLAGS) $(CXXFLAGS) -c -o wallet/libheptafranc_wallet_a-walletdb.obj `if test -f 'wallet/walletdb.cpp'; then $(CYGPATH_W) 'wallet/walletdb.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/walletdb.cpp'; fi`

wallet/libheptafranc_wallet_a-walletutil.o: wallet/walletutil.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_wallet_a_CXXFLAGS) $(CXXFLAGS) -MT wallet/libheptafranc_wallet_a-walletutil.o -MD -MP -MF wallet/$(DEPDIR)/libheptafranc_wallet_a-walletutil.Tpo -c -o wallet/libheptafranc_wallet_a-walletutil.o `test -f 'wallet/walletutil.cpp' || echo '$(srcdir)/'`wallet/walletutil.cpp
	$(AM_V_at)$(am__mv) wallet/$(DEPDIR)/libheptafranc_wallet_a-walletutil.Tpo wallet/$(DEPDIR)/libheptafranc_wallet_a-walletutil.Po
#	$(AM_V_CXX)source='wallet/walletutil.cpp' object='wallet/libheptafranc_wallet_a-walletutil.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_wallet_a_CXXFLAGS) $(CXXFLAGS) -c -o wallet/libheptafranc_wallet_a-walletutil.o `test -f 'wallet/walletutil.cpp' || echo '$(srcdir)/'`wallet/walletutil.cpp

wallet/libheptafranc_wallet_a-walletutil.obj: wallet/walletutil.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_wallet_a_CXXFLAGS) $(CXXFLAGS) -MT wallet/libheptafranc_wallet_a-walletutil.obj -MD -MP -MF wallet/$(DEPDIR)/libheptafranc_wallet_a-walletutil.Tpo -c -o wallet/libheptafranc_wallet_a-walletutil.obj `if test -f 'wallet/walletutil.cpp'; then $(CYGPATH_W) 'wallet/walletutil.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/walletutil.cpp'; fi`
	$(AM_V_at)$(am__mv) wallet/$(DEPDIR)/libheptafranc_wallet_a-walletutil.Tpo wallet/$(DEPDIR)/libheptafranc_wallet_a-walletutil.Po
#	$(AM_V_CXX)source='wallet/walletutil.cpp' object='wallet/libheptafranc_wallet_a-walletutil.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_wallet_a_CXXFLAGS) $(CXXFLAGS) -c -o wallet/libheptafranc_wallet_a-walletutil.obj `if test -f 'wallet/walletutil.cpp'; then $(CYGPATH_W) 'wallet/walletutil.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/walletutil.cpp'; fi`

wallet/libheptafranc_wallet_a-coinselection.o: wallet/coinselection.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_wallet_a_CXXFLAGS) $(CXXFLAGS) -MT wallet/libheptafranc_wallet_a-coinselection.o -MD -MP -MF wallet/$(DEPDIR)/libheptafranc_wallet_a-coinselection.Tpo -c -o wallet/libheptafranc_wallet_a-coinselection.o `test -f 'wallet/coinselection.cpp' || echo '$(srcdir)/'`wallet/coinselection.cpp
	$(AM_V_at)$(am__mv) wallet/$(DEPDIR)/libheptafranc_wallet_a-coinselection.Tpo wallet/$(DEPDIR)/libheptafranc_wallet_a-coinselection.Po
#	$(AM_V_CXX)source='wallet/coinselection.cpp' object='wallet/libheptafranc_wallet_a-coinselection.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_wallet_a_CXXFLAGS) $(CXXFLAGS) -c -o wallet/libheptafranc_wallet_a-coinselection.o `test -f 'wallet/coinselection.cpp' || echo '$(srcdir)/'`wallet/coinselection.cpp

wallet/libheptafranc_wallet_a-coinselection.obj: wallet/coinselection.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_wallet_a_CXXFLAGS) $(CXXFLAGS) -MT wallet/libheptafranc_wallet_a-coinselection.obj -MD -MP -MF wallet/$(DEPDIR)/libheptafranc_wallet_a-coinselection.Tpo -c -o wallet/libheptafranc_wallet_a-coinselection.obj `if test -f 'wallet/coinselection.cpp'; then $(CYGPATH_W) 'wallet/coinselection.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/coinselection.cpp'; fi`
	$(AM_V_at)$(am__mv) wallet/$(DEPDIR)/libheptafranc_wallet_a-coinselection.Tpo wallet/$(DEPDIR)/libheptafranc_wallet_a-coinselection.Po
#	$(AM_V_CXX)source='wallet/coinselection.cpp' object='wallet/libheptafranc_wallet_a-coinselection.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_wallet_a_CXXFLAGS) $(CXXFLAGS) -c -o wallet/libheptafranc_wallet_a-coinselection.obj `if test -f 'wallet/coinselection.cpp'; then $(CYGPATH_W) 'wallet/coinselection.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/coinselection.cpp'; fi`

zmq/libheptafranc_zmq_a-zmqabstractnotifier.o: zmq/zmqabstractnotifier.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_zmq_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_zmq_a_CXXFLAGS) $(CXXFLAGS) -MT zmq/libheptafranc_zmq_a-zmqabstractnotifier.o -MD -MP -MF zmq/$(DEPDIR)/libheptafranc_zmq_a-zmqabstractnotifier.Tpo -c -o zmq/libheptafranc_zmq_a-zmqabstractnotifier.o `test -f 'zmq/zmqabstractnotifier.cpp' || echo '$(srcdir)/'`zmq/zmqabstractnotifier.cpp
	$(AM_V_at)$(am__mv) zmq/$(DEPDIR)/libheptafranc_zmq_a-zmqabstractnotifier.Tpo zmq/$(DEPDIR)/libheptafranc_zmq_a-zmqabstractnotifier.Po
#	$(AM_V_CXX)source='zmq/zmqabstractnotifier.cpp' object='zmq/libheptafranc_zmq_a-zmqabstractnotifier.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_zmq_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_zmq_a_CXXFLAGS) $(CXXFLAGS) -c -o zmq/libheptafranc_zmq_a-zmqabstractnotifier.o `test -f 'zmq/zmqabstractnotifier.cpp' || echo '$(srcdir)/'`zmq/zmqabstractnotifier.cpp

zmq/libheptafranc_zmq_a-zmqabstractnotifier.obj: zmq/zmqabstractnotifier.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_zmq_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_zmq_a_CXXFLAGS) $(CXXFLAGS) -MT zmq/libheptafranc_zmq_a-zmqabstractnotifier.obj -MD -MP -MF zmq/$(DEPDIR)/libheptafranc_zmq_a-zmqabstractnotifier.Tpo -c -o zmq/libheptafranc_zmq_a-zmqabstractnotifier.obj `if test -f 'zmq/zmqabstractnotifier.cpp'; then $(CYGPATH_W) 'zmq/zmqabstractnotifier.cpp'; else $(CYGPATH_W) '$(srcdir)/zmq/zmqabstractnotifier.cpp'; fi`
	$(AM_V_at)$(am__mv) zmq/$(DEPDIR)/libheptafranc_zmq_a-zmqabstractnotifier.Tpo zmq/$(DEPDIR)/libheptafranc_zmq_a-zmqabstractnotifier.Po
#	$(AM_V_CXX)source='zmq/zmqabstractnotifier.cpp' object='zmq/libheptafranc_zmq_a-zmqabstractnotifier.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_zmq_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_zmq_a_CXXFLAGS) $(CXXFLAGS) -c -o zmq/libheptafranc_zmq_a-zmqabstractnotifier.obj `if test -f 'zmq/zmqabstractnotifier.cpp'; then $(CYGPATH_W) 'zmq/zmqabstractnotifier.cpp'; else $(CYGPATH_W) '$(srcdir)/zmq/zmqabstractnotifier.cpp'; fi`

zmq/libheptafranc_zmq_a-zmqnotificationinterface.o: zmq/zmqnotificationinterface.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_zmq_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_zmq_a_CXXFLAGS) $(CXXFLAGS) -MT zmq/libheptafranc_zmq_a-zmqnotificationinterface.o -MD -MP -MF zmq/$(DEPDIR)/libheptafranc_zmq_a-zmqnotificationinterface.Tpo -c -o zmq/libheptafranc_zmq_a-zmqnotificationinterface.o `test -f 'zmq/zmqnotificationinterface.cpp' || echo '$(srcdir)/'`zmq/zmqnotificationinterface.cpp
	$(AM_V_at)$(am__mv) zmq/$(DEPDIR)/libheptafranc_zmq_a-zmqnotificationinterface.Tpo zmq/$(DEPDIR)/libheptafranc_zmq_a-zmqnotificationinterface.Po
#	$(AM_V_CXX)source='zmq/zmqnotificationinterface.cpp' object='zmq/libheptafranc_zmq_a-zmqnotificationinterface.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_zmq_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_zmq_a_CXXFLAGS) $(CXXFLAGS) -c -o zmq/libheptafranc_zmq_a-zmqnotificationinterface.o `test -f 'zmq/zmqnotificationinterface.cpp' || echo '$(srcdir)/'`zmq/zmqnotificationinterface.cpp

zmq/libheptafranc_zmq_a-zmqnotificationinterface.obj: zmq/zmqnotificationinterface.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_zmq_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_zmq_a_CXXFLAGS) $(CXXFLAGS) -MT zmq/libheptafranc_zmq_a-zmqnotificationinterface.obj -MD -MP -MF zmq/$(DEPDIR)/libheptafranc_zmq_a-zmqnotificationinterface.Tpo -c -o zmq/libheptafranc_zmq_a-zmqnotificationinterface.obj `if test -f 'zmq/zmqnotificationinterface.cpp'; then $(CYGPATH_W) 'zmq/zmqnotificationinterface.cpp'; else $(CYGPATH_W) '$(srcdir)/zmq/zmqnotificationinterface.cpp'; fi`
	$(AM_V_at)$(am__mv) zmq/$(DEPDIR)/libheptafranc_zmq_a-zmqnotificationinterface.Tpo zmq/$(DEPDIR)/libheptafranc_zmq_a-zmqnotificationinterface.Po
#	$(AM_V_CXX)source='zmq/zmqnotificationinterface.cpp' object='zmq/libheptafranc_zmq_a-zmqnotificationinterface.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_zmq_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_zmq_a_CXXFLAGS) $(CXXFLAGS) -c -o zmq/libheptafranc_zmq_a-zmqnotificationinterface.obj `if test -f 'zmq/zmqnotificationinterface.cpp'; then $(CYGPATH_W) 'zmq/zmqnotificationinterface.cpp'; else $(CYGPATH_W) '$(srcdir)/zmq/zmqnotificationinterface.cpp'; fi`

zmq/libheptafranc_zmq_a-zmqpublishnotifier.o: zmq/zmqpublishnotifier.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_zmq_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_zmq_a_CXXFLAGS) $(CXXFLAGS) -MT zmq/libheptafranc_zmq_a-zmqpublishnotifier.o -MD -MP -MF zmq/$(DEPDIR)/libheptafranc_zmq_a-zmqpublishnotifier.Tpo -c -o zmq/libheptafranc_zmq_a-zmqpublishnotifier.o `test -f 'zmq/zmqpublishnotifier.cpp' || echo '$(srcdir)/'`zmq/zmqpublishnotifier.cpp
	$(AM_V_at)$(am__mv) zmq/$(DEPDIR)/libheptafranc_zmq_a-zmqpublishnotifier.Tpo zmq/$(DEPDIR)/libheptafranc_zmq_a-zmqpublishnotifier.Po
#	$(AM_V_CXX)source='zmq/zmqpublishnotifier.cpp' object='zmq/libheptafranc_zmq_a-zmqpublishnotifier.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_zmq_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_zmq_a_CXXFLAGS) $(CXXFLAGS) -c -o zmq/libheptafranc_zmq_a-zmqpublishnotifier.o `test -f 'zmq/zmqpublishnotifier.cpp' || echo '$(srcdir)/'`zmq/zmqpublishnotifier.cpp

zmq/libheptafranc_zmq_a-zmqpublishnotifier.obj: zmq/zmqpublishnotifier.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_zmq_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_zmq_a_CXXFLAGS) $(CXXFLAGS) -MT zmq/libheptafranc_zmq_a-zmqpublishnotifier.obj -MD -MP -MF zmq/$(DEPDIR)/libheptafranc_zmq_a-zmqpublishnotifier.Tpo -c -o zmq/libheptafranc_zmq_a-zmqpublishnotifier.obj `if test -f 'zmq/zmqpublishnotifier.cpp'; then $(CYGPATH_W) 'zmq/zmqpublishnotifier.cpp'; else $(CYGPATH_W) '$(srcdir)/zmq/zmqpublishnotifier.cpp'; fi`
	$(AM_V_at)$(am__mv) zmq/$(DEPDIR)/libheptafranc_zmq_a-zmqpublishnotifier.Tpo zmq/$(DEPDIR)/libheptafranc_zmq_a-zmqpublishnotifier.Po
#	$(AM_V_CXX)source='zmq/zmqpublishnotifier.cpp' object='zmq/libheptafranc_zmq_a-zmqpublishnotifier.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_zmq_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_zmq_a_CXXFLAGS) $(CXXFLAGS) -c -o zmq/libheptafranc_zmq_a-zmqpublishnotifier.obj `if test -f 'zmq/zmqpublishnotifier.cpp'; then $(CYGPATH_W) 'zmq/zmqpublishnotifier.cpp'; else $(CYGPATH_W) '$(srcdir)/zmq/zmqpublishnotifier.cpp'; fi`

zmq/libheptafranc_zmq_a-zmqrpc.o: zmq/zmqrpc.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_zmq_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_zmq_a_CXXFLAGS) $(CXXFLAGS) -MT zmq/libheptafranc_zmq_a-zmqrpc.o -MD -MP -MF zmq/$(DEPDIR)/libheptafranc_zmq_a-zmqrpc.Tpo -c -o zmq/libheptafranc_zmq_a-zmqrpc.o `test -f 'zmq/zmqrpc.cpp' || echo '$(srcdir)/'`zmq/zmqrpc.cpp
	$(AM_V_at)$(am__mv) zmq/$(DEPDIR)/libheptafranc_zmq_a-zmqrpc.Tpo zmq/$(DEPDIR)/libheptafranc_zmq_a-zmqrpc.Po
#	$(AM_V_CXX)source='zmq/zmqrpc.cpp' object='zmq/libheptafranc_zmq_a-zmqrpc.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_zmq_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_zmq_a_CXXFLAGS) $(CXXFLAGS) -c -o zmq/libheptafranc_zmq_a-zmqrpc.o `test -f 'zmq/zmqrpc.cpp' || echo '$(srcdir)/'`zmq/zmqrpc.cpp

zmq/libheptafranc_zmq_a-zmqrpc.obj: zmq/zmqrpc.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_zmq_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_zmq_a_CXXFLAGS) $(CXXFLAGS) -MT zmq/libheptafranc_zmq_a-zmqrpc.obj -MD -MP -MF zmq/$(DEPDIR)/libheptafranc_zmq_a-zmqrpc.Tpo -c -o zmq/libheptafranc_zmq_a-zmqrpc.obj `if test -f 'zmq/zmqrpc.cpp'; then $(CYGPATH_W) 'zmq/zmqrpc.cpp'; else $(CYGPATH_W) '$(srcdir)/zmq/zmqrpc.cpp'; fi`
	$(AM_V_at)$(am__mv) zmq/$(DEPDIR)/libheptafranc_zmq_a-zmqrpc.Tpo zmq/$(DEPDIR)/libheptafranc_zmq_a-zmqrpc.Po
#	$(AM_V_CXX)source='zmq/zmqrpc.cpp' object='zmq/libheptafranc_zmq_a-zmqrpc.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafranc_zmq_a_CPPFLAGS) $(CPPFLAGS) $(libheptafranc_zmq_a_CXXFLAGS) $(CXXFLAGS) -c -o zmq/libheptafranc_zmq_a-zmqrpc.obj `if test -f 'zmq/zmqrpc.cpp'; then $(CYGPATH_W) 'zmq/zmqrpc.cpp'; else $(CYGPATH_W) '$(srcdir)/zmq/zmqrpc.cpp'; fi`

qt/qt_libheptafrancqt_a-bantablemodel.o: qt/bantablemodel.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libheptafrancqt_a-bantablemodel.o -MD -MP -MF qt/$(DEPDIR)/qt_libheptafrancqt_a-bantablemodel.Tpo -c -o qt/qt_libheptafrancqt_a-bantablemodel.o `test -f 'qt/bantablemodel.cpp' || echo '$(srcdir)/'`qt/bantablemodel.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libheptafrancqt_a-bantablemodel.Tpo qt/$(DEPDIR)/qt_libheptafrancqt_a-bantablemodel.Po
#	$(AM_V_CXX)source='qt/bantablemodel.cpp' object='qt/qt_libheptafrancqt_a-bantablemodel.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libheptafrancqt_a-bantablemodel.o `test -f 'qt/bantablemodel.cpp' || echo '$(srcdir)/'`qt/bantablemodel.cpp

qt/qt_libheptafrancqt_a-bantablemodel.obj: qt/bantablemodel.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libheptafrancqt_a-bantablemodel.obj -MD -MP -MF qt/$(DEPDIR)/qt_libheptafrancqt_a-bantablemodel.Tpo -c -o qt/qt_libheptafrancqt_a-bantablemodel.obj `if test -f 'qt/bantablemodel.cpp'; then $(CYGPATH_W) 'qt/bantablemodel.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/bantablemodel.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libheptafrancqt_a-bantablemodel.Tpo qt/$(DEPDIR)/qt_libheptafrancqt_a-bantablemodel.Po
#	$(AM_V_CXX)source='qt/bantablemodel.cpp' object='qt/qt_libheptafrancqt_a-bantablemodel.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libheptafrancqt_a-bantablemodel.obj `if test -f 'qt/bantablemodel.cpp'; then $(CYGPATH_W) 'qt/bantablemodel.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/bantablemodel.cpp'; fi`

qt/qt_libheptafrancqt_a-heptafrancaddressvalidator.o: qt/heptafrancaddressvalidator.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libheptafrancqt_a-heptafrancaddressvalidator.o -MD -MP -MF qt/$(DEPDIR)/qt_libheptafrancqt_a-heptafrancaddressvalidator.Tpo -c -o qt/qt_libheptafrancqt_a-heptafrancaddressvalidator.o `test -f 'qt/heptafrancaddressvalidator.cpp' || echo '$(srcdir)/'`qt/heptafrancaddressvalidator.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libheptafrancqt_a-heptafrancaddressvalidator.Tpo qt/$(DEPDIR)/qt_libheptafrancqt_a-heptafrancaddressvalidator.Po
#	$(AM_V_CXX)source='qt/heptafrancaddressvalidator.cpp' object='qt/qt_libheptafrancqt_a-heptafrancaddressvalidator.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libheptafrancqt_a-heptafrancaddressvalidator.o `test -f 'qt/heptafrancaddressvalidator.cpp' || echo '$(srcdir)/'`qt/heptafrancaddressvalidator.cpp

qt/qt_libheptafrancqt_a-heptafrancaddressvalidator.obj: qt/heptafrancaddressvalidator.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libheptafrancqt_a-heptafrancaddressvalidator.obj -MD -MP -MF qt/$(DEPDIR)/qt_libheptafrancqt_a-heptafrancaddressvalidator.Tpo -c -o qt/qt_libheptafrancqt_a-heptafrancaddressvalidator.obj `if test -f 'qt/heptafrancaddressvalidator.cpp'; then $(CYGPATH_W) 'qt/heptafrancaddressvalidator.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/heptafrancaddressvalidator.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libheptafrancqt_a-heptafrancaddressvalidator.Tpo qt/$(DEPDIR)/qt_libheptafrancqt_a-heptafrancaddressvalidator.Po
#	$(AM_V_CXX)source='qt/heptafrancaddressvalidator.cpp' object='qt/qt_libheptafrancqt_a-heptafrancaddressvalidator.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libheptafrancqt_a-heptafrancaddressvalidator.obj `if test -f 'qt/heptafrancaddressvalidator.cpp'; then $(CYGPATH_W) 'qt/heptafrancaddressvalidator.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/heptafrancaddressvalidator.cpp'; fi`

qt/qt_libheptafrancqt_a-heptafrancamountfield.o: qt/heptafrancamountfield.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libheptafrancqt_a-heptafrancamountfield.o -MD -MP -MF qt/$(DEPDIR)/qt_libheptafrancqt_a-heptafrancamountfield.Tpo -c -o qt/qt_libheptafrancqt_a-heptafrancamountfield.o `test -f 'qt/heptafrancamountfield.cpp' || echo '$(srcdir)/'`qt/heptafrancamountfield.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libheptafrancqt_a-heptafrancamountfield.Tpo qt/$(DEPDIR)/qt_libheptafrancqt_a-heptafrancamountfield.Po
#	$(AM_V_CXX)source='qt/heptafrancamountfield.cpp' object='qt/qt_libheptafrancqt_a-heptafrancamountfield.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libheptafrancqt_a-heptafrancamountfield.o `test -f 'qt/heptafrancamountfield.cpp' || echo '$(srcdir)/'`qt/heptafrancamountfield.cpp

qt/qt_libheptafrancqt_a-heptafrancamountfield.obj: qt/heptafrancamountfield.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libheptafrancqt_a-heptafrancamountfield.obj -MD -MP -MF qt/$(DEPDIR)/qt_libheptafrancqt_a-heptafrancamountfield.Tpo -c -o qt/qt_libheptafrancqt_a-heptafrancamountfield.obj `if test -f 'qt/heptafrancamountfield.cpp'; then $(CYGPATH_W) 'qt/heptafrancamountfield.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/heptafrancamountfield.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libheptafrancqt_a-heptafrancamountfield.Tpo qt/$(DEPDIR)/qt_libheptafrancqt_a-heptafrancamountfield.Po
#	$(AM_V_CXX)source='qt/heptafrancamountfield.cpp' object='qt/qt_libheptafrancqt_a-heptafrancamountfield.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libheptafrancqt_a-heptafrancamountfield.obj `if test -f 'qt/heptafrancamountfield.cpp'; then $(CYGPATH_W) 'qt/heptafrancamountfield.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/heptafrancamountfield.cpp'; fi`

qt/qt_libheptafrancqt_a-heptafrancgui.o: qt/heptafrancgui.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libheptafrancqt_a-heptafrancgui.o -MD -MP -MF qt/$(DEPDIR)/qt_libheptafrancqt_a-heptafrancgui.Tpo -c -o qt/qt_libheptafrancqt_a-heptafrancgui.o `test -f 'qt/heptafrancgui.cpp' || echo '$(srcdir)/'`qt/heptafrancgui.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libheptafrancqt_a-heptafrancgui.Tpo qt/$(DEPDIR)/qt_libheptafrancqt_a-heptafrancgui.Po
#	$(AM_V_CXX)source='qt/heptafrancgui.cpp' object='qt/qt_libheptafrancqt_a-heptafrancgui.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libheptafrancqt_a-heptafrancgui.o `test -f 'qt/heptafrancgui.cpp' || echo '$(srcdir)/'`qt/heptafrancgui.cpp

qt/qt_libheptafrancqt_a-heptafrancgui.obj: qt/heptafrancgui.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libheptafrancqt_a-heptafrancgui.obj -MD -MP -MF qt/$(DEPDIR)/qt_libheptafrancqt_a-heptafrancgui.Tpo -c -o qt/qt_libheptafrancqt_a-heptafrancgui.obj `if test -f 'qt/heptafrancgui.cpp'; then $(CYGPATH_W) 'qt/heptafrancgui.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/heptafrancgui.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libheptafrancqt_a-heptafrancgui.Tpo qt/$(DEPDIR)/qt_libheptafrancqt_a-heptafrancgui.Po
#	$(AM_V_CXX)source='qt/heptafrancgui.cpp' object='qt/qt_libheptafrancqt_a-heptafrancgui.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libheptafrancqt_a-heptafrancgui.obj `if test -f 'qt/heptafrancgui.cpp'; then $(CYGPATH_W) 'qt/heptafrancgui.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/heptafrancgui.cpp'; fi`

qt/qt_libheptafrancqt_a-heptafrancunits.o: qt/heptafrancunits.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libheptafrancqt_a-heptafrancunits.o -MD -MP -MF qt/$(DEPDIR)/qt_libheptafrancqt_a-heptafrancunits.Tpo -c -o qt/qt_libheptafrancqt_a-heptafrancunits.o `test -f 'qt/heptafrancunits.cpp' || echo '$(srcdir)/'`qt/heptafrancunits.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libheptafrancqt_a-heptafrancunits.Tpo qt/$(DEPDIR)/qt_libheptafrancqt_a-heptafrancunits.Po
#	$(AM_V_CXX)source='qt/heptafrancunits.cpp' object='qt/qt_libheptafrancqt_a-heptafrancunits.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libheptafrancqt_a-heptafrancunits.o `test -f 'qt/heptafrancunits.cpp' || echo '$(srcdir)/'`qt/heptafrancunits.cpp

qt/qt_libheptafrancqt_a-heptafrancunits.obj: qt/heptafrancunits.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libheptafrancqt_a-heptafrancunits.obj -MD -MP -MF qt/$(DEPDIR)/qt_libheptafrancqt_a-heptafrancunits.Tpo -c -o qt/qt_libheptafrancqt_a-heptafrancunits.obj `if test -f 'qt/heptafrancunits.cpp'; then $(CYGPATH_W) 'qt/heptafrancunits.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/heptafrancunits.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libheptafrancqt_a-heptafrancunits.Tpo qt/$(DEPDIR)/qt_libheptafrancqt_a-heptafrancunits.Po
#	$(AM_V_CXX)source='qt/heptafrancunits.cpp' object='qt/qt_libheptafrancqt_a-heptafrancunits.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libheptafrancqt_a-heptafrancunits.obj `if test -f 'qt/heptafrancunits.cpp'; then $(CYGPATH_W) 'qt/heptafrancunits.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/heptafrancunits.cpp'; fi`

qt/qt_libheptafrancqt_a-clientmodel.o: qt/clientmodel.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libheptafrancqt_a-clientmodel.o -MD -MP -MF qt/$(DEPDIR)/qt_libheptafrancqt_a-clientmodel.Tpo -c -o qt/qt_libheptafrancqt_a-clientmodel.o `test -f 'qt/clientmodel.cpp' || echo '$(srcdir)/'`qt/clientmodel.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libheptafrancqt_a-clientmodel.Tpo qt/$(DEPDIR)/qt_libheptafrancqt_a-clientmodel.Po
#	$(AM_V_CXX)source='qt/clientmodel.cpp' object='qt/qt_libheptafrancqt_a-clientmodel.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libheptafrancqt_a-clientmodel.o `test -f 'qt/clientmodel.cpp' || echo '$(srcdir)/'`qt/clientmodel.cpp

qt/qt_libheptafrancqt_a-clientmodel.obj: qt/clientmodel.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libheptafrancqt_a-clientmodel.obj -MD -MP -MF qt/$(DEPDIR)/qt_libheptafrancqt_a-clientmodel.Tpo -c -o qt/qt_libheptafrancqt_a-clientmodel.obj `if test -f 'qt/clientmodel.cpp'; then $(CYGPATH_W) 'qt/clientmodel.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/clientmodel.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libheptafrancqt_a-clientmodel.Tpo qt/$(DEPDIR)/qt_libheptafrancqt_a-clientmodel.Po
#	$(AM_V_CXX)source='qt/clientmodel.cpp' object='qt/qt_libheptafrancqt_a-clientmodel.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libheptafrancqt_a-clientmodel.obj `if test -f 'qt/clientmodel.cpp'; then $(CYGPATH_W) 'qt/clientmodel.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/clientmodel.cpp'; fi`

qt/qt_libheptafrancqt_a-csvmodelwriter.o: qt/csvmodelwriter.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libheptafrancqt_a-csvmodelwriter.o -MD -MP -MF qt/$(DEPDIR)/qt_libheptafrancqt_a-csvmodelwriter.Tpo -c -o qt/qt_libheptafrancqt_a-csvmodelwriter.o `test -f 'qt/csvmodelwriter.cpp' || echo '$(srcdir)/'`qt/csvmodelwriter.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libheptafrancqt_a-csvmodelwriter.Tpo qt/$(DEPDIR)/qt_libheptafrancqt_a-csvmodelwriter.Po
#	$(AM_V_CXX)source='qt/csvmodelwriter.cpp' object='qt/qt_libheptafrancqt_a-csvmodelwriter.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libheptafrancqt_a-csvmodelwriter.o `test -f 'qt/csvmodelwriter.cpp' || echo '$(srcdir)/'`qt/csvmodelwriter.cpp

qt/qt_libheptafrancqt_a-csvmodelwriter.obj: qt/csvmodelwriter.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libheptafrancqt_a-csvmodelwriter.obj -MD -MP -MF qt/$(DEPDIR)/qt_libheptafrancqt_a-csvmodelwriter.Tpo -c -o qt/qt_libheptafrancqt_a-csvmodelwriter.obj `if test -f 'qt/csvmodelwriter.cpp'; then $(CYGPATH_W) 'qt/csvmodelwriter.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/csvmodelwriter.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libheptafrancqt_a-csvmodelwriter.Tpo qt/$(DEPDIR)/qt_libheptafrancqt_a-csvmodelwriter.Po
#	$(AM_V_CXX)source='qt/csvmodelwriter.cpp' object='qt/qt_libheptafrancqt_a-csvmodelwriter.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libheptafrancqt_a-csvmodelwriter.obj `if test -f 'qt/csvmodelwriter.cpp'; then $(CYGPATH_W) 'qt/csvmodelwriter.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/csvmodelwriter.cpp'; fi`

qt/qt_libheptafrancqt_a-guiutil.o: qt/guiutil.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libheptafrancqt_a-guiutil.o -MD -MP -MF qt/$(DEPDIR)/qt_libheptafrancqt_a-guiutil.Tpo -c -o qt/qt_libheptafrancqt_a-guiutil.o `test -f 'qt/guiutil.cpp' || echo '$(srcdir)/'`qt/guiutil.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libheptafrancqt_a-guiutil.Tpo qt/$(DEPDIR)/qt_libheptafrancqt_a-guiutil.Po
#	$(AM_V_CXX)source='qt/guiutil.cpp' object='qt/qt_libheptafrancqt_a-guiutil.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libheptafrancqt_a-guiutil.o `test -f 'qt/guiutil.cpp' || echo '$(srcdir)/'`qt/guiutil.cpp

qt/qt_libheptafrancqt_a-guiutil.obj: qt/guiutil.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libheptafrancqt_a-guiutil.obj -MD -MP -MF qt/$(DEPDIR)/qt_libheptafrancqt_a-guiutil.Tpo -c -o qt/qt_libheptafrancqt_a-guiutil.obj `if test -f 'qt/guiutil.cpp'; then $(CYGPATH_W) 'qt/guiutil.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/guiutil.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libheptafrancqt_a-guiutil.Tpo qt/$(DEPDIR)/qt_libheptafrancqt_a-guiutil.Po
#	$(AM_V_CXX)source='qt/guiutil.cpp' object='qt/qt_libheptafrancqt_a-guiutil.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libheptafrancqt_a-guiutil.obj `if test -f 'qt/guiutil.cpp'; then $(CYGPATH_W) 'qt/guiutil.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/guiutil.cpp'; fi`

qt/qt_libheptafrancqt_a-intro.o: qt/intro.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libheptafrancqt_a-intro.o -MD -MP -MF qt/$(DEPDIR)/qt_libheptafrancqt_a-intro.Tpo -c -o qt/qt_libheptafrancqt_a-intro.o `test -f 'qt/intro.cpp' || echo '$(srcdir)/'`qt/intro.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libheptafrancqt_a-intro.Tpo qt/$(DEPDIR)/qt_libheptafrancqt_a-intro.Po
#	$(AM_V_CXX)source='qt/intro.cpp' object='qt/qt_libheptafrancqt_a-intro.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libheptafrancqt_a-intro.o `test -f 'qt/intro.cpp' || echo '$(srcdir)/'`qt/intro.cpp

qt/qt_libheptafrancqt_a-intro.obj: qt/intro.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libheptafrancqt_a-intro.obj -MD -MP -MF qt/$(DEPDIR)/qt_libheptafrancqt_a-intro.Tpo -c -o qt/qt_libheptafrancqt_a-intro.obj `if test -f 'qt/intro.cpp'; then $(CYGPATH_W) 'qt/intro.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/intro.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libheptafrancqt_a-intro.Tpo qt/$(DEPDIR)/qt_libheptafrancqt_a-intro.Po
#	$(AM_V_CXX)source='qt/intro.cpp' object='qt/qt_libheptafrancqt_a-intro.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libheptafrancqt_a-intro.obj `if test -f 'qt/intro.cpp'; then $(CYGPATH_W) 'qt/intro.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/intro.cpp'; fi`

qt/qt_libheptafrancqt_a-modaloverlay.o: qt/modaloverlay.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libheptafrancqt_a-modaloverlay.o -MD -MP -MF qt/$(DEPDIR)/qt_libheptafrancqt_a-modaloverlay.Tpo -c -o qt/qt_libheptafrancqt_a-modaloverlay.o `test -f 'qt/modaloverlay.cpp' || echo '$(srcdir)/'`qt/modaloverlay.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libheptafrancqt_a-modaloverlay.Tpo qt/$(DEPDIR)/qt_libheptafrancqt_a-modaloverlay.Po
#	$(AM_V_CXX)source='qt/modaloverlay.cpp' object='qt/qt_libheptafrancqt_a-modaloverlay.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libheptafrancqt_a-modaloverlay.o `test -f 'qt/modaloverlay.cpp' || echo '$(srcdir)/'`qt/modaloverlay.cpp

qt/qt_libheptafrancqt_a-modaloverlay.obj: qt/modaloverlay.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libheptafrancqt_a-modaloverlay.obj -MD -MP -MF qt/$(DEPDIR)/qt_libheptafrancqt_a-modaloverlay.Tpo -c -o qt/qt_libheptafrancqt_a-modaloverlay.obj `if test -f 'qt/modaloverlay.cpp'; then $(CYGPATH_W) 'qt/modaloverlay.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/modaloverlay.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libheptafrancqt_a-modaloverlay.Tpo qt/$(DEPDIR)/qt_libheptafrancqt_a-modaloverlay.Po
#	$(AM_V_CXX)source='qt/modaloverlay.cpp' object='qt/qt_libheptafrancqt_a-modaloverlay.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libheptafrancqt_a-modaloverlay.obj `if test -f 'qt/modaloverlay.cpp'; then $(CYGPATH_W) 'qt/modaloverlay.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/modaloverlay.cpp'; fi`

qt/qt_libheptafrancqt_a-networkstyle.o: qt/networkstyle.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libheptafrancqt_a-networkstyle.o -MD -MP -MF qt/$(DEPDIR)/qt_libheptafrancqt_a-networkstyle.Tpo -c -o qt/qt_libheptafrancqt_a-networkstyle.o `test -f 'qt/networkstyle.cpp' || echo '$(srcdir)/'`qt/networkstyle.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libheptafrancqt_a-networkstyle.Tpo qt/$(DEPDIR)/qt_libheptafrancqt_a-networkstyle.Po
#	$(AM_V_CXX)source='qt/networkstyle.cpp' object='qt/qt_libheptafrancqt_a-networkstyle.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libheptafrancqt_a-networkstyle.o `test -f 'qt/networkstyle.cpp' || echo '$(srcdir)/'`qt/networkstyle.cpp

qt/qt_libheptafrancqt_a-networkstyle.obj: qt/networkstyle.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libheptafrancqt_a-networkstyle.obj -MD -MP -MF qt/$(DEPDIR)/qt_libheptafrancqt_a-networkstyle.Tpo -c -o qt/qt_libheptafrancqt_a-networkstyle.obj `if test -f 'qt/networkstyle.cpp'; then $(CYGPATH_W) 'qt/networkstyle.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/networkstyle.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libheptafrancqt_a-networkstyle.Tpo qt/$(DEPDIR)/qt_libheptafrancqt_a-networkstyle.Po
#	$(AM_V_CXX)source='qt/networkstyle.cpp' object='qt/qt_libheptafrancqt_a-networkstyle.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libheptafrancqt_a-networkstyle.obj `if test -f 'qt/networkstyle.cpp'; then $(CYGPATH_W) 'qt/networkstyle.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/networkstyle.cpp'; fi`

qt/qt_libheptafrancqt_a-notificator.o: qt/notificator.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libheptafrancqt_a-notificator.o -MD -MP -MF qt/$(DEPDIR)/qt_libheptafrancqt_a-notificator.Tpo -c -o qt/qt_libheptafrancqt_a-notificator.o `test -f 'qt/notificator.cpp' || echo '$(srcdir)/'`qt/notificator.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libheptafrancqt_a-notificator.Tpo qt/$(DEPDIR)/qt_libheptafrancqt_a-notificator.Po
#	$(AM_V_CXX)source='qt/notificator.cpp' object='qt/qt_libheptafrancqt_a-notificator.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libheptafrancqt_a-notificator.o `test -f 'qt/notificator.cpp' || echo '$(srcdir)/'`qt/notificator.cpp

qt/qt_libheptafrancqt_a-notificator.obj: qt/notificator.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libheptafrancqt_a-notificator.obj -MD -MP -MF qt/$(DEPDIR)/qt_libheptafrancqt_a-notificator.Tpo -c -o qt/qt_libheptafrancqt_a-notificator.obj `if test -f 'qt/notificator.cpp'; then $(CYGPATH_W) 'qt/notificator.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/notificator.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libheptafrancqt_a-notificator.Tpo qt/$(DEPDIR)/qt_libheptafrancqt_a-notificator.Po
#	$(AM_V_CXX)source='qt/notificator.cpp' object='qt/qt_libheptafrancqt_a-notificator.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libheptafrancqt_a-notificator.obj `if test -f 'qt/notificator.cpp'; then $(CYGPATH_W) 'qt/notificator.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/notificator.cpp'; fi`

qt/qt_libheptafrancqt_a-optionsdialog.o: qt/optionsdialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libheptafrancqt_a-optionsdialog.o -MD -MP -MF qt/$(DEPDIR)/qt_libheptafrancqt_a-optionsdialog.Tpo -c -o qt/qt_libheptafrancqt_a-optionsdialog.o `test -f 'qt/optionsdialog.cpp' || echo '$(srcdir)/'`qt/optionsdialog.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libheptafrancqt_a-optionsdialog.Tpo qt/$(DEPDIR)/qt_libheptafrancqt_a-optionsdialog.Po
#	$(AM_V_CXX)source='qt/optionsdialog.cpp' object='qt/qt_libheptafrancqt_a-optionsdialog.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libheptafrancqt_a-optionsdialog.o `test -f 'qt/optionsdialog.cpp' || echo '$(srcdir)/'`qt/optionsdialog.cpp

qt/qt_libheptafrancqt_a-optionsdialog.obj: qt/optionsdialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libheptafrancqt_a-optionsdialog.obj -MD -MP -MF qt/$(DEPDIR)/qt_libheptafrancqt_a-optionsdialog.Tpo -c -o qt/qt_libheptafrancqt_a-optionsdialog.obj `if test -f 'qt/optionsdialog.cpp'; then $(CYGPATH_W) 'qt/optionsdialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/optionsdialog.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libheptafrancqt_a-optionsdialog.Tpo qt/$(DEPDIR)/qt_libheptafrancqt_a-optionsdialog.Po
#	$(AM_V_CXX)source='qt/optionsdialog.cpp' object='qt/qt_libheptafrancqt_a-optionsdialog.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libheptafrancqt_a-optionsdialog.obj `if test -f 'qt/optionsdialog.cpp'; then $(CYGPATH_W) 'qt/optionsdialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/optionsdialog.cpp'; fi`

qt/qt_libheptafrancqt_a-optionsmodel.o: qt/optionsmodel.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libheptafrancqt_a-optionsmodel.o -MD -MP -MF qt/$(DEPDIR)/qt_libheptafrancqt_a-optionsmodel.Tpo -c -o qt/qt_libheptafrancqt_a-optionsmodel.o `test -f 'qt/optionsmodel.cpp' || echo '$(srcdir)/'`qt/optionsmodel.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libheptafrancqt_a-optionsmodel.Tpo qt/$(DEPDIR)/qt_libheptafrancqt_a-optionsmodel.Po
#	$(AM_V_CXX)source='qt/optionsmodel.cpp' object='qt/qt_libheptafrancqt_a-optionsmodel.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libheptafrancqt_a-optionsmodel.o `test -f 'qt/optionsmodel.cpp' || echo '$(srcdir)/'`qt/optionsmodel.cpp

qt/qt_libheptafrancqt_a-optionsmodel.obj: qt/optionsmodel.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libheptafrancqt_a-optionsmodel.obj -MD -MP -MF qt/$(DEPDIR)/qt_libheptafrancqt_a-optionsmodel.Tpo -c -o qt/qt_libheptafrancqt_a-optionsmodel.obj `if test -f 'qt/optionsmodel.cpp'; then $(CYGPATH_W) 'qt/optionsmodel.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/optionsmodel.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libheptafrancqt_a-optionsmodel.Tpo qt/$(DEPDIR)/qt_libheptafrancqt_a-optionsmodel.Po
#	$(AM_V_CXX)source='qt/optionsmodel.cpp' object='qt/qt_libheptafrancqt_a-optionsmodel.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libheptafrancqt_a-optionsmodel.obj `if test -f 'qt/optionsmodel.cpp'; then $(CYGPATH_W) 'qt/optionsmodel.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/optionsmodel.cpp'; fi`

qt/qt_libheptafrancqt_a-peertablemodel.o: qt/peertablemodel.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libheptafrancqt_a-peertablemodel.o -MD -MP -MF qt/$(DEPDIR)/qt_libheptafrancqt_a-peertablemodel.Tpo -c -o qt/qt_libheptafrancqt_a-peertablemodel.o `test -f 'qt/peertablemodel.cpp' || echo '$(srcdir)/'`qt/peertablemodel.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libheptafrancqt_a-peertablemodel.Tpo qt/$(DEPDIR)/qt_libheptafrancqt_a-peertablemodel.Po
#	$(AM_V_CXX)source='qt/peertablemodel.cpp' object='qt/qt_libheptafrancqt_a-peertablemodel.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libheptafrancqt_a-peertablemodel.o `test -f 'qt/peertablemodel.cpp' || echo '$(srcdir)/'`qt/peertablemodel.cpp

qt/qt_libheptafrancqt_a-peertablemodel.obj: qt/peertablemodel.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libheptafrancqt_a-peertablemodel.obj -MD -MP -MF qt/$(DEPDIR)/qt_libheptafrancqt_a-peertablemodel.Tpo -c -o qt/qt_libheptafrancqt_a-peertablemodel.obj `if test -f 'qt/peertablemodel.cpp'; then $(CYGPATH_W) 'qt/peertablemodel.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/peertablemodel.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libheptafrancqt_a-peertablemodel.Tpo qt/$(DEPDIR)/qt_libheptafrancqt_a-peertablemodel.Po
#	$(AM_V_CXX)source='qt/peertablemodel.cpp' object='qt/qt_libheptafrancqt_a-peertablemodel.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libheptafrancqt_a-peertablemodel.obj `if test -f 'qt/peertablemodel.cpp'; then $(CYGPATH_W) 'qt/peertablemodel.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/peertablemodel.cpp'; fi`

qt/qt_libheptafrancqt_a-platformstyle.o: qt/platformstyle.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libheptafrancqt_a-platformstyle.o -MD -MP -MF qt/$(DEPDIR)/qt_libheptafrancqt_a-platformstyle.Tpo -c -o qt/qt_libheptafrancqt_a-platformstyle.o `test -f 'qt/platformstyle.cpp' || echo '$(srcdir)/'`qt/platformstyle.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libheptafrancqt_a-platformstyle.Tpo qt/$(DEPDIR)/qt_libheptafrancqt_a-platformstyle.Po
#	$(AM_V_CXX)source='qt/platformstyle.cpp' object='qt/qt_libheptafrancqt_a-platformstyle.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libheptafrancqt_a-platformstyle.o `test -f 'qt/platformstyle.cpp' || echo '$(srcdir)/'`qt/platformstyle.cpp

qt/qt_libheptafrancqt_a-platformstyle.obj: qt/platformstyle.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libheptafrancqt_a-platformstyle.obj -MD -MP -MF qt/$(DEPDIR)/qt_libheptafrancqt_a-platformstyle.Tpo -c -o qt/qt_libheptafrancqt_a-platformstyle.obj `if test -f 'qt/platformstyle.cpp'; then $(CYGPATH_W) 'qt/platformstyle.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/platformstyle.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libheptafrancqt_a-platformstyle.Tpo qt/$(DEPDIR)/qt_libheptafrancqt_a-platformstyle.Po
#	$(AM_V_CXX)source='qt/platformstyle.cpp' object='qt/qt_libheptafrancqt_a-platformstyle.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libheptafrancqt_a-platformstyle.obj `if test -f 'qt/platformstyle.cpp'; then $(CYGPATH_W) 'qt/platformstyle.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/platformstyle.cpp'; fi`

qt/qt_libheptafrancqt_a-qvalidatedlineedit.o: qt/qvalidatedlineedit.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libheptafrancqt_a-qvalidatedlineedit.o -MD -MP -MF qt/$(DEPDIR)/qt_libheptafrancqt_a-qvalidatedlineedit.Tpo -c -o qt/qt_libheptafrancqt_a-qvalidatedlineedit.o `test -f 'qt/qvalidatedlineedit.cpp' || echo '$(srcdir)/'`qt/qvalidatedlineedit.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libheptafrancqt_a-qvalidatedlineedit.Tpo qt/$(DEPDIR)/qt_libheptafrancqt_a-qvalidatedlineedit.Po
#	$(AM_V_CXX)source='qt/qvalidatedlineedit.cpp' object='qt/qt_libheptafrancqt_a-qvalidatedlineedit.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libheptafrancqt_a-qvalidatedlineedit.o `test -f 'qt/qvalidatedlineedit.cpp' || echo '$(srcdir)/'`qt/qvalidatedlineedit.cpp

qt/qt_libheptafrancqt_a-qvalidatedlineedit.obj: qt/qvalidatedlineedit.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libheptafrancqt_a-qvalidatedlineedit.obj -MD -MP -MF qt/$(DEPDIR)/qt_libheptafrancqt_a-qvalidatedlineedit.Tpo -c -o qt/qt_libheptafrancqt_a-qvalidatedlineedit.obj `if test -f 'qt/qvalidatedlineedit.cpp'; then $(CYGPATH_W) 'qt/qvalidatedlineedit.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/qvalidatedlineedit.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libheptafrancqt_a-qvalidatedlineedit.Tpo qt/$(DEPDIR)/qt_libheptafrancqt_a-qvalidatedlineedit.Po
#	$(AM_V_CXX)source='qt/qvalidatedlineedit.cpp' object='qt/qt_libheptafrancqt_a-qvalidatedlineedit.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libheptafrancqt_a-qvalidatedlineedit.obj `if test -f 'qt/qvalidatedlineedit.cpp'; then $(CYGPATH_W) 'qt/qvalidatedlineedit.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/qvalidatedlineedit.cpp'; fi`

qt/qt_libheptafrancqt_a-qvaluecombobox.o: qt/qvaluecombobox.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libheptafrancqt_a-qvaluecombobox.o -MD -MP -MF qt/$(DEPDIR)/qt_libheptafrancqt_a-qvaluecombobox.Tpo -c -o qt/qt_libheptafrancqt_a-qvaluecombobox.o `test -f 'qt/qvaluecombobox.cpp' || echo '$(srcdir)/'`qt/qvaluecombobox.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libheptafrancqt_a-qvaluecombobox.Tpo qt/$(DEPDIR)/qt_libheptafrancqt_a-qvaluecombobox.Po
#	$(AM_V_CXX)source='qt/qvaluecombobox.cpp' object='qt/qt_libheptafrancqt_a-qvaluecombobox.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libheptafrancqt_a-qvaluecombobox.o `test -f 'qt/qvaluecombobox.cpp' || echo '$(srcdir)/'`qt/qvaluecombobox.cpp

qt/qt_libheptafrancqt_a-qvaluecombobox.obj: qt/qvaluecombobox.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libheptafrancqt_a-qvaluecombobox.obj -MD -MP -MF qt/$(DEPDIR)/qt_libheptafrancqt_a-qvaluecombobox.Tpo -c -o qt/qt_libheptafrancqt_a-qvaluecombobox.obj `if test -f 'qt/qvaluecombobox.cpp'; then $(CYGPATH_W) 'qt/qvaluecombobox.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/qvaluecombobox.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libheptafrancqt_a-qvaluecombobox.Tpo qt/$(DEPDIR)/qt_libheptafrancqt_a-qvaluecombobox.Po
#	$(AM_V_CXX)source='qt/qvaluecombobox.cpp' object='qt/qt_libheptafrancqt_a-qvaluecombobox.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libheptafrancqt_a-qvaluecombobox.obj `if test -f 'qt/qvaluecombobox.cpp'; then $(CYGPATH_W) 'qt/qvaluecombobox.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/qvaluecombobox.cpp'; fi`

qt/qt_libheptafrancqt_a-rpcconsole.o: qt/rpcconsole.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libheptafrancqt_a-rpcconsole.o -MD -MP -MF qt/$(DEPDIR)/qt_libheptafrancqt_a-rpcconsole.Tpo -c -o qt/qt_libheptafrancqt_a-rpcconsole.o `test -f 'qt/rpcconsole.cpp' || echo '$(srcdir)/'`qt/rpcconsole.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libheptafrancqt_a-rpcconsole.Tpo qt/$(DEPDIR)/qt_libheptafrancqt_a-rpcconsole.Po
#	$(AM_V_CXX)source='qt/rpcconsole.cpp' object='qt/qt_libheptafrancqt_a-rpcconsole.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libheptafrancqt_a-rpcconsole.o `test -f 'qt/rpcconsole.cpp' || echo '$(srcdir)/'`qt/rpcconsole.cpp

qt/qt_libheptafrancqt_a-rpcconsole.obj: qt/rpcconsole.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libheptafrancqt_a-rpcconsole.obj -MD -MP -MF qt/$(DEPDIR)/qt_libheptafrancqt_a-rpcconsole.Tpo -c -o qt/qt_libheptafrancqt_a-rpcconsole.obj `if test -f 'qt/rpcconsole.cpp'; then $(CYGPATH_W) 'qt/rpcconsole.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/rpcconsole.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libheptafrancqt_a-rpcconsole.Tpo qt/$(DEPDIR)/qt_libheptafrancqt_a-rpcconsole.Po
#	$(AM_V_CXX)source='qt/rpcconsole.cpp' object='qt/qt_libheptafrancqt_a-rpcconsole.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libheptafrancqt_a-rpcconsole.obj `if test -f 'qt/rpcconsole.cpp'; then $(CYGPATH_W) 'qt/rpcconsole.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/rpcconsole.cpp'; fi`

qt/qt_libheptafrancqt_a-splashscreen.o: qt/splashscreen.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libheptafrancqt_a-splashscreen.o -MD -MP -MF qt/$(DEPDIR)/qt_libheptafrancqt_a-splashscreen.Tpo -c -o qt/qt_libheptafrancqt_a-splashscreen.o `test -f 'qt/splashscreen.cpp' || echo '$(srcdir)/'`qt/splashscreen.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libheptafrancqt_a-splashscreen.Tpo qt/$(DEPDIR)/qt_libheptafrancqt_a-splashscreen.Po
#	$(AM_V_CXX)source='qt/splashscreen.cpp' object='qt/qt_libheptafrancqt_a-splashscreen.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libheptafrancqt_a-splashscreen.o `test -f 'qt/splashscreen.cpp' || echo '$(srcdir)/'`qt/splashscreen.cpp

qt/qt_libheptafrancqt_a-splashscreen.obj: qt/splashscreen.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libheptafrancqt_a-splashscreen.obj -MD -MP -MF qt/$(DEPDIR)/qt_libheptafrancqt_a-splashscreen.Tpo -c -o qt/qt_libheptafrancqt_a-splashscreen.obj `if test -f 'qt/splashscreen.cpp'; then $(CYGPATH_W) 'qt/splashscreen.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/splashscreen.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libheptafrancqt_a-splashscreen.Tpo qt/$(DEPDIR)/qt_libheptafrancqt_a-splashscreen.Po
#	$(AM_V_CXX)source='qt/splashscreen.cpp' object='qt/qt_libheptafrancqt_a-splashscreen.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libheptafrancqt_a-splashscreen.obj `if test -f 'qt/splashscreen.cpp'; then $(CYGPATH_W) 'qt/splashscreen.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/splashscreen.cpp'; fi`

qt/qt_libheptafrancqt_a-trafficgraphwidget.o: qt/trafficgraphwidget.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libheptafrancqt_a-trafficgraphwidget.o -MD -MP -MF qt/$(DEPDIR)/qt_libheptafrancqt_a-trafficgraphwidget.Tpo -c -o qt/qt_libheptafrancqt_a-trafficgraphwidget.o `test -f 'qt/trafficgraphwidget.cpp' || echo '$(srcdir)/'`qt/trafficgraphwidget.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libheptafrancqt_a-trafficgraphwidget.Tpo qt/$(DEPDIR)/qt_libheptafrancqt_a-trafficgraphwidget.Po
#	$(AM_V_CXX)source='qt/trafficgraphwidget.cpp' object='qt/qt_libheptafrancqt_a-trafficgraphwidget.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libheptafrancqt_a-trafficgraphwidget.o `test -f 'qt/trafficgraphwidget.cpp' || echo '$(srcdir)/'`qt/trafficgraphwidget.cpp

qt/qt_libheptafrancqt_a-trafficgraphwidget.obj: qt/trafficgraphwidget.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libheptafrancqt_a-trafficgraphwidget.obj -MD -MP -MF qt/$(DEPDIR)/qt_libheptafrancqt_a-trafficgraphwidget.Tpo -c -o qt/qt_libheptafrancqt_a-trafficgraphwidget.obj `if test -f 'qt/trafficgraphwidget.cpp'; then $(CYGPATH_W) 'qt/trafficgraphwidget.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/trafficgraphwidget.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libheptafrancqt_a-trafficgraphwidget.Tpo qt/$(DEPDIR)/qt_libheptafrancqt_a-trafficgraphwidget.Po
#	$(AM_V_CXX)source='qt/trafficgraphwidget.cpp' object='qt/qt_libheptafrancqt_a-trafficgraphwidget.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libheptafrancqt_a-trafficgraphwidget.obj `if test -f 'qt/trafficgraphwidget.cpp'; then $(CYGPATH_W) 'qt/trafficgraphwidget.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/trafficgraphwidget.cpp'; fi`

qt/qt_libheptafrancqt_a-utilitydialog.o: qt/utilitydialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libheptafrancqt_a-utilitydialog.o -MD -MP -MF qt/$(DEPDIR)/qt_libheptafrancqt_a-utilitydialog.Tpo -c -o qt/qt_libheptafrancqt_a-utilitydialog.o `test -f 'qt/utilitydialog.cpp' || echo '$(srcdir)/'`qt/utilitydialog.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libheptafrancqt_a-utilitydialog.Tpo qt/$(DEPDIR)/qt_libheptafrancqt_a-utilitydialog.Po
#	$(AM_V_CXX)source='qt/utilitydialog.cpp' object='qt/qt_libheptafrancqt_a-utilitydialog.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libheptafrancqt_a-utilitydialog.o `test -f 'qt/utilitydialog.cpp' || echo '$(srcdir)/'`qt/utilitydialog.cpp

qt/qt_libheptafrancqt_a-utilitydialog.obj: qt/utilitydialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libheptafrancqt_a-utilitydialog.obj -MD -MP -MF qt/$(DEPDIR)/qt_libheptafrancqt_a-utilitydialog.Tpo -c -o qt/qt_libheptafrancqt_a-utilitydialog.obj `if test -f 'qt/utilitydialog.cpp'; then $(CYGPATH_W) 'qt/utilitydialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/utilitydialog.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libheptafrancqt_a-utilitydialog.Tpo qt/$(DEPDIR)/qt_libheptafrancqt_a-utilitydialog.Po
#	$(AM_V_CXX)source='qt/utilitydialog.cpp' object='qt/qt_libheptafrancqt_a-utilitydialog.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libheptafrancqt_a-utilitydialog.obj `if test -f 'qt/utilitydialog.cpp'; then $(CYGPATH_W) 'qt/utilitydialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/utilitydialog.cpp'; fi`

qt/qt_libheptafrancqt_a-winshutdownmonitor.o: qt/winshutdownmonitor.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libheptafrancqt_a-winshutdownmonitor.o -MD -MP -MF qt/$(DEPDIR)/qt_libheptafrancqt_a-winshutdownmonitor.Tpo -c -o qt/qt_libheptafrancqt_a-winshutdownmonitor.o `test -f 'qt/winshutdownmonitor.cpp' || echo '$(srcdir)/'`qt/winshutdownmonitor.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libheptafrancqt_a-winshutdownmonitor.Tpo qt/$(DEPDIR)/qt_libheptafrancqt_a-winshutdownmonitor.Po
#	$(AM_V_CXX)source='qt/winshutdownmonitor.cpp' object='qt/qt_libheptafrancqt_a-winshutdownmonitor.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libheptafrancqt_a-winshutdownmonitor.o `test -f 'qt/winshutdownmonitor.cpp' || echo '$(srcdir)/'`qt/winshutdownmonitor.cpp

qt/qt_libheptafrancqt_a-winshutdownmonitor.obj: qt/winshutdownmonitor.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libheptafrancqt_a-winshutdownmonitor.obj -MD -MP -MF qt/$(DEPDIR)/qt_libheptafrancqt_a-winshutdownmonitor.Tpo -c -o qt/qt_libheptafrancqt_a-winshutdownmonitor.obj `if test -f 'qt/winshutdownmonitor.cpp'; then $(CYGPATH_W) 'qt/winshutdownmonitor.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/winshutdownmonitor.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libheptafrancqt_a-winshutdownmonitor.Tpo qt/$(DEPDIR)/qt_libheptafrancqt_a-winshutdownmonitor.Po
#	$(AM_V_CXX)source='qt/winshutdownmonitor.cpp' object='qt/qt_libheptafrancqt_a-winshutdownmonitor.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libheptafrancqt_a-winshutdownmonitor.obj `if test -f 'qt/winshutdownmonitor.cpp'; then $(CYGPATH_W) 'qt/winshutdownmonitor.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/winshutdownmonitor.cpp'; fi`

qt/qt_libheptafrancqt_a-addressbookpage.o: qt/addressbookpage.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libheptafrancqt_a-addressbookpage.o -MD -MP -MF qt/$(DEPDIR)/qt_libheptafrancqt_a-addressbookpage.Tpo -c -o qt/qt_libheptafrancqt_a-addressbookpage.o `test -f 'qt/addressbookpage.cpp' || echo '$(srcdir)/'`qt/addressbookpage.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libheptafrancqt_a-addressbookpage.Tpo qt/$(DEPDIR)/qt_libheptafrancqt_a-addressbookpage.Po
#	$(AM_V_CXX)source='qt/addressbookpage.cpp' object='qt/qt_libheptafrancqt_a-addressbookpage.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libheptafrancqt_a-addressbookpage.o `test -f 'qt/addressbookpage.cpp' || echo '$(srcdir)/'`qt/addressbookpage.cpp

qt/qt_libheptafrancqt_a-addressbookpage.obj: qt/addressbookpage.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libheptafrancqt_a-addressbookpage.obj -MD -MP -MF qt/$(DEPDIR)/qt_libheptafrancqt_a-addressbookpage.Tpo -c -o qt/qt_libheptafrancqt_a-addressbookpage.obj `if test -f 'qt/addressbookpage.cpp'; then $(CYGPATH_W) 'qt/addressbookpage.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/addressbookpage.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libheptafrancqt_a-addressbookpage.Tpo qt/$(DEPDIR)/qt_libheptafrancqt_a-addressbookpage.Po
#	$(AM_V_CXX)source='qt/addressbookpage.cpp' object='qt/qt_libheptafrancqt_a-addressbookpage.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libheptafrancqt_a-addressbookpage.obj `if test -f 'qt/addressbookpage.cpp'; then $(CYGPATH_W) 'qt/addressbookpage.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/addressbookpage.cpp'; fi`

qt/qt_libheptafrancqt_a-addresstablemodel.o: qt/addresstablemodel.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libheptafrancqt_a-addresstablemodel.o -MD -MP -MF qt/$(DEPDIR)/qt_libheptafrancqt_a-addresstablemodel.Tpo -c -o qt/qt_libheptafrancqt_a-addresstablemodel.o `test -f 'qt/addresstablemodel.cpp' || echo '$(srcdir)/'`qt/addresstablemodel.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libheptafrancqt_a-addresstablemodel.Tpo qt/$(DEPDIR)/qt_libheptafrancqt_a-addresstablemodel.Po
#	$(AM_V_CXX)source='qt/addresstablemodel.cpp' object='qt/qt_libheptafrancqt_a-addresstablemodel.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libheptafrancqt_a-addresstablemodel.o `test -f 'qt/addresstablemodel.cpp' || echo '$(srcdir)/'`qt/addresstablemodel.cpp

qt/qt_libheptafrancqt_a-addresstablemodel.obj: qt/addresstablemodel.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libheptafrancqt_a-addresstablemodel.obj -MD -MP -MF qt/$(DEPDIR)/qt_libheptafrancqt_a-addresstablemodel.Tpo -c -o qt/qt_libheptafrancqt_a-addresstablemodel.obj `if test -f 'qt/addresstablemodel.cpp'; then $(CYGPATH_W) 'qt/addresstablemodel.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/addresstablemodel.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libheptafrancqt_a-addresstablemodel.Tpo qt/$(DEPDIR)/qt_libheptafrancqt_a-addresstablemodel.Po
#	$(AM_V_CXX)source='qt/addresstablemodel.cpp' object='qt/qt_libheptafrancqt_a-addresstablemodel.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libheptafrancqt_a-addresstablemodel.obj `if test -f 'qt/addresstablemodel.cpp'; then $(CYGPATH_W) 'qt/addresstablemodel.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/addresstablemodel.cpp'; fi`

qt/qt_libheptafrancqt_a-askpassphrasedialog.o: qt/askpassphrasedialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libheptafrancqt_a-askpassphrasedialog.o -MD -MP -MF qt/$(DEPDIR)/qt_libheptafrancqt_a-askpassphrasedialog.Tpo -c -o qt/qt_libheptafrancqt_a-askpassphrasedialog.o `test -f 'qt/askpassphrasedialog.cpp' || echo '$(srcdir)/'`qt/askpassphrasedialog.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libheptafrancqt_a-askpassphrasedialog.Tpo qt/$(DEPDIR)/qt_libheptafrancqt_a-askpassphrasedialog.Po
#	$(AM_V_CXX)source='qt/askpassphrasedialog.cpp' object='qt/qt_libheptafrancqt_a-askpassphrasedialog.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libheptafrancqt_a-askpassphrasedialog.o `test -f 'qt/askpassphrasedialog.cpp' || echo '$(srcdir)/'`qt/askpassphrasedialog.cpp

qt/qt_libheptafrancqt_a-askpassphrasedialog.obj: qt/askpassphrasedialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libheptafrancqt_a-askpassphrasedialog.obj -MD -MP -MF qt/$(DEPDIR)/qt_libheptafrancqt_a-askpassphrasedialog.Tpo -c -o qt/qt_libheptafrancqt_a-askpassphrasedialog.obj `if test -f 'qt/askpassphrasedialog.cpp'; then $(CYGPATH_W) 'qt/askpassphrasedialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/askpassphrasedialog.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libheptafrancqt_a-askpassphrasedialog.Tpo qt/$(DEPDIR)/qt_libheptafrancqt_a-askpassphrasedialog.Po
#	$(AM_V_CXX)source='qt/askpassphrasedialog.cpp' object='qt/qt_libheptafrancqt_a-askpassphrasedialog.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libheptafrancqt_a-askpassphrasedialog.obj `if test -f 'qt/askpassphrasedialog.cpp'; then $(CYGPATH_W) 'qt/askpassphrasedialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/askpassphrasedialog.cpp'; fi`

qt/qt_libheptafrancqt_a-coincontroldialog.o: qt/coincontroldialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libheptafrancqt_a-coincontroldialog.o -MD -MP -MF qt/$(DEPDIR)/qt_libheptafrancqt_a-coincontroldialog.Tpo -c -o qt/qt_libheptafrancqt_a-coincontroldialog.o `test -f 'qt/coincontroldialog.cpp' || echo '$(srcdir)/'`qt/coincontroldialog.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libheptafrancqt_a-coincontroldialog.Tpo qt/$(DEPDIR)/qt_libheptafrancqt_a-coincontroldialog.Po
#	$(AM_V_CXX)source='qt/coincontroldialog.cpp' object='qt/qt_libheptafrancqt_a-coincontroldialog.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libheptafrancqt_a-coincontroldialog.o `test -f 'qt/coincontroldialog.cpp' || echo '$(srcdir)/'`qt/coincontroldialog.cpp

qt/qt_libheptafrancqt_a-coincontroldialog.obj: qt/coincontroldialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libheptafrancqt_a-coincontroldialog.obj -MD -MP -MF qt/$(DEPDIR)/qt_libheptafrancqt_a-coincontroldialog.Tpo -c -o qt/qt_libheptafrancqt_a-coincontroldialog.obj `if test -f 'qt/coincontroldialog.cpp'; then $(CYGPATH_W) 'qt/coincontroldialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/coincontroldialog.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libheptafrancqt_a-coincontroldialog.Tpo qt/$(DEPDIR)/qt_libheptafrancqt_a-coincontroldialog.Po
#	$(AM_V_CXX)source='qt/coincontroldialog.cpp' object='qt/qt_libheptafrancqt_a-coincontroldialog.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libheptafrancqt_a-coincontroldialog.obj `if test -f 'qt/coincontroldialog.cpp'; then $(CYGPATH_W) 'qt/coincontroldialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/coincontroldialog.cpp'; fi`

qt/qt_libheptafrancqt_a-coincontroltreewidget.o: qt/coincontroltreewidget.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libheptafrancqt_a-coincontroltreewidget.o -MD -MP -MF qt/$(DEPDIR)/qt_libheptafrancqt_a-coincontroltreewidget.Tpo -c -o qt/qt_libheptafrancqt_a-coincontroltreewidget.o `test -f 'qt/coincontroltreewidget.cpp' || echo '$(srcdir)/'`qt/coincontroltreewidget.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libheptafrancqt_a-coincontroltreewidget.Tpo qt/$(DEPDIR)/qt_libheptafrancqt_a-coincontroltreewidget.Po
#	$(AM_V_CXX)source='qt/coincontroltreewidget.cpp' object='qt/qt_libheptafrancqt_a-coincontroltreewidget.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libheptafrancqt_a-coincontroltreewidget.o `test -f 'qt/coincontroltreewidget.cpp' || echo '$(srcdir)/'`qt/coincontroltreewidget.cpp

qt/qt_libheptafrancqt_a-coincontroltreewidget.obj: qt/coincontroltreewidget.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libheptafrancqt_a-coincontroltreewidget.obj -MD -MP -MF qt/$(DEPDIR)/qt_libheptafrancqt_a-coincontroltreewidget.Tpo -c -o qt/qt_libheptafrancqt_a-coincontroltreewidget.obj `if test -f 'qt/coincontroltreewidget.cpp'; then $(CYGPATH_W) 'qt/coincontroltreewidget.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/coincontroltreewidget.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libheptafrancqt_a-coincontroltreewidget.Tpo qt/$(DEPDIR)/qt_libheptafrancqt_a-coincontroltreewidget.Po
#	$(AM_V_CXX)source='qt/coincontroltreewidget.cpp' object='qt/qt_libheptafrancqt_a-coincontroltreewidget.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libheptafrancqt_a-coincontroltreewidget.obj `if test -f 'qt/coincontroltreewidget.cpp'; then $(CYGPATH_W) 'qt/coincontroltreewidget.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/coincontroltreewidget.cpp'; fi`

qt/qt_libheptafrancqt_a-editaddressdialog.o: qt/editaddressdialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libheptafrancqt_a-editaddressdialog.o -MD -MP -MF qt/$(DEPDIR)/qt_libheptafrancqt_a-editaddressdialog.Tpo -c -o qt/qt_libheptafrancqt_a-editaddressdialog.o `test -f 'qt/editaddressdialog.cpp' || echo '$(srcdir)/'`qt/editaddressdialog.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libheptafrancqt_a-editaddressdialog.Tpo qt/$(DEPDIR)/qt_libheptafrancqt_a-editaddressdialog.Po
#	$(AM_V_CXX)source='qt/editaddressdialog.cpp' object='qt/qt_libheptafrancqt_a-editaddressdialog.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libheptafrancqt_a-editaddressdialog.o `test -f 'qt/editaddressdialog.cpp' || echo '$(srcdir)/'`qt/editaddressdialog.cpp

qt/qt_libheptafrancqt_a-editaddressdialog.obj: qt/editaddressdialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libheptafrancqt_a-editaddressdialog.obj -MD -MP -MF qt/$(DEPDIR)/qt_libheptafrancqt_a-editaddressdialog.Tpo -c -o qt/qt_libheptafrancqt_a-editaddressdialog.obj `if test -f 'qt/editaddressdialog.cpp'; then $(CYGPATH_W) 'qt/editaddressdialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/editaddressdialog.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libheptafrancqt_a-editaddressdialog.Tpo qt/$(DEPDIR)/qt_libheptafrancqt_a-editaddressdialog.Po
#	$(AM_V_CXX)source='qt/editaddressdialog.cpp' object='qt/qt_libheptafrancqt_a-editaddressdialog.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libheptafrancqt_a-editaddressdialog.obj `if test -f 'qt/editaddressdialog.cpp'; then $(CYGPATH_W) 'qt/editaddressdialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/editaddressdialog.cpp'; fi`

qt/qt_libheptafrancqt_a-openuridialog.o: qt/openuridialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libheptafrancqt_a-openuridialog.o -MD -MP -MF qt/$(DEPDIR)/qt_libheptafrancqt_a-openuridialog.Tpo -c -o qt/qt_libheptafrancqt_a-openuridialog.o `test -f 'qt/openuridialog.cpp' || echo '$(srcdir)/'`qt/openuridialog.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libheptafrancqt_a-openuridialog.Tpo qt/$(DEPDIR)/qt_libheptafrancqt_a-openuridialog.Po
#	$(AM_V_CXX)source='qt/openuridialog.cpp' object='qt/qt_libheptafrancqt_a-openuridialog.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libheptafrancqt_a-openuridialog.o `test -f 'qt/openuridialog.cpp' || echo '$(srcdir)/'`qt/openuridialog.cpp

qt/qt_libheptafrancqt_a-openuridialog.obj: qt/openuridialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libheptafrancqt_a-openuridialog.obj -MD -MP -MF qt/$(DEPDIR)/qt_libheptafrancqt_a-openuridialog.Tpo -c -o qt/qt_libheptafrancqt_a-openuridialog.obj `if test -f 'qt/openuridialog.cpp'; then $(CYGPATH_W) 'qt/openuridialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/openuridialog.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libheptafrancqt_a-openuridialog.Tpo qt/$(DEPDIR)/qt_libheptafrancqt_a-openuridialog.Po
#	$(AM_V_CXX)source='qt/openuridialog.cpp' object='qt/qt_libheptafrancqt_a-openuridialog.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libheptafrancqt_a-openuridialog.obj `if test -f 'qt/openuridialog.cpp'; then $(CYGPATH_W) 'qt/openuridialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/openuridialog.cpp'; fi`

qt/qt_libheptafrancqt_a-overviewpage.o: qt/overviewpage.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libheptafrancqt_a-overviewpage.o -MD -MP -MF qt/$(DEPDIR)/qt_libheptafrancqt_a-overviewpage.Tpo -c -o qt/qt_libheptafrancqt_a-overviewpage.o `test -f 'qt/overviewpage.cpp' || echo '$(srcdir)/'`qt/overviewpage.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libheptafrancqt_a-overviewpage.Tpo qt/$(DEPDIR)/qt_libheptafrancqt_a-overviewpage.Po
#	$(AM_V_CXX)source='qt/overviewpage.cpp' object='qt/qt_libheptafrancqt_a-overviewpage.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libheptafrancqt_a-overviewpage.o `test -f 'qt/overviewpage.cpp' || echo '$(srcdir)/'`qt/overviewpage.cpp

qt/qt_libheptafrancqt_a-overviewpage.obj: qt/overviewpage.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libheptafrancqt_a-overviewpage.obj -MD -MP -MF qt/$(DEPDIR)/qt_libheptafrancqt_a-overviewpage.Tpo -c -o qt/qt_libheptafrancqt_a-overviewpage.obj `if test -f 'qt/overviewpage.cpp'; then $(CYGPATH_W) 'qt/overviewpage.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/overviewpage.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libheptafrancqt_a-overviewpage.Tpo qt/$(DEPDIR)/qt_libheptafrancqt_a-overviewpage.Po
#	$(AM_V_CXX)source='qt/overviewpage.cpp' object='qt/qt_libheptafrancqt_a-overviewpage.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libheptafrancqt_a-overviewpage.obj `if test -f 'qt/overviewpage.cpp'; then $(CYGPATH_W) 'qt/overviewpage.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/overviewpage.cpp'; fi`

qt/qt_libheptafrancqt_a-paymentrequestplus.o: qt/paymentrequestplus.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libheptafrancqt_a-paymentrequestplus.o -MD -MP -MF qt/$(DEPDIR)/qt_libheptafrancqt_a-paymentrequestplus.Tpo -c -o qt/qt_libheptafrancqt_a-paymentrequestplus.o `test -f 'qt/paymentrequestplus.cpp' || echo '$(srcdir)/'`qt/paymentrequestplus.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libheptafrancqt_a-paymentrequestplus.Tpo qt/$(DEPDIR)/qt_libheptafrancqt_a-paymentrequestplus.Po
#	$(AM_V_CXX)source='qt/paymentrequestplus.cpp' object='qt/qt_libheptafrancqt_a-paymentrequestplus.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libheptafrancqt_a-paymentrequestplus.o `test -f 'qt/paymentrequestplus.cpp' || echo '$(srcdir)/'`qt/paymentrequestplus.cpp

qt/qt_libheptafrancqt_a-paymentrequestplus.obj: qt/paymentrequestplus.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libheptafrancqt_a-paymentrequestplus.obj -MD -MP -MF qt/$(DEPDIR)/qt_libheptafrancqt_a-paymentrequestplus.Tpo -c -o qt/qt_libheptafrancqt_a-paymentrequestplus.obj `if test -f 'qt/paymentrequestplus.cpp'; then $(CYGPATH_W) 'qt/paymentrequestplus.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/paymentrequestplus.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libheptafrancqt_a-paymentrequestplus.Tpo qt/$(DEPDIR)/qt_libheptafrancqt_a-paymentrequestplus.Po
#	$(AM_V_CXX)source='qt/paymentrequestplus.cpp' object='qt/qt_libheptafrancqt_a-paymentrequestplus.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libheptafrancqt_a-paymentrequestplus.obj `if test -f 'qt/paymentrequestplus.cpp'; then $(CYGPATH_W) 'qt/paymentrequestplus.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/paymentrequestplus.cpp'; fi`

qt/qt_libheptafrancqt_a-paymentserver.o: qt/paymentserver.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libheptafrancqt_a-paymentserver.o -MD -MP -MF qt/$(DEPDIR)/qt_libheptafrancqt_a-paymentserver.Tpo -c -o qt/qt_libheptafrancqt_a-paymentserver.o `test -f 'qt/paymentserver.cpp' || echo '$(srcdir)/'`qt/paymentserver.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libheptafrancqt_a-paymentserver.Tpo qt/$(DEPDIR)/qt_libheptafrancqt_a-paymentserver.Po
#	$(AM_V_CXX)source='qt/paymentserver.cpp' object='qt/qt_libheptafrancqt_a-paymentserver.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libheptafrancqt_a-paymentserver.o `test -f 'qt/paymentserver.cpp' || echo '$(srcdir)/'`qt/paymentserver.cpp

qt/qt_libheptafrancqt_a-paymentserver.obj: qt/paymentserver.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libheptafrancqt_a-paymentserver.obj -MD -MP -MF qt/$(DEPDIR)/qt_libheptafrancqt_a-paymentserver.Tpo -c -o qt/qt_libheptafrancqt_a-paymentserver.obj `if test -f 'qt/paymentserver.cpp'; then $(CYGPATH_W) 'qt/paymentserver.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/paymentserver.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libheptafrancqt_a-paymentserver.Tpo qt/$(DEPDIR)/qt_libheptafrancqt_a-paymentserver.Po
#	$(AM_V_CXX)source='qt/paymentserver.cpp' object='qt/qt_libheptafrancqt_a-paymentserver.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libheptafrancqt_a-paymentserver.obj `if test -f 'qt/paymentserver.cpp'; then $(CYGPATH_W) 'qt/paymentserver.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/paymentserver.cpp'; fi`

qt/qt_libheptafrancqt_a-receivecoinsdialog.o: qt/receivecoinsdialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libheptafrancqt_a-receivecoinsdialog.o -MD -MP -MF qt/$(DEPDIR)/qt_libheptafrancqt_a-receivecoinsdialog.Tpo -c -o qt/qt_libheptafrancqt_a-receivecoinsdialog.o `test -f 'qt/receivecoinsdialog.cpp' || echo '$(srcdir)/'`qt/receivecoinsdialog.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libheptafrancqt_a-receivecoinsdialog.Tpo qt/$(DEPDIR)/qt_libheptafrancqt_a-receivecoinsdialog.Po
#	$(AM_V_CXX)source='qt/receivecoinsdialog.cpp' object='qt/qt_libheptafrancqt_a-receivecoinsdialog.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libheptafrancqt_a-receivecoinsdialog.o `test -f 'qt/receivecoinsdialog.cpp' || echo '$(srcdir)/'`qt/receivecoinsdialog.cpp

qt/qt_libheptafrancqt_a-receivecoinsdialog.obj: qt/receivecoinsdialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libheptafrancqt_a-receivecoinsdialog.obj -MD -MP -MF qt/$(DEPDIR)/qt_libheptafrancqt_a-receivecoinsdialog.Tpo -c -o qt/qt_libheptafrancqt_a-receivecoinsdialog.obj `if test -f 'qt/receivecoinsdialog.cpp'; then $(CYGPATH_W) 'qt/receivecoinsdialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/receivecoinsdialog.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libheptafrancqt_a-receivecoinsdialog.Tpo qt/$(DEPDIR)/qt_libheptafrancqt_a-receivecoinsdialog.Po
#	$(AM_V_CXX)source='qt/receivecoinsdialog.cpp' object='qt/qt_libheptafrancqt_a-receivecoinsdialog.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libheptafrancqt_a-receivecoinsdialog.obj `if test -f 'qt/receivecoinsdialog.cpp'; then $(CYGPATH_W) 'qt/receivecoinsdialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/receivecoinsdialog.cpp'; fi`

qt/qt_libheptafrancqt_a-receiverequestdialog.o: qt/receiverequestdialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libheptafrancqt_a-receiverequestdialog.o -MD -MP -MF qt/$(DEPDIR)/qt_libheptafrancqt_a-receiverequestdialog.Tpo -c -o qt/qt_libheptafrancqt_a-receiverequestdialog.o `test -f 'qt/receiverequestdialog.cpp' || echo '$(srcdir)/'`qt/receiverequestdialog.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libheptafrancqt_a-receiverequestdialog.Tpo qt/$(DEPDIR)/qt_libheptafrancqt_a-receiverequestdialog.Po
#	$(AM_V_CXX)source='qt/receiverequestdialog.cpp' object='qt/qt_libheptafrancqt_a-receiverequestdialog.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libheptafrancqt_a-receiverequestdialog.o `test -f 'qt/receiverequestdialog.cpp' || echo '$(srcdir)/'`qt/receiverequestdialog.cpp

qt/qt_libheptafrancqt_a-receiverequestdialog.obj: qt/receiverequestdialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libheptafrancqt_a-receiverequestdialog.obj -MD -MP -MF qt/$(DEPDIR)/qt_libheptafrancqt_a-receiverequestdialog.Tpo -c -o qt/qt_libheptafrancqt_a-receiverequestdialog.obj `if test -f 'qt/receiverequestdialog.cpp'; then $(CYGPATH_W) 'qt/receiverequestdialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/receiverequestdialog.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libheptafrancqt_a-receiverequestdialog.Tpo qt/$(DEPDIR)/qt_libheptafrancqt_a-receiverequestdialog.Po
#	$(AM_V_CXX)source='qt/receiverequestdialog.cpp' object='qt/qt_libheptafrancqt_a-receiverequestdialog.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libheptafrancqt_a-receiverequestdialog.obj `if test -f 'qt/receiverequestdialog.cpp'; then $(CYGPATH_W) 'qt/receiverequestdialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/receiverequestdialog.cpp'; fi`

qt/qt_libheptafrancqt_a-recentrequeststablemodel.o: qt/recentrequeststablemodel.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libheptafrancqt_a-recentrequeststablemodel.o -MD -MP -MF qt/$(DEPDIR)/qt_libheptafrancqt_a-recentrequeststablemodel.Tpo -c -o qt/qt_libheptafrancqt_a-recentrequeststablemodel.o `test -f 'qt/recentrequeststablemodel.cpp' || echo '$(srcdir)/'`qt/recentrequeststablemodel.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libheptafrancqt_a-recentrequeststablemodel.Tpo qt/$(DEPDIR)/qt_libheptafrancqt_a-recentrequeststablemodel.Po
#	$(AM_V_CXX)source='qt/recentrequeststablemodel.cpp' object='qt/qt_libheptafrancqt_a-recentrequeststablemodel.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libheptafrancqt_a-recentrequeststablemodel.o `test -f 'qt/recentrequeststablemodel.cpp' || echo '$(srcdir)/'`qt/recentrequeststablemodel.cpp

qt/qt_libheptafrancqt_a-recentrequeststablemodel.obj: qt/recentrequeststablemodel.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libheptafrancqt_a-recentrequeststablemodel.obj -MD -MP -MF qt/$(DEPDIR)/qt_libheptafrancqt_a-recentrequeststablemodel.Tpo -c -o qt/qt_libheptafrancqt_a-recentrequeststablemodel.obj `if test -f 'qt/recentrequeststablemodel.cpp'; then $(CYGPATH_W) 'qt/recentrequeststablemodel.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/recentrequeststablemodel.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libheptafrancqt_a-recentrequeststablemodel.Tpo qt/$(DEPDIR)/qt_libheptafrancqt_a-recentrequeststablemodel.Po
#	$(AM_V_CXX)source='qt/recentrequeststablemodel.cpp' object='qt/qt_libheptafrancqt_a-recentrequeststablemodel.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libheptafrancqt_a-recentrequeststablemodel.obj `if test -f 'qt/recentrequeststablemodel.cpp'; then $(CYGPATH_W) 'qt/recentrequeststablemodel.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/recentrequeststablemodel.cpp'; fi`

qt/qt_libheptafrancqt_a-sendcoinsdialog.o: qt/sendcoinsdialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libheptafrancqt_a-sendcoinsdialog.o -MD -MP -MF qt/$(DEPDIR)/qt_libheptafrancqt_a-sendcoinsdialog.Tpo -c -o qt/qt_libheptafrancqt_a-sendcoinsdialog.o `test -f 'qt/sendcoinsdialog.cpp' || echo '$(srcdir)/'`qt/sendcoinsdialog.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libheptafrancqt_a-sendcoinsdialog.Tpo qt/$(DEPDIR)/qt_libheptafrancqt_a-sendcoinsdialog.Po
#	$(AM_V_CXX)source='qt/sendcoinsdialog.cpp' object='qt/qt_libheptafrancqt_a-sendcoinsdialog.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libheptafrancqt_a-sendcoinsdialog.o `test -f 'qt/sendcoinsdialog.cpp' || echo '$(srcdir)/'`qt/sendcoinsdialog.cpp

qt/qt_libheptafrancqt_a-sendcoinsdialog.obj: qt/sendcoinsdialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libheptafrancqt_a-sendcoinsdialog.obj -MD -MP -MF qt/$(DEPDIR)/qt_libheptafrancqt_a-sendcoinsdialog.Tpo -c -o qt/qt_libheptafrancqt_a-sendcoinsdialog.obj `if test -f 'qt/sendcoinsdialog.cpp'; then $(CYGPATH_W) 'qt/sendcoinsdialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/sendcoinsdialog.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libheptafrancqt_a-sendcoinsdialog.Tpo qt/$(DEPDIR)/qt_libheptafrancqt_a-sendcoinsdialog.Po
#	$(AM_V_CXX)source='qt/sendcoinsdialog.cpp' object='qt/qt_libheptafrancqt_a-sendcoinsdialog.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libheptafrancqt_a-sendcoinsdialog.obj `if test -f 'qt/sendcoinsdialog.cpp'; then $(CYGPATH_W) 'qt/sendcoinsdialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/sendcoinsdialog.cpp'; fi`

qt/qt_libheptafrancqt_a-sendcoinsentry.o: qt/sendcoinsentry.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libheptafrancqt_a-sendcoinsentry.o -MD -MP -MF qt/$(DEPDIR)/qt_libheptafrancqt_a-sendcoinsentry.Tpo -c -o qt/qt_libheptafrancqt_a-sendcoinsentry.o `test -f 'qt/sendcoinsentry.cpp' || echo '$(srcdir)/'`qt/sendcoinsentry.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libheptafrancqt_a-sendcoinsentry.Tpo qt/$(DEPDIR)/qt_libheptafrancqt_a-sendcoinsentry.Po
#	$(AM_V_CXX)source='qt/sendcoinsentry.cpp' object='qt/qt_libheptafrancqt_a-sendcoinsentry.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libheptafrancqt_a-sendcoinsentry.o `test -f 'qt/sendcoinsentry.cpp' || echo '$(srcdir)/'`qt/sendcoinsentry.cpp

qt/qt_libheptafrancqt_a-sendcoinsentry.obj: qt/sendcoinsentry.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libheptafrancqt_a-sendcoinsentry.obj -MD -MP -MF qt/$(DEPDIR)/qt_libheptafrancqt_a-sendcoinsentry.Tpo -c -o qt/qt_libheptafrancqt_a-sendcoinsentry.obj `if test -f 'qt/sendcoinsentry.cpp'; then $(CYGPATH_W) 'qt/sendcoinsentry.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/sendcoinsentry.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libheptafrancqt_a-sendcoinsentry.Tpo qt/$(DEPDIR)/qt_libheptafrancqt_a-sendcoinsentry.Po
#	$(AM_V_CXX)source='qt/sendcoinsentry.cpp' object='qt/qt_libheptafrancqt_a-sendcoinsentry.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libheptafrancqt_a-sendcoinsentry.obj `if test -f 'qt/sendcoinsentry.cpp'; then $(CYGPATH_W) 'qt/sendcoinsentry.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/sendcoinsentry.cpp'; fi`

qt/qt_libheptafrancqt_a-signverifymessagedialog.o: qt/signverifymessagedialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libheptafrancqt_a-signverifymessagedialog.o -MD -MP -MF qt/$(DEPDIR)/qt_libheptafrancqt_a-signverifymessagedialog.Tpo -c -o qt/qt_libheptafrancqt_a-signverifymessagedialog.o `test -f 'qt/signverifymessagedialog.cpp' || echo '$(srcdir)/'`qt/signverifymessagedialog.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libheptafrancqt_a-signverifymessagedialog.Tpo qt/$(DEPDIR)/qt_libheptafrancqt_a-signverifymessagedialog.Po
#	$(AM_V_CXX)source='qt/signverifymessagedialog.cpp' object='qt/qt_libheptafrancqt_a-signverifymessagedialog.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libheptafrancqt_a-signverifymessagedialog.o `test -f 'qt/signverifymessagedialog.cpp' || echo '$(srcdir)/'`qt/signverifymessagedialog.cpp

qt/qt_libheptafrancqt_a-signverifymessagedialog.obj: qt/signverifymessagedialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libheptafrancqt_a-signverifymessagedialog.obj -MD -MP -MF qt/$(DEPDIR)/qt_libheptafrancqt_a-signverifymessagedialog.Tpo -c -o qt/qt_libheptafrancqt_a-signverifymessagedialog.obj `if test -f 'qt/signverifymessagedialog.cpp'; then $(CYGPATH_W) 'qt/signverifymessagedialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/signverifymessagedialog.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libheptafrancqt_a-signverifymessagedialog.Tpo qt/$(DEPDIR)/qt_libheptafrancqt_a-signverifymessagedialog.Po
#	$(AM_V_CXX)source='qt/signverifymessagedialog.cpp' object='qt/qt_libheptafrancqt_a-signverifymessagedialog.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libheptafrancqt_a-signverifymessagedialog.obj `if test -f 'qt/signverifymessagedialog.cpp'; then $(CYGPATH_W) 'qt/signverifymessagedialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/signverifymessagedialog.cpp'; fi`

qt/qt_libheptafrancqt_a-transactiondesc.o: qt/transactiondesc.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libheptafrancqt_a-transactiondesc.o -MD -MP -MF qt/$(DEPDIR)/qt_libheptafrancqt_a-transactiondesc.Tpo -c -o qt/qt_libheptafrancqt_a-transactiondesc.o `test -f 'qt/transactiondesc.cpp' || echo '$(srcdir)/'`qt/transactiondesc.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libheptafrancqt_a-transactiondesc.Tpo qt/$(DEPDIR)/qt_libheptafrancqt_a-transactiondesc.Po
#	$(AM_V_CXX)source='qt/transactiondesc.cpp' object='qt/qt_libheptafrancqt_a-transactiondesc.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libheptafrancqt_a-transactiondesc.o `test -f 'qt/transactiondesc.cpp' || echo '$(srcdir)/'`qt/transactiondesc.cpp

qt/qt_libheptafrancqt_a-transactiondesc.obj: qt/transactiondesc.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libheptafrancqt_a-transactiondesc.obj -MD -MP -MF qt/$(DEPDIR)/qt_libheptafrancqt_a-transactiondesc.Tpo -c -o qt/qt_libheptafrancqt_a-transactiondesc.obj `if test -f 'qt/transactiondesc.cpp'; then $(CYGPATH_W) 'qt/transactiondesc.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/transactiondesc.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libheptafrancqt_a-transactiondesc.Tpo qt/$(DEPDIR)/qt_libheptafrancqt_a-transactiondesc.Po
#	$(AM_V_CXX)source='qt/transactiondesc.cpp' object='qt/qt_libheptafrancqt_a-transactiondesc.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libheptafrancqt_a-transactiondesc.obj `if test -f 'qt/transactiondesc.cpp'; then $(CYGPATH_W) 'qt/transactiondesc.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/transactiondesc.cpp'; fi`

qt/qt_libheptafrancqt_a-transactiondescdialog.o: qt/transactiondescdialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libheptafrancqt_a-transactiondescdialog.o -MD -MP -MF qt/$(DEPDIR)/qt_libheptafrancqt_a-transactiondescdialog.Tpo -c -o qt/qt_libheptafrancqt_a-transactiondescdialog.o `test -f 'qt/transactiondescdialog.cpp' || echo '$(srcdir)/'`qt/transactiondescdialog.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libheptafrancqt_a-transactiondescdialog.Tpo qt/$(DEPDIR)/qt_libheptafrancqt_a-transactiondescdialog.Po
#	$(AM_V_CXX)source='qt/transactiondescdialog.cpp' object='qt/qt_libheptafrancqt_a-transactiondescdialog.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libheptafrancqt_a-transactiondescdialog.o `test -f 'qt/transactiondescdialog.cpp' || echo '$(srcdir)/'`qt/transactiondescdialog.cpp

qt/qt_libheptafrancqt_a-transactiondescdialog.obj: qt/transactiondescdialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libheptafrancqt_a-transactiondescdialog.obj -MD -MP -MF qt/$(DEPDIR)/qt_libheptafrancqt_a-transactiondescdialog.Tpo -c -o qt/qt_libheptafrancqt_a-transactiondescdialog.obj `if test -f 'qt/transactiondescdialog.cpp'; then $(CYGPATH_W) 'qt/transactiondescdialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/transactiondescdialog.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libheptafrancqt_a-transactiondescdialog.Tpo qt/$(DEPDIR)/qt_libheptafrancqt_a-transactiondescdialog.Po
#	$(AM_V_CXX)source='qt/transactiondescdialog.cpp' object='qt/qt_libheptafrancqt_a-transactiondescdialog.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libheptafrancqt_a-transactiondescdialog.obj `if test -f 'qt/transactiondescdialog.cpp'; then $(CYGPATH_W) 'qt/transactiondescdialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/transactiondescdialog.cpp'; fi`

qt/qt_libheptafrancqt_a-transactionfilterproxy.o: qt/transactionfilterproxy.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libheptafrancqt_a-transactionfilterproxy.o -MD -MP -MF qt/$(DEPDIR)/qt_libheptafrancqt_a-transactionfilterproxy.Tpo -c -o qt/qt_libheptafrancqt_a-transactionfilterproxy.o `test -f 'qt/transactionfilterproxy.cpp' || echo '$(srcdir)/'`qt/transactionfilterproxy.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libheptafrancqt_a-transactionfilterproxy.Tpo qt/$(DEPDIR)/qt_libheptafrancqt_a-transactionfilterproxy.Po
#	$(AM_V_CXX)source='qt/transactionfilterproxy.cpp' object='qt/qt_libheptafrancqt_a-transactionfilterproxy.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libheptafrancqt_a-transactionfilterproxy.o `test -f 'qt/transactionfilterproxy.cpp' || echo '$(srcdir)/'`qt/transactionfilterproxy.cpp

qt/qt_libheptafrancqt_a-transactionfilterproxy.obj: qt/transactionfilterproxy.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libheptafrancqt_a-transactionfilterproxy.obj -MD -MP -MF qt/$(DEPDIR)/qt_libheptafrancqt_a-transactionfilterproxy.Tpo -c -o qt/qt_libheptafrancqt_a-transactionfilterproxy.obj `if test -f 'qt/transactionfilterproxy.cpp'; then $(CYGPATH_W) 'qt/transactionfilterproxy.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/transactionfilterproxy.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libheptafrancqt_a-transactionfilterproxy.Tpo qt/$(DEPDIR)/qt_libheptafrancqt_a-transactionfilterproxy.Po
#	$(AM_V_CXX)source='qt/transactionfilterproxy.cpp' object='qt/qt_libheptafrancqt_a-transactionfilterproxy.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libheptafrancqt_a-transactionfilterproxy.obj `if test -f 'qt/transactionfilterproxy.cpp'; then $(CYGPATH_W) 'qt/transactionfilterproxy.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/transactionfilterproxy.cpp'; fi`

qt/qt_libheptafrancqt_a-transactionrecord.o: qt/transactionrecord.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libheptafrancqt_a-transactionrecord.o -MD -MP -MF qt/$(DEPDIR)/qt_libheptafrancqt_a-transactionrecord.Tpo -c -o qt/qt_libheptafrancqt_a-transactionrecord.o `test -f 'qt/transactionrecord.cpp' || echo '$(srcdir)/'`qt/transactionrecord.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libheptafrancqt_a-transactionrecord.Tpo qt/$(DEPDIR)/qt_libheptafrancqt_a-transactionrecord.Po
#	$(AM_V_CXX)source='qt/transactionrecord.cpp' object='qt/qt_libheptafrancqt_a-transactionrecord.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libheptafrancqt_a-transactionrecord.o `test -f 'qt/transactionrecord.cpp' || echo '$(srcdir)/'`qt/transactionrecord.cpp

qt/qt_libheptafrancqt_a-transactionrecord.obj: qt/transactionrecord.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libheptafrancqt_a-transactionrecord.obj -MD -MP -MF qt/$(DEPDIR)/qt_libheptafrancqt_a-transactionrecord.Tpo -c -o qt/qt_libheptafrancqt_a-transactionrecord.obj `if test -f 'qt/transactionrecord.cpp'; then $(CYGPATH_W) 'qt/transactionrecord.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/transactionrecord.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libheptafrancqt_a-transactionrecord.Tpo qt/$(DEPDIR)/qt_libheptafrancqt_a-transactionrecord.Po
#	$(AM_V_CXX)source='qt/transactionrecord.cpp' object='qt/qt_libheptafrancqt_a-transactionrecord.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libheptafrancqt_a-transactionrecord.obj `if test -f 'qt/transactionrecord.cpp'; then $(CYGPATH_W) 'qt/transactionrecord.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/transactionrecord.cpp'; fi`

qt/qt_libheptafrancqt_a-transactiontablemodel.o: qt/transactiontablemodel.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libheptafrancqt_a-transactiontablemodel.o -MD -MP -MF qt/$(DEPDIR)/qt_libheptafrancqt_a-transactiontablemodel.Tpo -c -o qt/qt_libheptafrancqt_a-transactiontablemodel.o `test -f 'qt/transactiontablemodel.cpp' || echo '$(srcdir)/'`qt/transactiontablemodel.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libheptafrancqt_a-transactiontablemodel.Tpo qt/$(DEPDIR)/qt_libheptafrancqt_a-transactiontablemodel.Po
#	$(AM_V_CXX)source='qt/transactiontablemodel.cpp' object='qt/qt_libheptafrancqt_a-transactiontablemodel.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libheptafrancqt_a-transactiontablemodel.o `test -f 'qt/transactiontablemodel.cpp' || echo '$(srcdir)/'`qt/transactiontablemodel.cpp

qt/qt_libheptafrancqt_a-transactiontablemodel.obj: qt/transactiontablemodel.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libheptafrancqt_a-transactiontablemodel.obj -MD -MP -MF qt/$(DEPDIR)/qt_libheptafrancqt_a-transactiontablemodel.Tpo -c -o qt/qt_libheptafrancqt_a-transactiontablemodel.obj `if test -f 'qt/transactiontablemodel.cpp'; then $(CYGPATH_W) 'qt/transactiontablemodel.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/transactiontablemodel.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libheptafrancqt_a-transactiontablemodel.Tpo qt/$(DEPDIR)/qt_libheptafrancqt_a-transactiontablemodel.Po
#	$(AM_V_CXX)source='qt/transactiontablemodel.cpp' object='qt/qt_libheptafrancqt_a-transactiontablemodel.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libheptafrancqt_a-transactiontablemodel.obj `if test -f 'qt/transactiontablemodel.cpp'; then $(CYGPATH_W) 'qt/transactiontablemodel.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/transactiontablemodel.cpp'; fi`

qt/qt_libheptafrancqt_a-transactionview.o: qt/transactionview.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libheptafrancqt_a-transactionview.o -MD -MP -MF qt/$(DEPDIR)/qt_libheptafrancqt_a-transactionview.Tpo -c -o qt/qt_libheptafrancqt_a-transactionview.o `test -f 'qt/transactionview.cpp' || echo '$(srcdir)/'`qt/transactionview.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libheptafrancqt_a-transactionview.Tpo qt/$(DEPDIR)/qt_libheptafrancqt_a-transactionview.Po
#	$(AM_V_CXX)source='qt/transactionview.cpp' object='qt/qt_libheptafrancqt_a-transactionview.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libheptafrancqt_a-transactionview.o `test -f 'qt/transactionview.cpp' || echo '$(srcdir)/'`qt/transactionview.cpp

qt/qt_libheptafrancqt_a-transactionview.obj: qt/transactionview.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libheptafrancqt_a-transactionview.obj -MD -MP -MF qt/$(DEPDIR)/qt_libheptafrancqt_a-transactionview.Tpo -c -o qt/qt_libheptafrancqt_a-transactionview.obj `if test -f 'qt/transactionview.cpp'; then $(CYGPATH_W) 'qt/transactionview.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/transactionview.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libheptafrancqt_a-transactionview.Tpo qt/$(DEPDIR)/qt_libheptafrancqt_a-transactionview.Po
#	$(AM_V_CXX)source='qt/transactionview.cpp' object='qt/qt_libheptafrancqt_a-transactionview.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libheptafrancqt_a-transactionview.obj `if test -f 'qt/transactionview.cpp'; then $(CYGPATH_W) 'qt/transactionview.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/transactionview.cpp'; fi`

qt/qt_libheptafrancqt_a-walletframe.o: qt/walletframe.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libheptafrancqt_a-walletframe.o -MD -MP -MF qt/$(DEPDIR)/qt_libheptafrancqt_a-walletframe.Tpo -c -o qt/qt_libheptafrancqt_a-walletframe.o `test -f 'qt/walletframe.cpp' || echo '$(srcdir)/'`qt/walletframe.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libheptafrancqt_a-walletframe.Tpo qt/$(DEPDIR)/qt_libheptafrancqt_a-walletframe.Po
#	$(AM_V_CXX)source='qt/walletframe.cpp' object='qt/qt_libheptafrancqt_a-walletframe.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libheptafrancqt_a-walletframe.o `test -f 'qt/walletframe.cpp' || echo '$(srcdir)/'`qt/walletframe.cpp

qt/qt_libheptafrancqt_a-walletframe.obj: qt/walletframe.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libheptafrancqt_a-walletframe.obj -MD -MP -MF qt/$(DEPDIR)/qt_libheptafrancqt_a-walletframe.Tpo -c -o qt/qt_libheptafrancqt_a-walletframe.obj `if test -f 'qt/walletframe.cpp'; then $(CYGPATH_W) 'qt/walletframe.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/walletframe.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libheptafrancqt_a-walletframe.Tpo qt/$(DEPDIR)/qt_libheptafrancqt_a-walletframe.Po
#	$(AM_V_CXX)source='qt/walletframe.cpp' object='qt/qt_libheptafrancqt_a-walletframe.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libheptafrancqt_a-walletframe.obj `if test -f 'qt/walletframe.cpp'; then $(CYGPATH_W) 'qt/walletframe.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/walletframe.cpp'; fi`

qt/qt_libheptafrancqt_a-walletmodel.o: qt/walletmodel.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libheptafrancqt_a-walletmodel.o -MD -MP -MF qt/$(DEPDIR)/qt_libheptafrancqt_a-walletmodel.Tpo -c -o qt/qt_libheptafrancqt_a-walletmodel.o `test -f 'qt/walletmodel.cpp' || echo '$(srcdir)/'`qt/walletmodel.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libheptafrancqt_a-walletmodel.Tpo qt/$(DEPDIR)/qt_libheptafrancqt_a-walletmodel.Po
#	$(AM_V_CXX)source='qt/walletmodel.cpp' object='qt/qt_libheptafrancqt_a-walletmodel.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libheptafrancqt_a-walletmodel.o `test -f 'qt/walletmodel.cpp' || echo '$(srcdir)/'`qt/walletmodel.cpp

qt/qt_libheptafrancqt_a-walletmodel.obj: qt/walletmodel.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libheptafrancqt_a-walletmodel.obj -MD -MP -MF qt/$(DEPDIR)/qt_libheptafrancqt_a-walletmodel.Tpo -c -o qt/qt_libheptafrancqt_a-walletmodel.obj `if test -f 'qt/walletmodel.cpp'; then $(CYGPATH_W) 'qt/walletmodel.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/walletmodel.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libheptafrancqt_a-walletmodel.Tpo qt/$(DEPDIR)/qt_libheptafrancqt_a-walletmodel.Po
#	$(AM_V_CXX)source='qt/walletmodel.cpp' object='qt/qt_libheptafrancqt_a-walletmodel.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libheptafrancqt_a-walletmodel.obj `if test -f 'qt/walletmodel.cpp'; then $(CYGPATH_W) 'qt/walletmodel.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/walletmodel.cpp'; fi`

qt/qt_libheptafrancqt_a-walletmodeltransaction.o: qt/walletmodeltransaction.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libheptafrancqt_a-walletmodeltransaction.o -MD -MP -MF qt/$(DEPDIR)/qt_libheptafrancqt_a-walletmodeltransaction.Tpo -c -o qt/qt_libheptafrancqt_a-walletmodeltransaction.o `test -f 'qt/walletmodeltransaction.cpp' || echo '$(srcdir)/'`qt/walletmodeltransaction.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libheptafrancqt_a-walletmodeltransaction.Tpo qt/$(DEPDIR)/qt_libheptafrancqt_a-walletmodeltransaction.Po
#	$(AM_V_CXX)source='qt/walletmodeltransaction.cpp' object='qt/qt_libheptafrancqt_a-walletmodeltransaction.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libheptafrancqt_a-walletmodeltransaction.o `test -f 'qt/walletmodeltransaction.cpp' || echo '$(srcdir)/'`qt/walletmodeltransaction.cpp

qt/qt_libheptafrancqt_a-walletmodeltransaction.obj: qt/walletmodeltransaction.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libheptafrancqt_a-walletmodeltransaction.obj -MD -MP -MF qt/$(DEPDIR)/qt_libheptafrancqt_a-walletmodeltransaction.Tpo -c -o qt/qt_libheptafrancqt_a-walletmodeltransaction.obj `if test -f 'qt/walletmodeltransaction.cpp'; then $(CYGPATH_W) 'qt/walletmodeltransaction.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/walletmodeltransaction.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libheptafrancqt_a-walletmodeltransaction.Tpo qt/$(DEPDIR)/qt_libheptafrancqt_a-walletmodeltransaction.Po
#	$(AM_V_CXX)source='qt/walletmodeltransaction.cpp' object='qt/qt_libheptafrancqt_a-walletmodeltransaction.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libheptafrancqt_a-walletmodeltransaction.obj `if test -f 'qt/walletmodeltransaction.cpp'; then $(CYGPATH_W) 'qt/walletmodeltransaction.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/walletmodeltransaction.cpp'; fi`

qt/qt_libheptafrancqt_a-walletview.o: qt/walletview.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libheptafrancqt_a-walletview.o -MD -MP -MF qt/$(DEPDIR)/qt_libheptafrancqt_a-walletview.Tpo -c -o qt/qt_libheptafrancqt_a-walletview.o `test -f 'qt/walletview.cpp' || echo '$(srcdir)/'`qt/walletview.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libheptafrancqt_a-walletview.Tpo qt/$(DEPDIR)/qt_libheptafrancqt_a-walletview.Po
#	$(AM_V_CXX)source='qt/walletview.cpp' object='qt/qt_libheptafrancqt_a-walletview.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libheptafrancqt_a-walletview.o `test -f 'qt/walletview.cpp' || echo '$(srcdir)/'`qt/walletview.cpp

qt/qt_libheptafrancqt_a-walletview.obj: qt/walletview.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libheptafrancqt_a-walletview.obj -MD -MP -MF qt/$(DEPDIR)/qt_libheptafrancqt_a-walletview.Tpo -c -o qt/qt_libheptafrancqt_a-walletview.obj `if test -f 'qt/walletview.cpp'; then $(CYGPATH_W) 'qt/walletview.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/walletview.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libheptafrancqt_a-walletview.Tpo qt/$(DEPDIR)/qt_libheptafrancqt_a-walletview.Po
#	$(AM_V_CXX)source='qt/walletview.cpp' object='qt/qt_libheptafrancqt_a-walletview.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libheptafrancqt_a-walletview.obj `if test -f 'qt/walletview.cpp'; then $(CYGPATH_W) 'qt/walletview.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/walletview.cpp'; fi`

qt/qt_libheptafrancqt_a-moc_addressbookpage.o: qt/moc_addressbookpage.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libheptafrancqt_a-moc_addressbookpage.o -MD -MP -MF qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_addressbookpage.Tpo -c -o qt/qt_libheptafrancqt_a-moc_addressbookpage.o `test -f 'qt/moc_addressbookpage.cpp' || echo '$(srcdir)/'`qt/moc_addressbookpage.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_addressbookpage.Tpo qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_addressbookpage.Po
#	$(AM_V_CXX)source='qt/moc_addressbookpage.cpp' object='qt/qt_libheptafrancqt_a-moc_addressbookpage.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libheptafrancqt_a-moc_addressbookpage.o `test -f 'qt/moc_addressbookpage.cpp' || echo '$(srcdir)/'`qt/moc_addressbookpage.cpp

qt/qt_libheptafrancqt_a-moc_addressbookpage.obj: qt/moc_addressbookpage.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libheptafrancqt_a-moc_addressbookpage.obj -MD -MP -MF qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_addressbookpage.Tpo -c -o qt/qt_libheptafrancqt_a-moc_addressbookpage.obj `if test -f 'qt/moc_addressbookpage.cpp'; then $(CYGPATH_W) 'qt/moc_addressbookpage.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_addressbookpage.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_addressbookpage.Tpo qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_addressbookpage.Po
#	$(AM_V_CXX)source='qt/moc_addressbookpage.cpp' object='qt/qt_libheptafrancqt_a-moc_addressbookpage.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libheptafrancqt_a-moc_addressbookpage.obj `if test -f 'qt/moc_addressbookpage.cpp'; then $(CYGPATH_W) 'qt/moc_addressbookpage.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_addressbookpage.cpp'; fi`

qt/qt_libheptafrancqt_a-moc_addresstablemodel.o: qt/moc_addresstablemodel.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libheptafrancqt_a-moc_addresstablemodel.o -MD -MP -MF qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_addresstablemodel.Tpo -c -o qt/qt_libheptafrancqt_a-moc_addresstablemodel.o `test -f 'qt/moc_addresstablemodel.cpp' || echo '$(srcdir)/'`qt/moc_addresstablemodel.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_addresstablemodel.Tpo qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_addresstablemodel.Po
#	$(AM_V_CXX)source='qt/moc_addresstablemodel.cpp' object='qt/qt_libheptafrancqt_a-moc_addresstablemodel.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libheptafrancqt_a-moc_addresstablemodel.o `test -f 'qt/moc_addresstablemodel.cpp' || echo '$(srcdir)/'`qt/moc_addresstablemodel.cpp

qt/qt_libheptafrancqt_a-moc_addresstablemodel.obj: qt/moc_addresstablemodel.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libheptafrancqt_a-moc_addresstablemodel.obj -MD -MP -MF qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_addresstablemodel.Tpo -c -o qt/qt_libheptafrancqt_a-moc_addresstablemodel.obj `if test -f 'qt/moc_addresstablemodel.cpp'; then $(CYGPATH_W) 'qt/moc_addresstablemodel.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_addresstablemodel.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_addresstablemodel.Tpo qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_addresstablemodel.Po
#	$(AM_V_CXX)source='qt/moc_addresstablemodel.cpp' object='qt/qt_libheptafrancqt_a-moc_addresstablemodel.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libheptafrancqt_a-moc_addresstablemodel.obj `if test -f 'qt/moc_addresstablemodel.cpp'; then $(CYGPATH_W) 'qt/moc_addresstablemodel.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_addresstablemodel.cpp'; fi`

qt/qt_libheptafrancqt_a-moc_askpassphrasedialog.o: qt/moc_askpassphrasedialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libheptafrancqt_a-moc_askpassphrasedialog.o -MD -MP -MF qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_askpassphrasedialog.Tpo -c -o qt/qt_libheptafrancqt_a-moc_askpassphrasedialog.o `test -f 'qt/moc_askpassphrasedialog.cpp' || echo '$(srcdir)/'`qt/moc_askpassphrasedialog.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_askpassphrasedialog.Tpo qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_askpassphrasedialog.Po
#	$(AM_V_CXX)source='qt/moc_askpassphrasedialog.cpp' object='qt/qt_libheptafrancqt_a-moc_askpassphrasedialog.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libheptafrancqt_a-moc_askpassphrasedialog.o `test -f 'qt/moc_askpassphrasedialog.cpp' || echo '$(srcdir)/'`qt/moc_askpassphrasedialog.cpp

qt/qt_libheptafrancqt_a-moc_askpassphrasedialog.obj: qt/moc_askpassphrasedialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libheptafrancqt_a-moc_askpassphrasedialog.obj -MD -MP -MF qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_askpassphrasedialog.Tpo -c -o qt/qt_libheptafrancqt_a-moc_askpassphrasedialog.obj `if test -f 'qt/moc_askpassphrasedialog.cpp'; then $(CYGPATH_W) 'qt/moc_askpassphrasedialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_askpassphrasedialog.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_askpassphrasedialog.Tpo qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_askpassphrasedialog.Po
#	$(AM_V_CXX)source='qt/moc_askpassphrasedialog.cpp' object='qt/qt_libheptafrancqt_a-moc_askpassphrasedialog.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libheptafrancqt_a-moc_askpassphrasedialog.obj `if test -f 'qt/moc_askpassphrasedialog.cpp'; then $(CYGPATH_W) 'qt/moc_askpassphrasedialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_askpassphrasedialog.cpp'; fi`

qt/qt_libheptafrancqt_a-moc_bantablemodel.o: qt/moc_bantablemodel.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libheptafrancqt_a-moc_bantablemodel.o -MD -MP -MF qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_bantablemodel.Tpo -c -o qt/qt_libheptafrancqt_a-moc_bantablemodel.o `test -f 'qt/moc_bantablemodel.cpp' || echo '$(srcdir)/'`qt/moc_bantablemodel.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_bantablemodel.Tpo qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_bantablemodel.Po
#	$(AM_V_CXX)source='qt/moc_bantablemodel.cpp' object='qt/qt_libheptafrancqt_a-moc_bantablemodel.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libheptafrancqt_a-moc_bantablemodel.o `test -f 'qt/moc_bantablemodel.cpp' || echo '$(srcdir)/'`qt/moc_bantablemodel.cpp

qt/qt_libheptafrancqt_a-moc_bantablemodel.obj: qt/moc_bantablemodel.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libheptafrancqt_a-moc_bantablemodel.obj -MD -MP -MF qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_bantablemodel.Tpo -c -o qt/qt_libheptafrancqt_a-moc_bantablemodel.obj `if test -f 'qt/moc_bantablemodel.cpp'; then $(CYGPATH_W) 'qt/moc_bantablemodel.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_bantablemodel.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_bantablemodel.Tpo qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_bantablemodel.Po
#	$(AM_V_CXX)source='qt/moc_bantablemodel.cpp' object='qt/qt_libheptafrancqt_a-moc_bantablemodel.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libheptafrancqt_a-moc_bantablemodel.obj `if test -f 'qt/moc_bantablemodel.cpp'; then $(CYGPATH_W) 'qt/moc_bantablemodel.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_bantablemodel.cpp'; fi`

qt/qt_libheptafrancqt_a-moc_heptafrancaddressvalidator.o: qt/moc_heptafrancaddressvalidator.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libheptafrancqt_a-moc_heptafrancaddressvalidator.o -MD -MP -MF qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_heptafrancaddressvalidator.Tpo -c -o qt/qt_libheptafrancqt_a-moc_heptafrancaddressvalidator.o `test -f 'qt/moc_heptafrancaddressvalidator.cpp' || echo '$(srcdir)/'`qt/moc_heptafrancaddressvalidator.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_heptafrancaddressvalidator.Tpo qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_heptafrancaddressvalidator.Po
#	$(AM_V_CXX)source='qt/moc_heptafrancaddressvalidator.cpp' object='qt/qt_libheptafrancqt_a-moc_heptafrancaddressvalidator.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libheptafrancqt_a-moc_heptafrancaddressvalidator.o `test -f 'qt/moc_heptafrancaddressvalidator.cpp' || echo '$(srcdir)/'`qt/moc_heptafrancaddressvalidator.cpp

qt/qt_libheptafrancqt_a-moc_heptafrancaddressvalidator.obj: qt/moc_heptafrancaddressvalidator.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libheptafrancqt_a-moc_heptafrancaddressvalidator.obj -MD -MP -MF qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_heptafrancaddressvalidator.Tpo -c -o qt/qt_libheptafrancqt_a-moc_heptafrancaddressvalidator.obj `if test -f 'qt/moc_heptafrancaddressvalidator.cpp'; then $(CYGPATH_W) 'qt/moc_heptafrancaddressvalidator.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_heptafrancaddressvalidator.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_heptafrancaddressvalidator.Tpo qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_heptafrancaddressvalidator.Po
#	$(AM_V_CXX)source='qt/moc_heptafrancaddressvalidator.cpp' object='qt/qt_libheptafrancqt_a-moc_heptafrancaddressvalidator.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libheptafrancqt_a-moc_heptafrancaddressvalidator.obj `if test -f 'qt/moc_heptafrancaddressvalidator.cpp'; then $(CYGPATH_W) 'qt/moc_heptafrancaddressvalidator.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_heptafrancaddressvalidator.cpp'; fi`

qt/qt_libheptafrancqt_a-moc_heptafrancamountfield.o: qt/moc_heptafrancamountfield.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libheptafrancqt_a-moc_heptafrancamountfield.o -MD -MP -MF qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_heptafrancamountfield.Tpo -c -o qt/qt_libheptafrancqt_a-moc_heptafrancamountfield.o `test -f 'qt/moc_heptafrancamountfield.cpp' || echo '$(srcdir)/'`qt/moc_heptafrancamountfield.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_heptafrancamountfield.Tpo qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_heptafrancamountfield.Po
#	$(AM_V_CXX)source='qt/moc_heptafrancamountfield.cpp' object='qt/qt_libheptafrancqt_a-moc_heptafrancamountfield.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libheptafrancqt_a-moc_heptafrancamountfield.o `test -f 'qt/moc_heptafrancamountfield.cpp' || echo '$(srcdir)/'`qt/moc_heptafrancamountfield.cpp

qt/qt_libheptafrancqt_a-moc_heptafrancamountfield.obj: qt/moc_heptafrancamountfield.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libheptafrancqt_a-moc_heptafrancamountfield.obj -MD -MP -MF qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_heptafrancamountfield.Tpo -c -o qt/qt_libheptafrancqt_a-moc_heptafrancamountfield.obj `if test -f 'qt/moc_heptafrancamountfield.cpp'; then $(CYGPATH_W) 'qt/moc_heptafrancamountfield.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_heptafrancamountfield.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_heptafrancamountfield.Tpo qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_heptafrancamountfield.Po
#	$(AM_V_CXX)source='qt/moc_heptafrancamountfield.cpp' object='qt/qt_libheptafrancqt_a-moc_heptafrancamountfield.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libheptafrancqt_a-moc_heptafrancamountfield.obj `if test -f 'qt/moc_heptafrancamountfield.cpp'; then $(CYGPATH_W) 'qt/moc_heptafrancamountfield.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_heptafrancamountfield.cpp'; fi`

qt/qt_libheptafrancqt_a-moc_heptafrancgui.o: qt/moc_heptafrancgui.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libheptafrancqt_a-moc_heptafrancgui.o -MD -MP -MF qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_heptafrancgui.Tpo -c -o qt/qt_libheptafrancqt_a-moc_heptafrancgui.o `test -f 'qt/moc_heptafrancgui.cpp' || echo '$(srcdir)/'`qt/moc_heptafrancgui.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_heptafrancgui.Tpo qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_heptafrancgui.Po
#	$(AM_V_CXX)source='qt/moc_heptafrancgui.cpp' object='qt/qt_libheptafrancqt_a-moc_heptafrancgui.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libheptafrancqt_a-moc_heptafrancgui.o `test -f 'qt/moc_heptafrancgui.cpp' || echo '$(srcdir)/'`qt/moc_heptafrancgui.cpp

qt/qt_libheptafrancqt_a-moc_heptafrancgui.obj: qt/moc_heptafrancgui.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libheptafrancqt_a-moc_heptafrancgui.obj -MD -MP -MF qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_heptafrancgui.Tpo -c -o qt/qt_libheptafrancqt_a-moc_heptafrancgui.obj `if test -f 'qt/moc_heptafrancgui.cpp'; then $(CYGPATH_W) 'qt/moc_heptafrancgui.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_heptafrancgui.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_heptafrancgui.Tpo qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_heptafrancgui.Po
#	$(AM_V_CXX)source='qt/moc_heptafrancgui.cpp' object='qt/qt_libheptafrancqt_a-moc_heptafrancgui.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libheptafrancqt_a-moc_heptafrancgui.obj `if test -f 'qt/moc_heptafrancgui.cpp'; then $(CYGPATH_W) 'qt/moc_heptafrancgui.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_heptafrancgui.cpp'; fi`

qt/qt_libheptafrancqt_a-moc_heptafrancunits.o: qt/moc_heptafrancunits.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libheptafrancqt_a-moc_heptafrancunits.o -MD -MP -MF qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_heptafrancunits.Tpo -c -o qt/qt_libheptafrancqt_a-moc_heptafrancunits.o `test -f 'qt/moc_heptafrancunits.cpp' || echo '$(srcdir)/'`qt/moc_heptafrancunits.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_heptafrancunits.Tpo qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_heptafrancunits.Po
#	$(AM_V_CXX)source='qt/moc_heptafrancunits.cpp' object='qt/qt_libheptafrancqt_a-moc_heptafrancunits.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libheptafrancqt_a-moc_heptafrancunits.o `test -f 'qt/moc_heptafrancunits.cpp' || echo '$(srcdir)/'`qt/moc_heptafrancunits.cpp

qt/qt_libheptafrancqt_a-moc_heptafrancunits.obj: qt/moc_heptafrancunits.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libheptafrancqt_a-moc_heptafrancunits.obj -MD -MP -MF qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_heptafrancunits.Tpo -c -o qt/qt_libheptafrancqt_a-moc_heptafrancunits.obj `if test -f 'qt/moc_heptafrancunits.cpp'; then $(CYGPATH_W) 'qt/moc_heptafrancunits.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_heptafrancunits.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_heptafrancunits.Tpo qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_heptafrancunits.Po
#	$(AM_V_CXX)source='qt/moc_heptafrancunits.cpp' object='qt/qt_libheptafrancqt_a-moc_heptafrancunits.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libheptafrancqt_a-moc_heptafrancunits.obj `if test -f 'qt/moc_heptafrancunits.cpp'; then $(CYGPATH_W) 'qt/moc_heptafrancunits.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_heptafrancunits.cpp'; fi`

qt/qt_libheptafrancqt_a-moc_callback.o: qt/moc_callback.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libheptafrancqt_a-moc_callback.o -MD -MP -MF qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_callback.Tpo -c -o qt/qt_libheptafrancqt_a-moc_callback.o `test -f 'qt/moc_callback.cpp' || echo '$(srcdir)/'`qt/moc_callback.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_callback.Tpo qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_callback.Po
#	$(AM_V_CXX)source='qt/moc_callback.cpp' object='qt/qt_libheptafrancqt_a-moc_callback.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libheptafrancqt_a-moc_callback.o `test -f 'qt/moc_callback.cpp' || echo '$(srcdir)/'`qt/moc_callback.cpp

qt/qt_libheptafrancqt_a-moc_callback.obj: qt/moc_callback.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libheptafrancqt_a-moc_callback.obj -MD -MP -MF qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_callback.Tpo -c -o qt/qt_libheptafrancqt_a-moc_callback.obj `if test -f 'qt/moc_callback.cpp'; then $(CYGPATH_W) 'qt/moc_callback.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_callback.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_callback.Tpo qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_callback.Po
#	$(AM_V_CXX)source='qt/moc_callback.cpp' object='qt/qt_libheptafrancqt_a-moc_callback.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libheptafrancqt_a-moc_callback.obj `if test -f 'qt/moc_callback.cpp'; then $(CYGPATH_W) 'qt/moc_callback.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_callback.cpp'; fi`

qt/qt_libheptafrancqt_a-moc_clientmodel.o: qt/moc_clientmodel.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libheptafrancqt_a-moc_clientmodel.o -MD -MP -MF qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_clientmodel.Tpo -c -o qt/qt_libheptafrancqt_a-moc_clientmodel.o `test -f 'qt/moc_clientmodel.cpp' || echo '$(srcdir)/'`qt/moc_clientmodel.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_clientmodel.Tpo qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_clientmodel.Po
#	$(AM_V_CXX)source='qt/moc_clientmodel.cpp' object='qt/qt_libheptafrancqt_a-moc_clientmodel.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libheptafrancqt_a-moc_clientmodel.o `test -f 'qt/moc_clientmodel.cpp' || echo '$(srcdir)/'`qt/moc_clientmodel.cpp

qt/qt_libheptafrancqt_a-moc_clientmodel.obj: qt/moc_clientmodel.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libheptafrancqt_a-moc_clientmodel.obj -MD -MP -MF qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_clientmodel.Tpo -c -o qt/qt_libheptafrancqt_a-moc_clientmodel.obj `if test -f 'qt/moc_clientmodel.cpp'; then $(CYGPATH_W) 'qt/moc_clientmodel.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_clientmodel.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_clientmodel.Tpo qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_clientmodel.Po
#	$(AM_V_CXX)source='qt/moc_clientmodel.cpp' object='qt/qt_libheptafrancqt_a-moc_clientmodel.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libheptafrancqt_a-moc_clientmodel.obj `if test -f 'qt/moc_clientmodel.cpp'; then $(CYGPATH_W) 'qt/moc_clientmodel.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_clientmodel.cpp'; fi`

qt/qt_libheptafrancqt_a-moc_coincontroldialog.o: qt/moc_coincontroldialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libheptafrancqt_a-moc_coincontroldialog.o -MD -MP -MF qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_coincontroldialog.Tpo -c -o qt/qt_libheptafrancqt_a-moc_coincontroldialog.o `test -f 'qt/moc_coincontroldialog.cpp' || echo '$(srcdir)/'`qt/moc_coincontroldialog.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_coincontroldialog.Tpo qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_coincontroldialog.Po
#	$(AM_V_CXX)source='qt/moc_coincontroldialog.cpp' object='qt/qt_libheptafrancqt_a-moc_coincontroldialog.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libheptafrancqt_a-moc_coincontroldialog.o `test -f 'qt/moc_coincontroldialog.cpp' || echo '$(srcdir)/'`qt/moc_coincontroldialog.cpp

qt/qt_libheptafrancqt_a-moc_coincontroldialog.obj: qt/moc_coincontroldialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libheptafrancqt_a-moc_coincontroldialog.obj -MD -MP -MF qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_coincontroldialog.Tpo -c -o qt/qt_libheptafrancqt_a-moc_coincontroldialog.obj `if test -f 'qt/moc_coincontroldialog.cpp'; then $(CYGPATH_W) 'qt/moc_coincontroldialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_coincontroldialog.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_coincontroldialog.Tpo qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_coincontroldialog.Po
#	$(AM_V_CXX)source='qt/moc_coincontroldialog.cpp' object='qt/qt_libheptafrancqt_a-moc_coincontroldialog.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libheptafrancqt_a-moc_coincontroldialog.obj `if test -f 'qt/moc_coincontroldialog.cpp'; then $(CYGPATH_W) 'qt/moc_coincontroldialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_coincontroldialog.cpp'; fi`

qt/qt_libheptafrancqt_a-moc_coincontroltreewidget.o: qt/moc_coincontroltreewidget.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libheptafrancqt_a-moc_coincontroltreewidget.o -MD -MP -MF qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_coincontroltreewidget.Tpo -c -o qt/qt_libheptafrancqt_a-moc_coincontroltreewidget.o `test -f 'qt/moc_coincontroltreewidget.cpp' || echo '$(srcdir)/'`qt/moc_coincontroltreewidget.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_coincontroltreewidget.Tpo qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_coincontroltreewidget.Po
#	$(AM_V_CXX)source='qt/moc_coincontroltreewidget.cpp' object='qt/qt_libheptafrancqt_a-moc_coincontroltreewidget.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libheptafrancqt_a-moc_coincontroltreewidget.o `test -f 'qt/moc_coincontroltreewidget.cpp' || echo '$(srcdir)/'`qt/moc_coincontroltreewidget.cpp

qt/qt_libheptafrancqt_a-moc_coincontroltreewidget.obj: qt/moc_coincontroltreewidget.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libheptafrancqt_a-moc_coincontroltreewidget.obj -MD -MP -MF qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_coincontroltreewidget.Tpo -c -o qt/qt_libheptafrancqt_a-moc_coincontroltreewidget.obj `if test -f 'qt/moc_coincontroltreewidget.cpp'; then $(CYGPATH_W) 'qt/moc_coincontroltreewidget.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_coincontroltreewidget.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_coincontroltreewidget.Tpo qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_coincontroltreewidget.Po
#	$(AM_V_CXX)source='qt/moc_coincontroltreewidget.cpp' object='qt/qt_libheptafrancqt_a-moc_coincontroltreewidget.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libheptafrancqt_a-moc_coincontroltreewidget.obj `if test -f 'qt/moc_coincontroltreewidget.cpp'; then $(CYGPATH_W) 'qt/moc_coincontroltreewidget.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_coincontroltreewidget.cpp'; fi`

qt/qt_libheptafrancqt_a-moc_csvmodelwriter.o: qt/moc_csvmodelwriter.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libheptafrancqt_a-moc_csvmodelwriter.o -MD -MP -MF qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_csvmodelwriter.Tpo -c -o qt/qt_libheptafrancqt_a-moc_csvmodelwriter.o `test -f 'qt/moc_csvmodelwriter.cpp' || echo '$(srcdir)/'`qt/moc_csvmodelwriter.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_csvmodelwriter.Tpo qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_csvmodelwriter.Po
#	$(AM_V_CXX)source='qt/moc_csvmodelwriter.cpp' object='qt/qt_libheptafrancqt_a-moc_csvmodelwriter.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libheptafrancqt_a-moc_csvmodelwriter.o `test -f 'qt/moc_csvmodelwriter.cpp' || echo '$(srcdir)/'`qt/moc_csvmodelwriter.cpp

qt/qt_libheptafrancqt_a-moc_csvmodelwriter.obj: qt/moc_csvmodelwriter.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libheptafrancqt_a-moc_csvmodelwriter.obj -MD -MP -MF qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_csvmodelwriter.Tpo -c -o qt/qt_libheptafrancqt_a-moc_csvmodelwriter.obj `if test -f 'qt/moc_csvmodelwriter.cpp'; then $(CYGPATH_W) 'qt/moc_csvmodelwriter.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_csvmodelwriter.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_csvmodelwriter.Tpo qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_csvmodelwriter.Po
#	$(AM_V_CXX)source='qt/moc_csvmodelwriter.cpp' object='qt/qt_libheptafrancqt_a-moc_csvmodelwriter.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libheptafrancqt_a-moc_csvmodelwriter.obj `if test -f 'qt/moc_csvmodelwriter.cpp'; then $(CYGPATH_W) 'qt/moc_csvmodelwriter.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_csvmodelwriter.cpp'; fi`

qt/qt_libheptafrancqt_a-moc_editaddressdialog.o: qt/moc_editaddressdialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libheptafrancqt_a-moc_editaddressdialog.o -MD -MP -MF qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_editaddressdialog.Tpo -c -o qt/qt_libheptafrancqt_a-moc_editaddressdialog.o `test -f 'qt/moc_editaddressdialog.cpp' || echo '$(srcdir)/'`qt/moc_editaddressdialog.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_editaddressdialog.Tpo qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_editaddressdialog.Po
#	$(AM_V_CXX)source='qt/moc_editaddressdialog.cpp' object='qt/qt_libheptafrancqt_a-moc_editaddressdialog.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libheptafrancqt_a-moc_editaddressdialog.o `test -f 'qt/moc_editaddressdialog.cpp' || echo '$(srcdir)/'`qt/moc_editaddressdialog.cpp

qt/qt_libheptafrancqt_a-moc_editaddressdialog.obj: qt/moc_editaddressdialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libheptafrancqt_a-moc_editaddressdialog.obj -MD -MP -MF qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_editaddressdialog.Tpo -c -o qt/qt_libheptafrancqt_a-moc_editaddressdialog.obj `if test -f 'qt/moc_editaddressdialog.cpp'; then $(CYGPATH_W) 'qt/moc_editaddressdialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_editaddressdialog.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_editaddressdialog.Tpo qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_editaddressdialog.Po
#	$(AM_V_CXX)source='qt/moc_editaddressdialog.cpp' object='qt/qt_libheptafrancqt_a-moc_editaddressdialog.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libheptafrancqt_a-moc_editaddressdialog.obj `if test -f 'qt/moc_editaddressdialog.cpp'; then $(CYGPATH_W) 'qt/moc_editaddressdialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_editaddressdialog.cpp'; fi`

qt/qt_libheptafrancqt_a-moc_guiutil.o: qt/moc_guiutil.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libheptafrancqt_a-moc_guiutil.o -MD -MP -MF qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_guiutil.Tpo -c -o qt/qt_libheptafrancqt_a-moc_guiutil.o `test -f 'qt/moc_guiutil.cpp' || echo '$(srcdir)/'`qt/moc_guiutil.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_guiutil.Tpo qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_guiutil.Po
#	$(AM_V_CXX)source='qt/moc_guiutil.cpp' object='qt/qt_libheptafrancqt_a-moc_guiutil.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libheptafrancqt_a-moc_guiutil.o `test -f 'qt/moc_guiutil.cpp' || echo '$(srcdir)/'`qt/moc_guiutil.cpp

qt/qt_libheptafrancqt_a-moc_guiutil.obj: qt/moc_guiutil.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libheptafrancqt_a-moc_guiutil.obj -MD -MP -MF qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_guiutil.Tpo -c -o qt/qt_libheptafrancqt_a-moc_guiutil.obj `if test -f 'qt/moc_guiutil.cpp'; then $(CYGPATH_W) 'qt/moc_guiutil.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_guiutil.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_guiutil.Tpo qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_guiutil.Po
#	$(AM_V_CXX)source='qt/moc_guiutil.cpp' object='qt/qt_libheptafrancqt_a-moc_guiutil.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libheptafrancqt_a-moc_guiutil.obj `if test -f 'qt/moc_guiutil.cpp'; then $(CYGPATH_W) 'qt/moc_guiutil.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_guiutil.cpp'; fi`

qt/qt_libheptafrancqt_a-moc_intro.o: qt/moc_intro.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libheptafrancqt_a-moc_intro.o -MD -MP -MF qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_intro.Tpo -c -o qt/qt_libheptafrancqt_a-moc_intro.o `test -f 'qt/moc_intro.cpp' || echo '$(srcdir)/'`qt/moc_intro.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_intro.Tpo qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_intro.Po
#	$(AM_V_CXX)source='qt/moc_intro.cpp' object='qt/qt_libheptafrancqt_a-moc_intro.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libheptafrancqt_a-moc_intro.o `test -f 'qt/moc_intro.cpp' || echo '$(srcdir)/'`qt/moc_intro.cpp

qt/qt_libheptafrancqt_a-moc_intro.obj: qt/moc_intro.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libheptafrancqt_a-moc_intro.obj -MD -MP -MF qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_intro.Tpo -c -o qt/qt_libheptafrancqt_a-moc_intro.obj `if test -f 'qt/moc_intro.cpp'; then $(CYGPATH_W) 'qt/moc_intro.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_intro.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_intro.Tpo qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_intro.Po
#	$(AM_V_CXX)source='qt/moc_intro.cpp' object='qt/qt_libheptafrancqt_a-moc_intro.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libheptafrancqt_a-moc_intro.obj `if test -f 'qt/moc_intro.cpp'; then $(CYGPATH_W) 'qt/moc_intro.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_intro.cpp'; fi`

qt/qt_libheptafrancqt_a-moc_macdockiconhandler.o: qt/moc_macdockiconhandler.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libheptafrancqt_a-moc_macdockiconhandler.o -MD -MP -MF qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_macdockiconhandler.Tpo -c -o qt/qt_libheptafrancqt_a-moc_macdockiconhandler.o `test -f 'qt/moc_macdockiconhandler.cpp' || echo '$(srcdir)/'`qt/moc_macdockiconhandler.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_macdockiconhandler.Tpo qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_macdockiconhandler.Po
#	$(AM_V_CXX)source='qt/moc_macdockiconhandler.cpp' object='qt/qt_libheptafrancqt_a-moc_macdockiconhandler.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libheptafrancqt_a-moc_macdockiconhandler.o `test -f 'qt/moc_macdockiconhandler.cpp' || echo '$(srcdir)/'`qt/moc_macdockiconhandler.cpp

qt/qt_libheptafrancqt_a-moc_macdockiconhandler.obj: qt/moc_macdockiconhandler.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libheptafrancqt_a-moc_macdockiconhandler.obj -MD -MP -MF qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_macdockiconhandler.Tpo -c -o qt/qt_libheptafrancqt_a-moc_macdockiconhandler.obj `if test -f 'qt/moc_macdockiconhandler.cpp'; then $(CYGPATH_W) 'qt/moc_macdockiconhandler.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_macdockiconhandler.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_macdockiconhandler.Tpo qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_macdockiconhandler.Po
#	$(AM_V_CXX)source='qt/moc_macdockiconhandler.cpp' object='qt/qt_libheptafrancqt_a-moc_macdockiconhandler.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libheptafrancqt_a-moc_macdockiconhandler.obj `if test -f 'qt/moc_macdockiconhandler.cpp'; then $(CYGPATH_W) 'qt/moc_macdockiconhandler.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_macdockiconhandler.cpp'; fi`

qt/qt_libheptafrancqt_a-moc_macnotificationhandler.o: qt/moc_macnotificationhandler.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libheptafrancqt_a-moc_macnotificationhandler.o -MD -MP -MF qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_macnotificationhandler.Tpo -c -o qt/qt_libheptafrancqt_a-moc_macnotificationhandler.o `test -f 'qt/moc_macnotificationhandler.cpp' || echo '$(srcdir)/'`qt/moc_macnotificationhandler.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_macnotificationhandler.Tpo qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_macnotificationhandler.Po
#	$(AM_V_CXX)source='qt/moc_macnotificationhandler.cpp' object='qt/qt_libheptafrancqt_a-moc_macnotificationhandler.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libheptafrancqt_a-moc_macnotificationhandler.o `test -f 'qt/moc_macnotificationhandler.cpp' || echo '$(srcdir)/'`qt/moc_macnotificationhandler.cpp

qt/qt_libheptafrancqt_a-moc_macnotificationhandler.obj: qt/moc_macnotificationhandler.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libheptafrancqt_a-moc_macnotificationhandler.obj -MD -MP -MF qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_macnotificationhandler.Tpo -c -o qt/qt_libheptafrancqt_a-moc_macnotificationhandler.obj `if test -f 'qt/moc_macnotificationhandler.cpp'; then $(CYGPATH_W) 'qt/moc_macnotificationhandler.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_macnotificationhandler.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_macnotificationhandler.Tpo qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_macnotificationhandler.Po
#	$(AM_V_CXX)source='qt/moc_macnotificationhandler.cpp' object='qt/qt_libheptafrancqt_a-moc_macnotificationhandler.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libheptafrancqt_a-moc_macnotificationhandler.obj `if test -f 'qt/moc_macnotificationhandler.cpp'; then $(CYGPATH_W) 'qt/moc_macnotificationhandler.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_macnotificationhandler.cpp'; fi`

qt/qt_libheptafrancqt_a-moc_modaloverlay.o: qt/moc_modaloverlay.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libheptafrancqt_a-moc_modaloverlay.o -MD -MP -MF qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_modaloverlay.Tpo -c -o qt/qt_libheptafrancqt_a-moc_modaloverlay.o `test -f 'qt/moc_modaloverlay.cpp' || echo '$(srcdir)/'`qt/moc_modaloverlay.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_modaloverlay.Tpo qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_modaloverlay.Po
#	$(AM_V_CXX)source='qt/moc_modaloverlay.cpp' object='qt/qt_libheptafrancqt_a-moc_modaloverlay.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libheptafrancqt_a-moc_modaloverlay.o `test -f 'qt/moc_modaloverlay.cpp' || echo '$(srcdir)/'`qt/moc_modaloverlay.cpp

qt/qt_libheptafrancqt_a-moc_modaloverlay.obj: qt/moc_modaloverlay.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libheptafrancqt_a-moc_modaloverlay.obj -MD -MP -MF qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_modaloverlay.Tpo -c -o qt/qt_libheptafrancqt_a-moc_modaloverlay.obj `if test -f 'qt/moc_modaloverlay.cpp'; then $(CYGPATH_W) 'qt/moc_modaloverlay.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_modaloverlay.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_modaloverlay.Tpo qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_modaloverlay.Po
#	$(AM_V_CXX)source='qt/moc_modaloverlay.cpp' object='qt/qt_libheptafrancqt_a-moc_modaloverlay.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libheptafrancqt_a-moc_modaloverlay.obj `if test -f 'qt/moc_modaloverlay.cpp'; then $(CYGPATH_W) 'qt/moc_modaloverlay.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_modaloverlay.cpp'; fi`

qt/qt_libheptafrancqt_a-moc_notificator.o: qt/moc_notificator.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libheptafrancqt_a-moc_notificator.o -MD -MP -MF qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_notificator.Tpo -c -o qt/qt_libheptafrancqt_a-moc_notificator.o `test -f 'qt/moc_notificator.cpp' || echo '$(srcdir)/'`qt/moc_notificator.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_notificator.Tpo qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_notificator.Po
#	$(AM_V_CXX)source='qt/moc_notificator.cpp' object='qt/qt_libheptafrancqt_a-moc_notificator.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libheptafrancqt_a-moc_notificator.o `test -f 'qt/moc_notificator.cpp' || echo '$(srcdir)/'`qt/moc_notificator.cpp

qt/qt_libheptafrancqt_a-moc_notificator.obj: qt/moc_notificator.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libheptafrancqt_a-moc_notificator.obj -MD -MP -MF qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_notificator.Tpo -c -o qt/qt_libheptafrancqt_a-moc_notificator.obj `if test -f 'qt/moc_notificator.cpp'; then $(CYGPATH_W) 'qt/moc_notificator.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_notificator.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_notificator.Tpo qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_notificator.Po
#	$(AM_V_CXX)source='qt/moc_notificator.cpp' object='qt/qt_libheptafrancqt_a-moc_notificator.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libheptafrancqt_a-moc_notificator.obj `if test -f 'qt/moc_notificator.cpp'; then $(CYGPATH_W) 'qt/moc_notificator.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_notificator.cpp'; fi`

qt/qt_libheptafrancqt_a-moc_openuridialog.o: qt/moc_openuridialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libheptafrancqt_a-moc_openuridialog.o -MD -MP -MF qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_openuridialog.Tpo -c -o qt/qt_libheptafrancqt_a-moc_openuridialog.o `test -f 'qt/moc_openuridialog.cpp' || echo '$(srcdir)/'`qt/moc_openuridialog.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_openuridialog.Tpo qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_openuridialog.Po
#	$(AM_V_CXX)source='qt/moc_openuridialog.cpp' object='qt/qt_libheptafrancqt_a-moc_openuridialog.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libheptafrancqt_a-moc_openuridialog.o `test -f 'qt/moc_openuridialog.cpp' || echo '$(srcdir)/'`qt/moc_openuridialog.cpp

qt/qt_libheptafrancqt_a-moc_openuridialog.obj: qt/moc_openuridialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libheptafrancqt_a-moc_openuridialog.obj -MD -MP -MF qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_openuridialog.Tpo -c -o qt/qt_libheptafrancqt_a-moc_openuridialog.obj `if test -f 'qt/moc_openuridialog.cpp'; then $(CYGPATH_W) 'qt/moc_openuridialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_openuridialog.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_openuridialog.Tpo qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_openuridialog.Po
#	$(AM_V_CXX)source='qt/moc_openuridialog.cpp' object='qt/qt_libheptafrancqt_a-moc_openuridialog.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libheptafrancqt_a-moc_openuridialog.obj `if test -f 'qt/moc_openuridialog.cpp'; then $(CYGPATH_W) 'qt/moc_openuridialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_openuridialog.cpp'; fi`

qt/qt_libheptafrancqt_a-moc_optionsdialog.o: qt/moc_optionsdialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libheptafrancqt_a-moc_optionsdialog.o -MD -MP -MF qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_optionsdialog.Tpo -c -o qt/qt_libheptafrancqt_a-moc_optionsdialog.o `test -f 'qt/moc_optionsdialog.cpp' || echo '$(srcdir)/'`qt/moc_optionsdialog.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_optionsdialog.Tpo qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_optionsdialog.Po
#	$(AM_V_CXX)source='qt/moc_optionsdialog.cpp' object='qt/qt_libheptafrancqt_a-moc_optionsdialog.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libheptafrancqt_a-moc_optionsdialog.o `test -f 'qt/moc_optionsdialog.cpp' || echo '$(srcdir)/'`qt/moc_optionsdialog.cpp

qt/qt_libheptafrancqt_a-moc_optionsdialog.obj: qt/moc_optionsdialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libheptafrancqt_a-moc_optionsdialog.obj -MD -MP -MF qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_optionsdialog.Tpo -c -o qt/qt_libheptafrancqt_a-moc_optionsdialog.obj `if test -f 'qt/moc_optionsdialog.cpp'; then $(CYGPATH_W) 'qt/moc_optionsdialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_optionsdialog.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_optionsdialog.Tpo qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_optionsdialog.Po
#	$(AM_V_CXX)source='qt/moc_optionsdialog.cpp' object='qt/qt_libheptafrancqt_a-moc_optionsdialog.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libheptafrancqt_a-moc_optionsdialog.obj `if test -f 'qt/moc_optionsdialog.cpp'; then $(CYGPATH_W) 'qt/moc_optionsdialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_optionsdialog.cpp'; fi`

qt/qt_libheptafrancqt_a-moc_optionsmodel.o: qt/moc_optionsmodel.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libheptafrancqt_a-moc_optionsmodel.o -MD -MP -MF qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_optionsmodel.Tpo -c -o qt/qt_libheptafrancqt_a-moc_optionsmodel.o `test -f 'qt/moc_optionsmodel.cpp' || echo '$(srcdir)/'`qt/moc_optionsmodel.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_optionsmodel.Tpo qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_optionsmodel.Po
#	$(AM_V_CXX)source='qt/moc_optionsmodel.cpp' object='qt/qt_libheptafrancqt_a-moc_optionsmodel.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libheptafrancqt_a-moc_optionsmodel.o `test -f 'qt/moc_optionsmodel.cpp' || echo '$(srcdir)/'`qt/moc_optionsmodel.cpp

qt/qt_libheptafrancqt_a-moc_optionsmodel.obj: qt/moc_optionsmodel.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libheptafrancqt_a-moc_optionsmodel.obj -MD -MP -MF qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_optionsmodel.Tpo -c -o qt/qt_libheptafrancqt_a-moc_optionsmodel.obj `if test -f 'qt/moc_optionsmodel.cpp'; then $(CYGPATH_W) 'qt/moc_optionsmodel.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_optionsmodel.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_optionsmodel.Tpo qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_optionsmodel.Po
#	$(AM_V_CXX)source='qt/moc_optionsmodel.cpp' object='qt/qt_libheptafrancqt_a-moc_optionsmodel.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libheptafrancqt_a-moc_optionsmodel.obj `if test -f 'qt/moc_optionsmodel.cpp'; then $(CYGPATH_W) 'qt/moc_optionsmodel.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_optionsmodel.cpp'; fi`

qt/qt_libheptafrancqt_a-moc_overviewpage.o: qt/moc_overviewpage.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libheptafrancqt_a-moc_overviewpage.o -MD -MP -MF qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_overviewpage.Tpo -c -o qt/qt_libheptafrancqt_a-moc_overviewpage.o `test -f 'qt/moc_overviewpage.cpp' || echo '$(srcdir)/'`qt/moc_overviewpage.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_overviewpage.Tpo qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_overviewpage.Po
#	$(AM_V_CXX)source='qt/moc_overviewpage.cpp' object='qt/qt_libheptafrancqt_a-moc_overviewpage.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libheptafrancqt_a-moc_overviewpage.o `test -f 'qt/moc_overviewpage.cpp' || echo '$(srcdir)/'`qt/moc_overviewpage.cpp

qt/qt_libheptafrancqt_a-moc_overviewpage.obj: qt/moc_overviewpage.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libheptafrancqt_a-moc_overviewpage.obj -MD -MP -MF qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_overviewpage.Tpo -c -o qt/qt_libheptafrancqt_a-moc_overviewpage.obj `if test -f 'qt/moc_overviewpage.cpp'; then $(CYGPATH_W) 'qt/moc_overviewpage.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_overviewpage.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_overviewpage.Tpo qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_overviewpage.Po
#	$(AM_V_CXX)source='qt/moc_overviewpage.cpp' object='qt/qt_libheptafrancqt_a-moc_overviewpage.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libheptafrancqt_a-moc_overviewpage.obj `if test -f 'qt/moc_overviewpage.cpp'; then $(CYGPATH_W) 'qt/moc_overviewpage.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_overviewpage.cpp'; fi`

qt/qt_libheptafrancqt_a-moc_peertablemodel.o: qt/moc_peertablemodel.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libheptafrancqt_a-moc_peertablemodel.o -MD -MP -MF qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_peertablemodel.Tpo -c -o qt/qt_libheptafrancqt_a-moc_peertablemodel.o `test -f 'qt/moc_peertablemodel.cpp' || echo '$(srcdir)/'`qt/moc_peertablemodel.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_peertablemodel.Tpo qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_peertablemodel.Po
#	$(AM_V_CXX)source='qt/moc_peertablemodel.cpp' object='qt/qt_libheptafrancqt_a-moc_peertablemodel.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libheptafrancqt_a-moc_peertablemodel.o `test -f 'qt/moc_peertablemodel.cpp' || echo '$(srcdir)/'`qt/moc_peertablemodel.cpp

qt/qt_libheptafrancqt_a-moc_peertablemodel.obj: qt/moc_peertablemodel.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libheptafrancqt_a-moc_peertablemodel.obj -MD -MP -MF qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_peertablemodel.Tpo -c -o qt/qt_libheptafrancqt_a-moc_peertablemodel.obj `if test -f 'qt/moc_peertablemodel.cpp'; then $(CYGPATH_W) 'qt/moc_peertablemodel.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_peertablemodel.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_peertablemodel.Tpo qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_peertablemodel.Po
#	$(AM_V_CXX)source='qt/moc_peertablemodel.cpp' object='qt/qt_libheptafrancqt_a-moc_peertablemodel.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libheptafrancqt_a-moc_peertablemodel.obj `if test -f 'qt/moc_peertablemodel.cpp'; then $(CYGPATH_W) 'qt/moc_peertablemodel.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_peertablemodel.cpp'; fi`

qt/qt_libheptafrancqt_a-moc_paymentserver.o: qt/moc_paymentserver.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libheptafrancqt_a-moc_paymentserver.o -MD -MP -MF qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_paymentserver.Tpo -c -o qt/qt_libheptafrancqt_a-moc_paymentserver.o `test -f 'qt/moc_paymentserver.cpp' || echo '$(srcdir)/'`qt/moc_paymentserver.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_paymentserver.Tpo qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_paymentserver.Po
#	$(AM_V_CXX)source='qt/moc_paymentserver.cpp' object='qt/qt_libheptafrancqt_a-moc_paymentserver.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libheptafrancqt_a-moc_paymentserver.o `test -f 'qt/moc_paymentserver.cpp' || echo '$(srcdir)/'`qt/moc_paymentserver.cpp

qt/qt_libheptafrancqt_a-moc_paymentserver.obj: qt/moc_paymentserver.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libheptafrancqt_a-moc_paymentserver.obj -MD -MP -MF qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_paymentserver.Tpo -c -o qt/qt_libheptafrancqt_a-moc_paymentserver.obj `if test -f 'qt/moc_paymentserver.cpp'; then $(CYGPATH_W) 'qt/moc_paymentserver.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_paymentserver.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_paymentserver.Tpo qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_paymentserver.Po
#	$(AM_V_CXX)source='qt/moc_paymentserver.cpp' object='qt/qt_libheptafrancqt_a-moc_paymentserver.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libheptafrancqt_a-moc_paymentserver.obj `if test -f 'qt/moc_paymentserver.cpp'; then $(CYGPATH_W) 'qt/moc_paymentserver.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_paymentserver.cpp'; fi`

qt/qt_libheptafrancqt_a-moc_qvalidatedlineedit.o: qt/moc_qvalidatedlineedit.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libheptafrancqt_a-moc_qvalidatedlineedit.o -MD -MP -MF qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_qvalidatedlineedit.Tpo -c -o qt/qt_libheptafrancqt_a-moc_qvalidatedlineedit.o `test -f 'qt/moc_qvalidatedlineedit.cpp' || echo '$(srcdir)/'`qt/moc_qvalidatedlineedit.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_qvalidatedlineedit.Tpo qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_qvalidatedlineedit.Po
#	$(AM_V_CXX)source='qt/moc_qvalidatedlineedit.cpp' object='qt/qt_libheptafrancqt_a-moc_qvalidatedlineedit.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libheptafrancqt_a-moc_qvalidatedlineedit.o `test -f 'qt/moc_qvalidatedlineedit.cpp' || echo '$(srcdir)/'`qt/moc_qvalidatedlineedit.cpp

qt/qt_libheptafrancqt_a-moc_qvalidatedlineedit.obj: qt/moc_qvalidatedlineedit.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libheptafrancqt_a-moc_qvalidatedlineedit.obj -MD -MP -MF qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_qvalidatedlineedit.Tpo -c -o qt/qt_libheptafrancqt_a-moc_qvalidatedlineedit.obj `if test -f 'qt/moc_qvalidatedlineedit.cpp'; then $(CYGPATH_W) 'qt/moc_qvalidatedlineedit.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_qvalidatedlineedit.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_qvalidatedlineedit.Tpo qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_qvalidatedlineedit.Po
#	$(AM_V_CXX)source='qt/moc_qvalidatedlineedit.cpp' object='qt/qt_libheptafrancqt_a-moc_qvalidatedlineedit.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libheptafrancqt_a-moc_qvalidatedlineedit.obj `if test -f 'qt/moc_qvalidatedlineedit.cpp'; then $(CYGPATH_W) 'qt/moc_qvalidatedlineedit.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_qvalidatedlineedit.cpp'; fi`

qt/qt_libheptafrancqt_a-moc_qvaluecombobox.o: qt/moc_qvaluecombobox.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libheptafrancqt_a-moc_qvaluecombobox.o -MD -MP -MF qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_qvaluecombobox.Tpo -c -o qt/qt_libheptafrancqt_a-moc_qvaluecombobox.o `test -f 'qt/moc_qvaluecombobox.cpp' || echo '$(srcdir)/'`qt/moc_qvaluecombobox.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_qvaluecombobox.Tpo qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_qvaluecombobox.Po
#	$(AM_V_CXX)source='qt/moc_qvaluecombobox.cpp' object='qt/qt_libheptafrancqt_a-moc_qvaluecombobox.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libheptafrancqt_a-moc_qvaluecombobox.o `test -f 'qt/moc_qvaluecombobox.cpp' || echo '$(srcdir)/'`qt/moc_qvaluecombobox.cpp

qt/qt_libheptafrancqt_a-moc_qvaluecombobox.obj: qt/moc_qvaluecombobox.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libheptafrancqt_a-moc_qvaluecombobox.obj -MD -MP -MF qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_qvaluecombobox.Tpo -c -o qt/qt_libheptafrancqt_a-moc_qvaluecombobox.obj `if test -f 'qt/moc_qvaluecombobox.cpp'; then $(CYGPATH_W) 'qt/moc_qvaluecombobox.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_qvaluecombobox.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_qvaluecombobox.Tpo qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_qvaluecombobox.Po
#	$(AM_V_CXX)source='qt/moc_qvaluecombobox.cpp' object='qt/qt_libheptafrancqt_a-moc_qvaluecombobox.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libheptafrancqt_a-moc_qvaluecombobox.obj `if test -f 'qt/moc_qvaluecombobox.cpp'; then $(CYGPATH_W) 'qt/moc_qvaluecombobox.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_qvaluecombobox.cpp'; fi`

qt/qt_libheptafrancqt_a-moc_receivecoinsdialog.o: qt/moc_receivecoinsdialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libheptafrancqt_a-moc_receivecoinsdialog.o -MD -MP -MF qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_receivecoinsdialog.Tpo -c -o qt/qt_libheptafrancqt_a-moc_receivecoinsdialog.o `test -f 'qt/moc_receivecoinsdialog.cpp' || echo '$(srcdir)/'`qt/moc_receivecoinsdialog.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_receivecoinsdialog.Tpo qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_receivecoinsdialog.Po
#	$(AM_V_CXX)source='qt/moc_receivecoinsdialog.cpp' object='qt/qt_libheptafrancqt_a-moc_receivecoinsdialog.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libheptafrancqt_a-moc_receivecoinsdialog.o `test -f 'qt/moc_receivecoinsdialog.cpp' || echo '$(srcdir)/'`qt/moc_receivecoinsdialog.cpp

qt/qt_libheptafrancqt_a-moc_receivecoinsdialog.obj: qt/moc_receivecoinsdialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libheptafrancqt_a-moc_receivecoinsdialog.obj -MD -MP -MF qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_receivecoinsdialog.Tpo -c -o qt/qt_libheptafrancqt_a-moc_receivecoinsdialog.obj `if test -f 'qt/moc_receivecoinsdialog.cpp'; then $(CYGPATH_W) 'qt/moc_receivecoinsdialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_receivecoinsdialog.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_receivecoinsdialog.Tpo qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_receivecoinsdialog.Po
#	$(AM_V_CXX)source='qt/moc_receivecoinsdialog.cpp' object='qt/qt_libheptafrancqt_a-moc_receivecoinsdialog.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libheptafrancqt_a-moc_receivecoinsdialog.obj `if test -f 'qt/moc_receivecoinsdialog.cpp'; then $(CYGPATH_W) 'qt/moc_receivecoinsdialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_receivecoinsdialog.cpp'; fi`

qt/qt_libheptafrancqt_a-moc_receiverequestdialog.o: qt/moc_receiverequestdialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libheptafrancqt_a-moc_receiverequestdialog.o -MD -MP -MF qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_receiverequestdialog.Tpo -c -o qt/qt_libheptafrancqt_a-moc_receiverequestdialog.o `test -f 'qt/moc_receiverequestdialog.cpp' || echo '$(srcdir)/'`qt/moc_receiverequestdialog.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_receiverequestdialog.Tpo qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_receiverequestdialog.Po
#	$(AM_V_CXX)source='qt/moc_receiverequestdialog.cpp' object='qt/qt_libheptafrancqt_a-moc_receiverequestdialog.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libheptafrancqt_a-moc_receiverequestdialog.o `test -f 'qt/moc_receiverequestdialog.cpp' || echo '$(srcdir)/'`qt/moc_receiverequestdialog.cpp

qt/qt_libheptafrancqt_a-moc_receiverequestdialog.obj: qt/moc_receiverequestdialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libheptafrancqt_a-moc_receiverequestdialog.obj -MD -MP -MF qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_receiverequestdialog.Tpo -c -o qt/qt_libheptafrancqt_a-moc_receiverequestdialog.obj `if test -f 'qt/moc_receiverequestdialog.cpp'; then $(CYGPATH_W) 'qt/moc_receiverequestdialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_receiverequestdialog.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_receiverequestdialog.Tpo qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_receiverequestdialog.Po
#	$(AM_V_CXX)source='qt/moc_receiverequestdialog.cpp' object='qt/qt_libheptafrancqt_a-moc_receiverequestdialog.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libheptafrancqt_a-moc_receiverequestdialog.obj `if test -f 'qt/moc_receiverequestdialog.cpp'; then $(CYGPATH_W) 'qt/moc_receiverequestdialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_receiverequestdialog.cpp'; fi`

qt/qt_libheptafrancqt_a-moc_recentrequeststablemodel.o: qt/moc_recentrequeststablemodel.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libheptafrancqt_a-moc_recentrequeststablemodel.o -MD -MP -MF qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_recentrequeststablemodel.Tpo -c -o qt/qt_libheptafrancqt_a-moc_recentrequeststablemodel.o `test -f 'qt/moc_recentrequeststablemodel.cpp' || echo '$(srcdir)/'`qt/moc_recentrequeststablemodel.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_recentrequeststablemodel.Tpo qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_recentrequeststablemodel.Po
#	$(AM_V_CXX)source='qt/moc_recentrequeststablemodel.cpp' object='qt/qt_libheptafrancqt_a-moc_recentrequeststablemodel.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libheptafrancqt_a-moc_recentrequeststablemodel.o `test -f 'qt/moc_recentrequeststablemodel.cpp' || echo '$(srcdir)/'`qt/moc_recentrequeststablemodel.cpp

qt/qt_libheptafrancqt_a-moc_recentrequeststablemodel.obj: qt/moc_recentrequeststablemodel.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libheptafrancqt_a-moc_recentrequeststablemodel.obj -MD -MP -MF qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_recentrequeststablemodel.Tpo -c -o qt/qt_libheptafrancqt_a-moc_recentrequeststablemodel.obj `if test -f 'qt/moc_recentrequeststablemodel.cpp'; then $(CYGPATH_W) 'qt/moc_recentrequeststablemodel.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_recentrequeststablemodel.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_recentrequeststablemodel.Tpo qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_recentrequeststablemodel.Po
#	$(AM_V_CXX)source='qt/moc_recentrequeststablemodel.cpp' object='qt/qt_libheptafrancqt_a-moc_recentrequeststablemodel.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libheptafrancqt_a-moc_recentrequeststablemodel.obj `if test -f 'qt/moc_recentrequeststablemodel.cpp'; then $(CYGPATH_W) 'qt/moc_recentrequeststablemodel.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_recentrequeststablemodel.cpp'; fi`

qt/qt_libheptafrancqt_a-moc_rpcconsole.o: qt/moc_rpcconsole.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libheptafrancqt_a-moc_rpcconsole.o -MD -MP -MF qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_rpcconsole.Tpo -c -o qt/qt_libheptafrancqt_a-moc_rpcconsole.o `test -f 'qt/moc_rpcconsole.cpp' || echo '$(srcdir)/'`qt/moc_rpcconsole.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_rpcconsole.Tpo qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_rpcconsole.Po
#	$(AM_V_CXX)source='qt/moc_rpcconsole.cpp' object='qt/qt_libheptafrancqt_a-moc_rpcconsole.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libheptafrancqt_a-moc_rpcconsole.o `test -f 'qt/moc_rpcconsole.cpp' || echo '$(srcdir)/'`qt/moc_rpcconsole.cpp

qt/qt_libheptafrancqt_a-moc_rpcconsole.obj: qt/moc_rpcconsole.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libheptafrancqt_a-moc_rpcconsole.obj -MD -MP -MF qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_rpcconsole.Tpo -c -o qt/qt_libheptafrancqt_a-moc_rpcconsole.obj `if test -f 'qt/moc_rpcconsole.cpp'; then $(CYGPATH_W) 'qt/moc_rpcconsole.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_rpcconsole.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_rpcconsole.Tpo qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_rpcconsole.Po
#	$(AM_V_CXX)source='qt/moc_rpcconsole.cpp' object='qt/qt_libheptafrancqt_a-moc_rpcconsole.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libheptafrancqt_a-moc_rpcconsole.obj `if test -f 'qt/moc_rpcconsole.cpp'; then $(CYGPATH_W) 'qt/moc_rpcconsole.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_rpcconsole.cpp'; fi`

qt/qt_libheptafrancqt_a-moc_sendcoinsdialog.o: qt/moc_sendcoinsdialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libheptafrancqt_a-moc_sendcoinsdialog.o -MD -MP -MF qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_sendcoinsdialog.Tpo -c -o qt/qt_libheptafrancqt_a-moc_sendcoinsdialog.o `test -f 'qt/moc_sendcoinsdialog.cpp' || echo '$(srcdir)/'`qt/moc_sendcoinsdialog.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_sendcoinsdialog.Tpo qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_sendcoinsdialog.Po
#	$(AM_V_CXX)source='qt/moc_sendcoinsdialog.cpp' object='qt/qt_libheptafrancqt_a-moc_sendcoinsdialog.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libheptafrancqt_a-moc_sendcoinsdialog.o `test -f 'qt/moc_sendcoinsdialog.cpp' || echo '$(srcdir)/'`qt/moc_sendcoinsdialog.cpp

qt/qt_libheptafrancqt_a-moc_sendcoinsdialog.obj: qt/moc_sendcoinsdialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libheptafrancqt_a-moc_sendcoinsdialog.obj -MD -MP -MF qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_sendcoinsdialog.Tpo -c -o qt/qt_libheptafrancqt_a-moc_sendcoinsdialog.obj `if test -f 'qt/moc_sendcoinsdialog.cpp'; then $(CYGPATH_W) 'qt/moc_sendcoinsdialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_sendcoinsdialog.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_sendcoinsdialog.Tpo qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_sendcoinsdialog.Po
#	$(AM_V_CXX)source='qt/moc_sendcoinsdialog.cpp' object='qt/qt_libheptafrancqt_a-moc_sendcoinsdialog.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libheptafrancqt_a-moc_sendcoinsdialog.obj `if test -f 'qt/moc_sendcoinsdialog.cpp'; then $(CYGPATH_W) 'qt/moc_sendcoinsdialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_sendcoinsdialog.cpp'; fi`

qt/qt_libheptafrancqt_a-moc_sendcoinsentry.o: qt/moc_sendcoinsentry.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libheptafrancqt_a-moc_sendcoinsentry.o -MD -MP -MF qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_sendcoinsentry.Tpo -c -o qt/qt_libheptafrancqt_a-moc_sendcoinsentry.o `test -f 'qt/moc_sendcoinsentry.cpp' || echo '$(srcdir)/'`qt/moc_sendcoinsentry.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_sendcoinsentry.Tpo qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_sendcoinsentry.Po
#	$(AM_V_CXX)source='qt/moc_sendcoinsentry.cpp' object='qt/qt_libheptafrancqt_a-moc_sendcoinsentry.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libheptafrancqt_a-moc_sendcoinsentry.o `test -f 'qt/moc_sendcoinsentry.cpp' || echo '$(srcdir)/'`qt/moc_sendcoinsentry.cpp

qt/qt_libheptafrancqt_a-moc_sendcoinsentry.obj: qt/moc_sendcoinsentry.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libheptafrancqt_a-moc_sendcoinsentry.obj -MD -MP -MF qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_sendcoinsentry.Tpo -c -o qt/qt_libheptafrancqt_a-moc_sendcoinsentry.obj `if test -f 'qt/moc_sendcoinsentry.cpp'; then $(CYGPATH_W) 'qt/moc_sendcoinsentry.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_sendcoinsentry.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_sendcoinsentry.Tpo qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_sendcoinsentry.Po
#	$(AM_V_CXX)source='qt/moc_sendcoinsentry.cpp' object='qt/qt_libheptafrancqt_a-moc_sendcoinsentry.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libheptafrancqt_a-moc_sendcoinsentry.obj `if test -f 'qt/moc_sendcoinsentry.cpp'; then $(CYGPATH_W) 'qt/moc_sendcoinsentry.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_sendcoinsentry.cpp'; fi`

qt/qt_libheptafrancqt_a-moc_signverifymessagedialog.o: qt/moc_signverifymessagedialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libheptafrancqt_a-moc_signverifymessagedialog.o -MD -MP -MF qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_signverifymessagedialog.Tpo -c -o qt/qt_libheptafrancqt_a-moc_signverifymessagedialog.o `test -f 'qt/moc_signverifymessagedialog.cpp' || echo '$(srcdir)/'`qt/moc_signverifymessagedialog.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_signverifymessagedialog.Tpo qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_signverifymessagedialog.Po
#	$(AM_V_CXX)source='qt/moc_signverifymessagedialog.cpp' object='qt/qt_libheptafrancqt_a-moc_signverifymessagedialog.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libheptafrancqt_a-moc_signverifymessagedialog.o `test -f 'qt/moc_signverifymessagedialog.cpp' || echo '$(srcdir)/'`qt/moc_signverifymessagedialog.cpp

qt/qt_libheptafrancqt_a-moc_signverifymessagedialog.obj: qt/moc_signverifymessagedialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libheptafrancqt_a-moc_signverifymessagedialog.obj -MD -MP -MF qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_signverifymessagedialog.Tpo -c -o qt/qt_libheptafrancqt_a-moc_signverifymessagedialog.obj `if test -f 'qt/moc_signverifymessagedialog.cpp'; then $(CYGPATH_W) 'qt/moc_signverifymessagedialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_signverifymessagedialog.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_signverifymessagedialog.Tpo qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_signverifymessagedialog.Po
#	$(AM_V_CXX)source='qt/moc_signverifymessagedialog.cpp' object='qt/qt_libheptafrancqt_a-moc_signverifymessagedialog.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libheptafrancqt_a-moc_signverifymessagedialog.obj `if test -f 'qt/moc_signverifymessagedialog.cpp'; then $(CYGPATH_W) 'qt/moc_signverifymessagedialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_signverifymessagedialog.cpp'; fi`

qt/qt_libheptafrancqt_a-moc_splashscreen.o: qt/moc_splashscreen.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libheptafrancqt_a-moc_splashscreen.o -MD -MP -MF qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_splashscreen.Tpo -c -o qt/qt_libheptafrancqt_a-moc_splashscreen.o `test -f 'qt/moc_splashscreen.cpp' || echo '$(srcdir)/'`qt/moc_splashscreen.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_splashscreen.Tpo qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_splashscreen.Po
#	$(AM_V_CXX)source='qt/moc_splashscreen.cpp' object='qt/qt_libheptafrancqt_a-moc_splashscreen.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libheptafrancqt_a-moc_splashscreen.o `test -f 'qt/moc_splashscreen.cpp' || echo '$(srcdir)/'`qt/moc_splashscreen.cpp

qt/qt_libheptafrancqt_a-moc_splashscreen.obj: qt/moc_splashscreen.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libheptafrancqt_a-moc_splashscreen.obj -MD -MP -MF qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_splashscreen.Tpo -c -o qt/qt_libheptafrancqt_a-moc_splashscreen.obj `if test -f 'qt/moc_splashscreen.cpp'; then $(CYGPATH_W) 'qt/moc_splashscreen.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_splashscreen.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_splashscreen.Tpo qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_splashscreen.Po
#	$(AM_V_CXX)source='qt/moc_splashscreen.cpp' object='qt/qt_libheptafrancqt_a-moc_splashscreen.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libheptafrancqt_a-moc_splashscreen.obj `if test -f 'qt/moc_splashscreen.cpp'; then $(CYGPATH_W) 'qt/moc_splashscreen.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_splashscreen.cpp'; fi`

qt/qt_libheptafrancqt_a-moc_trafficgraphwidget.o: qt/moc_trafficgraphwidget.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libheptafrancqt_a-moc_trafficgraphwidget.o -MD -MP -MF qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_trafficgraphwidget.Tpo -c -o qt/qt_libheptafrancqt_a-moc_trafficgraphwidget.o `test -f 'qt/moc_trafficgraphwidget.cpp' || echo '$(srcdir)/'`qt/moc_trafficgraphwidget.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_trafficgraphwidget.Tpo qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_trafficgraphwidget.Po
#	$(AM_V_CXX)source='qt/moc_trafficgraphwidget.cpp' object='qt/qt_libheptafrancqt_a-moc_trafficgraphwidget.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libheptafrancqt_a-moc_trafficgraphwidget.o `test -f 'qt/moc_trafficgraphwidget.cpp' || echo '$(srcdir)/'`qt/moc_trafficgraphwidget.cpp

qt/qt_libheptafrancqt_a-moc_trafficgraphwidget.obj: qt/moc_trafficgraphwidget.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libheptafrancqt_a-moc_trafficgraphwidget.obj -MD -MP -MF qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_trafficgraphwidget.Tpo -c -o qt/qt_libheptafrancqt_a-moc_trafficgraphwidget.obj `if test -f 'qt/moc_trafficgraphwidget.cpp'; then $(CYGPATH_W) 'qt/moc_trafficgraphwidget.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_trafficgraphwidget.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_trafficgraphwidget.Tpo qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_trafficgraphwidget.Po
#	$(AM_V_CXX)source='qt/moc_trafficgraphwidget.cpp' object='qt/qt_libheptafrancqt_a-moc_trafficgraphwidget.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libheptafrancqt_a-moc_trafficgraphwidget.obj `if test -f 'qt/moc_trafficgraphwidget.cpp'; then $(CYGPATH_W) 'qt/moc_trafficgraphwidget.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_trafficgraphwidget.cpp'; fi`

qt/qt_libheptafrancqt_a-moc_transactiondesc.o: qt/moc_transactiondesc.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libheptafrancqt_a-moc_transactiondesc.o -MD -MP -MF qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_transactiondesc.Tpo -c -o qt/qt_libheptafrancqt_a-moc_transactiondesc.o `test -f 'qt/moc_transactiondesc.cpp' || echo '$(srcdir)/'`qt/moc_transactiondesc.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_transactiondesc.Tpo qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_transactiondesc.Po
#	$(AM_V_CXX)source='qt/moc_transactiondesc.cpp' object='qt/qt_libheptafrancqt_a-moc_transactiondesc.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libheptafrancqt_a-moc_transactiondesc.o `test -f 'qt/moc_transactiondesc.cpp' || echo '$(srcdir)/'`qt/moc_transactiondesc.cpp

qt/qt_libheptafrancqt_a-moc_transactiondesc.obj: qt/moc_transactiondesc.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libheptafrancqt_a-moc_transactiondesc.obj -MD -MP -MF qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_transactiondesc.Tpo -c -o qt/qt_libheptafrancqt_a-moc_transactiondesc.obj `if test -f 'qt/moc_transactiondesc.cpp'; then $(CYGPATH_W) 'qt/moc_transactiondesc.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_transactiondesc.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_transactiondesc.Tpo qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_transactiondesc.Po
#	$(AM_V_CXX)source='qt/moc_transactiondesc.cpp' object='qt/qt_libheptafrancqt_a-moc_transactiondesc.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libheptafrancqt_a-moc_transactiondesc.obj `if test -f 'qt/moc_transactiondesc.cpp'; then $(CYGPATH_W) 'qt/moc_transactiondesc.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_transactiondesc.cpp'; fi`

qt/qt_libheptafrancqt_a-moc_transactiondescdialog.o: qt/moc_transactiondescdialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libheptafrancqt_a-moc_transactiondescdialog.o -MD -MP -MF qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_transactiondescdialog.Tpo -c -o qt/qt_libheptafrancqt_a-moc_transactiondescdialog.o `test -f 'qt/moc_transactiondescdialog.cpp' || echo '$(srcdir)/'`qt/moc_transactiondescdialog.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_transactiondescdialog.Tpo qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_transactiondescdialog.Po
#	$(AM_V_CXX)source='qt/moc_transactiondescdialog.cpp' object='qt/qt_libheptafrancqt_a-moc_transactiondescdialog.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libheptafrancqt_a-moc_transactiondescdialog.o `test -f 'qt/moc_transactiondescdialog.cpp' || echo '$(srcdir)/'`qt/moc_transactiondescdialog.cpp

qt/qt_libheptafrancqt_a-moc_transactiondescdialog.obj: qt/moc_transactiondescdialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libheptafrancqt_a-moc_transactiondescdialog.obj -MD -MP -MF qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_transactiondescdialog.Tpo -c -o qt/qt_libheptafrancqt_a-moc_transactiondescdialog.obj `if test -f 'qt/moc_transactiondescdialog.cpp'; then $(CYGPATH_W) 'qt/moc_transactiondescdialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_transactiondescdialog.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_transactiondescdialog.Tpo qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_transactiondescdialog.Po
#	$(AM_V_CXX)source='qt/moc_transactiondescdialog.cpp' object='qt/qt_libheptafrancqt_a-moc_transactiondescdialog.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libheptafrancqt_a-moc_transactiondescdialog.obj `if test -f 'qt/moc_transactiondescdialog.cpp'; then $(CYGPATH_W) 'qt/moc_transactiondescdialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_transactiondescdialog.cpp'; fi`

qt/qt_libheptafrancqt_a-moc_transactionfilterproxy.o: qt/moc_transactionfilterproxy.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libheptafrancqt_a-moc_transactionfilterproxy.o -MD -MP -MF qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_transactionfilterproxy.Tpo -c -o qt/qt_libheptafrancqt_a-moc_transactionfilterproxy.o `test -f 'qt/moc_transactionfilterproxy.cpp' || echo '$(srcdir)/'`qt/moc_transactionfilterproxy.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_transactionfilterproxy.Tpo qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_transactionfilterproxy.Po
#	$(AM_V_CXX)source='qt/moc_transactionfilterproxy.cpp' object='qt/qt_libheptafrancqt_a-moc_transactionfilterproxy.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libheptafrancqt_a-moc_transactionfilterproxy.o `test -f 'qt/moc_transactionfilterproxy.cpp' || echo '$(srcdir)/'`qt/moc_transactionfilterproxy.cpp

qt/qt_libheptafrancqt_a-moc_transactionfilterproxy.obj: qt/moc_transactionfilterproxy.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libheptafrancqt_a-moc_transactionfilterproxy.obj -MD -MP -MF qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_transactionfilterproxy.Tpo -c -o qt/qt_libheptafrancqt_a-moc_transactionfilterproxy.obj `if test -f 'qt/moc_transactionfilterproxy.cpp'; then $(CYGPATH_W) 'qt/moc_transactionfilterproxy.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_transactionfilterproxy.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_transactionfilterproxy.Tpo qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_transactionfilterproxy.Po
#	$(AM_V_CXX)source='qt/moc_transactionfilterproxy.cpp' object='qt/qt_libheptafrancqt_a-moc_transactionfilterproxy.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libheptafrancqt_a-moc_transactionfilterproxy.obj `if test -f 'qt/moc_transactionfilterproxy.cpp'; then $(CYGPATH_W) 'qt/moc_transactionfilterproxy.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_transactionfilterproxy.cpp'; fi`

qt/qt_libheptafrancqt_a-moc_transactiontablemodel.o: qt/moc_transactiontablemodel.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libheptafrancqt_a-moc_transactiontablemodel.o -MD -MP -MF qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_transactiontablemodel.Tpo -c -o qt/qt_libheptafrancqt_a-moc_transactiontablemodel.o `test -f 'qt/moc_transactiontablemodel.cpp' || echo '$(srcdir)/'`qt/moc_transactiontablemodel.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_transactiontablemodel.Tpo qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_transactiontablemodel.Po
#	$(AM_V_CXX)source='qt/moc_transactiontablemodel.cpp' object='qt/qt_libheptafrancqt_a-moc_transactiontablemodel.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libheptafrancqt_a-moc_transactiontablemodel.o `test -f 'qt/moc_transactiontablemodel.cpp' || echo '$(srcdir)/'`qt/moc_transactiontablemodel.cpp

qt/qt_libheptafrancqt_a-moc_transactiontablemodel.obj: qt/moc_transactiontablemodel.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libheptafrancqt_a-moc_transactiontablemodel.obj -MD -MP -MF qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_transactiontablemodel.Tpo -c -o qt/qt_libheptafrancqt_a-moc_transactiontablemodel.obj `if test -f 'qt/moc_transactiontablemodel.cpp'; then $(CYGPATH_W) 'qt/moc_transactiontablemodel.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_transactiontablemodel.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_transactiontablemodel.Tpo qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_transactiontablemodel.Po
#	$(AM_V_CXX)source='qt/moc_transactiontablemodel.cpp' object='qt/qt_libheptafrancqt_a-moc_transactiontablemodel.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libheptafrancqt_a-moc_transactiontablemodel.obj `if test -f 'qt/moc_transactiontablemodel.cpp'; then $(CYGPATH_W) 'qt/moc_transactiontablemodel.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_transactiontablemodel.cpp'; fi`

qt/qt_libheptafrancqt_a-moc_transactionview.o: qt/moc_transactionview.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libheptafrancqt_a-moc_transactionview.o -MD -MP -MF qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_transactionview.Tpo -c -o qt/qt_libheptafrancqt_a-moc_transactionview.o `test -f 'qt/moc_transactionview.cpp' || echo '$(srcdir)/'`qt/moc_transactionview.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_transactionview.Tpo qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_transactionview.Po
#	$(AM_V_CXX)source='qt/moc_transactionview.cpp' object='qt/qt_libheptafrancqt_a-moc_transactionview.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libheptafrancqt_a-moc_transactionview.o `test -f 'qt/moc_transactionview.cpp' || echo '$(srcdir)/'`qt/moc_transactionview.cpp

qt/qt_libheptafrancqt_a-moc_transactionview.obj: qt/moc_transactionview.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libheptafrancqt_a-moc_transactionview.obj -MD -MP -MF qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_transactionview.Tpo -c -o qt/qt_libheptafrancqt_a-moc_transactionview.obj `if test -f 'qt/moc_transactionview.cpp'; then $(CYGPATH_W) 'qt/moc_transactionview.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_transactionview.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_transactionview.Tpo qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_transactionview.Po
#	$(AM_V_CXX)source='qt/moc_transactionview.cpp' object='qt/qt_libheptafrancqt_a-moc_transactionview.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libheptafrancqt_a-moc_transactionview.obj `if test -f 'qt/moc_transactionview.cpp'; then $(CYGPATH_W) 'qt/moc_transactionview.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_transactionview.cpp'; fi`

qt/qt_libheptafrancqt_a-moc_utilitydialog.o: qt/moc_utilitydialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libheptafrancqt_a-moc_utilitydialog.o -MD -MP -MF qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_utilitydialog.Tpo -c -o qt/qt_libheptafrancqt_a-moc_utilitydialog.o `test -f 'qt/moc_utilitydialog.cpp' || echo '$(srcdir)/'`qt/moc_utilitydialog.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_utilitydialog.Tpo qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_utilitydialog.Po
#	$(AM_V_CXX)source='qt/moc_utilitydialog.cpp' object='qt/qt_libheptafrancqt_a-moc_utilitydialog.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libheptafrancqt_a-moc_utilitydialog.o `test -f 'qt/moc_utilitydialog.cpp' || echo '$(srcdir)/'`qt/moc_utilitydialog.cpp

qt/qt_libheptafrancqt_a-moc_utilitydialog.obj: qt/moc_utilitydialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libheptafrancqt_a-moc_utilitydialog.obj -MD -MP -MF qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_utilitydialog.Tpo -c -o qt/qt_libheptafrancqt_a-moc_utilitydialog.obj `if test -f 'qt/moc_utilitydialog.cpp'; then $(CYGPATH_W) 'qt/moc_utilitydialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_utilitydialog.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_utilitydialog.Tpo qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_utilitydialog.Po
#	$(AM_V_CXX)source='qt/moc_utilitydialog.cpp' object='qt/qt_libheptafrancqt_a-moc_utilitydialog.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libheptafrancqt_a-moc_utilitydialog.obj `if test -f 'qt/moc_utilitydialog.cpp'; then $(CYGPATH_W) 'qt/moc_utilitydialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_utilitydialog.cpp'; fi`

qt/qt_libheptafrancqt_a-moc_walletframe.o: qt/moc_walletframe.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libheptafrancqt_a-moc_walletframe.o -MD -MP -MF qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_walletframe.Tpo -c -o qt/qt_libheptafrancqt_a-moc_walletframe.o `test -f 'qt/moc_walletframe.cpp' || echo '$(srcdir)/'`qt/moc_walletframe.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_walletframe.Tpo qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_walletframe.Po
#	$(AM_V_CXX)source='qt/moc_walletframe.cpp' object='qt/qt_libheptafrancqt_a-moc_walletframe.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libheptafrancqt_a-moc_walletframe.o `test -f 'qt/moc_walletframe.cpp' || echo '$(srcdir)/'`qt/moc_walletframe.cpp

qt/qt_libheptafrancqt_a-moc_walletframe.obj: qt/moc_walletframe.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libheptafrancqt_a-moc_walletframe.obj -MD -MP -MF qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_walletframe.Tpo -c -o qt/qt_libheptafrancqt_a-moc_walletframe.obj `if test -f 'qt/moc_walletframe.cpp'; then $(CYGPATH_W) 'qt/moc_walletframe.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_walletframe.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_walletframe.Tpo qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_walletframe.Po
#	$(AM_V_CXX)source='qt/moc_walletframe.cpp' object='qt/qt_libheptafrancqt_a-moc_walletframe.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libheptafrancqt_a-moc_walletframe.obj `if test -f 'qt/moc_walletframe.cpp'; then $(CYGPATH_W) 'qt/moc_walletframe.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_walletframe.cpp'; fi`

qt/qt_libheptafrancqt_a-moc_walletmodel.o: qt/moc_walletmodel.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libheptafrancqt_a-moc_walletmodel.o -MD -MP -MF qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_walletmodel.Tpo -c -o qt/qt_libheptafrancqt_a-moc_walletmodel.o `test -f 'qt/moc_walletmodel.cpp' || echo '$(srcdir)/'`qt/moc_walletmodel.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_walletmodel.Tpo qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_walletmodel.Po
#	$(AM_V_CXX)source='qt/moc_walletmodel.cpp' object='qt/qt_libheptafrancqt_a-moc_walletmodel.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libheptafrancqt_a-moc_walletmodel.o `test -f 'qt/moc_walletmodel.cpp' || echo '$(srcdir)/'`qt/moc_walletmodel.cpp

qt/qt_libheptafrancqt_a-moc_walletmodel.obj: qt/moc_walletmodel.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libheptafrancqt_a-moc_walletmodel.obj -MD -MP -MF qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_walletmodel.Tpo -c -o qt/qt_libheptafrancqt_a-moc_walletmodel.obj `if test -f 'qt/moc_walletmodel.cpp'; then $(CYGPATH_W) 'qt/moc_walletmodel.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_walletmodel.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_walletmodel.Tpo qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_walletmodel.Po
#	$(AM_V_CXX)source='qt/moc_walletmodel.cpp' object='qt/qt_libheptafrancqt_a-moc_walletmodel.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libheptafrancqt_a-moc_walletmodel.obj `if test -f 'qt/moc_walletmodel.cpp'; then $(CYGPATH_W) 'qt/moc_walletmodel.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_walletmodel.cpp'; fi`

qt/qt_libheptafrancqt_a-moc_walletview.o: qt/moc_walletview.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libheptafrancqt_a-moc_walletview.o -MD -MP -MF qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_walletview.Tpo -c -o qt/qt_libheptafrancqt_a-moc_walletview.o `test -f 'qt/moc_walletview.cpp' || echo '$(srcdir)/'`qt/moc_walletview.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_walletview.Tpo qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_walletview.Po
#	$(AM_V_CXX)source='qt/moc_walletview.cpp' object='qt/qt_libheptafrancqt_a-moc_walletview.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libheptafrancqt_a-moc_walletview.o `test -f 'qt/moc_walletview.cpp' || echo '$(srcdir)/'`qt/moc_walletview.cpp

qt/qt_libheptafrancqt_a-moc_walletview.obj: qt/moc_walletview.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libheptafrancqt_a-moc_walletview.obj -MD -MP -MF qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_walletview.Tpo -c -o qt/qt_libheptafrancqt_a-moc_walletview.obj `if test -f 'qt/moc_walletview.cpp'; then $(CYGPATH_W) 'qt/moc_walletview.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_walletview.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_walletview.Tpo qt/$(DEPDIR)/qt_libheptafrancqt_a-moc_walletview.Po
#	$(AM_V_CXX)source='qt/moc_walletview.cpp' object='qt/qt_libheptafrancqt_a-moc_walletview.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libheptafrancqt_a-moc_walletview.obj `if test -f 'qt/moc_walletview.cpp'; then $(CYGPATH_W) 'qt/moc_walletview.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_walletview.cpp'; fi`

qt/qt_libheptafrancqt_a-paymentrequest.pb.o: qt/paymentrequest.pb.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libheptafrancqt_a-paymentrequest.pb.o -MD -MP -MF qt/$(DEPDIR)/qt_libheptafrancqt_a-paymentrequest.pb.Tpo -c -o qt/qt_libheptafrancqt_a-paymentrequest.pb.o `test -f 'qt/paymentrequest.pb.cc' || echo '$(srcdir)/'`qt/paymentrequest.pb.cc
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libheptafrancqt_a-paymentrequest.pb.Tpo qt/$(DEPDIR)/qt_libheptafrancqt_a-paymentrequest.pb.Po
#	$(AM_V_CXX)source='qt/paymentrequest.pb.cc' object='qt/qt_libheptafrancqt_a-paymentrequest.pb.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libheptafrancqt_a-paymentrequest.pb.o `test -f 'qt/paymentrequest.pb.cc' || echo '$(srcdir)/'`qt/paymentrequest.pb.cc

qt/qt_libheptafrancqt_a-paymentrequest.pb.obj: qt/paymentrequest.pb.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libheptafrancqt_a-paymentrequest.pb.obj -MD -MP -MF qt/$(DEPDIR)/qt_libheptafrancqt_a-paymentrequest.pb.Tpo -c -o qt/qt_libheptafrancqt_a-paymentrequest.pb.obj `if test -f 'qt/paymentrequest.pb.cc'; then $(CYGPATH_W) 'qt/paymentrequest.pb.cc'; else $(CYGPATH_W) '$(srcdir)/qt/paymentrequest.pb.cc'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libheptafrancqt_a-paymentrequest.pb.Tpo qt/$(DEPDIR)/qt_libheptafrancqt_a-paymentrequest.pb.Po
#	$(AM_V_CXX)source='qt/paymentrequest.pb.cc' object='qt/qt_libheptafrancqt_a-paymentrequest.pb.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libheptafrancqt_a-paymentrequest.pb.obj `if test -f 'qt/paymentrequest.pb.cc'; then $(CYGPATH_W) 'qt/paymentrequest.pb.cc'; else $(CYGPATH_W) '$(srcdir)/qt/paymentrequest.pb.cc'; fi`

qt/qt_libheptafrancqt_a-qrc_heptafranc.o: qt/qrc_heptafranc.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libheptafrancqt_a-qrc_heptafranc.o -MD -MP -MF qt/$(DEPDIR)/qt_libheptafrancqt_a-qrc_heptafranc.Tpo -c -o qt/qt_libheptafrancqt_a-qrc_heptafranc.o `test -f 'qt/qrc_heptafranc.cpp' || echo '$(srcdir)/'`qt/qrc_heptafranc.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libheptafrancqt_a-qrc_heptafranc.Tpo qt/$(DEPDIR)/qt_libheptafrancqt_a-qrc_heptafranc.Po
#	$(AM_V_CXX)source='qt/qrc_heptafranc.cpp' object='qt/qt_libheptafrancqt_a-qrc_heptafranc.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libheptafrancqt_a-qrc_heptafranc.o `test -f 'qt/qrc_heptafranc.cpp' || echo '$(srcdir)/'`qt/qrc_heptafranc.cpp

qt/qt_libheptafrancqt_a-qrc_heptafranc.obj: qt/qrc_heptafranc.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libheptafrancqt_a-qrc_heptafranc.obj -MD -MP -MF qt/$(DEPDIR)/qt_libheptafrancqt_a-qrc_heptafranc.Tpo -c -o qt/qt_libheptafrancqt_a-qrc_heptafranc.obj `if test -f 'qt/qrc_heptafranc.cpp'; then $(CYGPATH_W) 'qt/qrc_heptafranc.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/qrc_heptafranc.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libheptafrancqt_a-qrc_heptafranc.Tpo qt/$(DEPDIR)/qt_libheptafrancqt_a-qrc_heptafranc.Po
#	$(AM_V_CXX)source='qt/qrc_heptafranc.cpp' object='qt/qt_libheptafrancqt_a-qrc_heptafranc.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libheptafrancqt_a-qrc_heptafranc.obj `if test -f 'qt/qrc_heptafranc.cpp'; then $(CYGPATH_W) 'qt/qrc_heptafranc.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/qrc_heptafranc.cpp'; fi`

qt/qt_libheptafrancqt_a-qrc_heptafranc_locale.o: qt/qrc_heptafranc_locale.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libheptafrancqt_a-qrc_heptafranc_locale.o -MD -MP -MF qt/$(DEPDIR)/qt_libheptafrancqt_a-qrc_heptafranc_locale.Tpo -c -o qt/qt_libheptafrancqt_a-qrc_heptafranc_locale.o `test -f 'qt/qrc_heptafranc_locale.cpp' || echo '$(srcdir)/'`qt/qrc_heptafranc_locale.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libheptafrancqt_a-qrc_heptafranc_locale.Tpo qt/$(DEPDIR)/qt_libheptafrancqt_a-qrc_heptafranc_locale.Po
#	$(AM_V_CXX)source='qt/qrc_heptafranc_locale.cpp' object='qt/qt_libheptafrancqt_a-qrc_heptafranc_locale.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libheptafrancqt_a-qrc_heptafranc_locale.o `test -f 'qt/qrc_heptafranc_locale.cpp' || echo '$(srcdir)/'`qt/qrc_heptafranc_locale.cpp

qt/qt_libheptafrancqt_a-qrc_heptafranc_locale.obj: qt/qrc_heptafranc_locale.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libheptafrancqt_a-qrc_heptafranc_locale.obj -MD -MP -MF qt/$(DEPDIR)/qt_libheptafrancqt_a-qrc_heptafranc_locale.Tpo -c -o qt/qt_libheptafrancqt_a-qrc_heptafranc_locale.obj `if test -f 'qt/qrc_heptafranc_locale.cpp'; then $(CYGPATH_W) 'qt/qrc_heptafranc_locale.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/qrc_heptafranc_locale.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libheptafrancqt_a-qrc_heptafranc_locale.Tpo qt/$(DEPDIR)/qt_libheptafrancqt_a-qrc_heptafranc_locale.Po
#	$(AM_V_CXX)source='qt/qrc_heptafranc_locale.cpp' object='qt/qt_libheptafrancqt_a-qrc_heptafranc_locale.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libheptafrancqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libheptafrancqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libheptafrancqt_a-qrc_heptafranc_locale.obj `if test -f 'qt/qrc_heptafranc_locale.cpp'; then $(CYGPATH_W) 'qt/qrc_heptafranc_locale.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/qrc_heptafranc_locale.cpp'; fi`

crypto/libheptafrancconsensus_la-aes.lo: crypto/aes.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafrancconsensus_la_CPPFLAGS) $(CPPFLAGS) $(libheptafrancconsensus_la_CXXFLAGS) $(CXXFLAGS) -MT crypto/libheptafrancconsensus_la-aes.lo -MD -MP -MF crypto/$(DEPDIR)/libheptafrancconsensus_la-aes.Tpo -c -o crypto/libheptafrancconsensus_la-aes.lo `test -f 'crypto/aes.cpp' || echo '$(srcdir)/'`crypto/aes.cpp
	$(AM_V_at)$(am__mv) crypto/$(DEPDIR)/libheptafrancconsensus_la-aes.Tpo crypto/$(DEPDIR)/libheptafrancconsensus_la-aes.Plo
#	$(AM_V_CXX)source='crypto/aes.cpp' object='crypto/libheptafrancconsensus_la-aes.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafrancconsensus_la_CPPFLAGS) $(CPPFLAGS) $(libheptafrancconsensus_la_CXXFLAGS) $(CXXFLAGS) -c -o crypto/libheptafrancconsensus_la-aes.lo `test -f 'crypto/aes.cpp' || echo '$(srcdir)/'`crypto/aes.cpp

crypto/libheptafrancconsensus_la-chacha20.lo: crypto/chacha20.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafrancconsensus_la_CPPFLAGS) $(CPPFLAGS) $(libheptafrancconsensus_la_CXXFLAGS) $(CXXFLAGS) -MT crypto/libheptafrancconsensus_la-chacha20.lo -MD -MP -MF crypto/$(DEPDIR)/libheptafrancconsensus_la-chacha20.Tpo -c -o crypto/libheptafrancconsensus_la-chacha20.lo `test -f 'crypto/chacha20.cpp' || echo '$(srcdir)/'`crypto/chacha20.cpp
	$(AM_V_at)$(am__mv) crypto/$(DEPDIR)/libheptafrancconsensus_la-chacha20.Tpo crypto/$(DEPDIR)/libheptafrancconsensus_la-chacha20.Plo
#	$(AM_V_CXX)source='crypto/chacha20.cpp' object='crypto/libheptafrancconsensus_la-chacha20.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafrancconsensus_la_CPPFLAGS) $(CPPFLAGS) $(libheptafrancconsensus_la_CXXFLAGS) $(CXXFLAGS) -c -o crypto/libheptafrancconsensus_la-chacha20.lo `test -f 'crypto/chacha20.cpp' || echo '$(srcdir)/'`crypto/chacha20.cpp

crypto/libheptafrancconsensus_la-hmac_sha256.lo: crypto/hmac_sha256.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafrancconsensus_la_CPPFLAGS) $(CPPFLAGS) $(libheptafrancconsensus_la_CXXFLAGS) $(CXXFLAGS) -MT crypto/libheptafrancconsensus_la-hmac_sha256.lo -MD -MP -MF crypto/$(DEPDIR)/libheptafrancconsensus_la-hmac_sha256.Tpo -c -o crypto/libheptafrancconsensus_la-hmac_sha256.lo `test -f 'crypto/hmac_sha256.cpp' || echo '$(srcdir)/'`crypto/hmac_sha256.cpp
	$(AM_V_at)$(am__mv) crypto/$(DEPDIR)/libheptafrancconsensus_la-hmac_sha256.Tpo crypto/$(DEPDIR)/libheptafrancconsensus_la-hmac_sha256.Plo
#	$(AM_V_CXX)source='crypto/hmac_sha256.cpp' object='crypto/libheptafrancconsensus_la-hmac_sha256.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafrancconsensus_la_CPPFLAGS) $(CPPFLAGS) $(libheptafrancconsensus_la_CXXFLAGS) $(CXXFLAGS) -c -o crypto/libheptafrancconsensus_la-hmac_sha256.lo `test -f 'crypto/hmac_sha256.cpp' || echo '$(srcdir)/'`crypto/hmac_sha256.cpp

crypto/libheptafrancconsensus_la-hmac_sha512.lo: crypto/hmac_sha512.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafrancconsensus_la_CPPFLAGS) $(CPPFLAGS) $(libheptafrancconsensus_la_CXXFLAGS) $(CXXFLAGS) -MT crypto/libheptafrancconsensus_la-hmac_sha512.lo -MD -MP -MF crypto/$(DEPDIR)/libheptafrancconsensus_la-hmac_sha512.Tpo -c -o crypto/libheptafrancconsensus_la-hmac_sha512.lo `test -f 'crypto/hmac_sha512.cpp' || echo '$(srcdir)/'`crypto/hmac_sha512.cpp
	$(AM_V_at)$(am__mv) crypto/$(DEPDIR)/libheptafrancconsensus_la-hmac_sha512.Tpo crypto/$(DEPDIR)/libheptafrancconsensus_la-hmac_sha512.Plo
#	$(AM_V_CXX)source='crypto/hmac_sha512.cpp' object='crypto/libheptafrancconsensus_la-hmac_sha512.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafrancconsensus_la_CPPFLAGS) $(CPPFLAGS) $(libheptafrancconsensus_la_CXXFLAGS) $(CXXFLAGS) -c -o crypto/libheptafrancconsensus_la-hmac_sha512.lo `test -f 'crypto/hmac_sha512.cpp' || echo '$(srcdir)/'`crypto/hmac_sha512.cpp

crypto/libheptafrancconsensus_la-ripemd160.lo: crypto/ripemd160.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafrancconsensus_la_CPPFLAGS) $(CPPFLAGS) $(libheptafrancconsensus_la_CXXFLAGS) $(CXXFLAGS) -MT crypto/libheptafrancconsensus_la-ripemd160.lo -MD -MP -MF crypto/$(DEPDIR)/libheptafrancconsensus_la-ripemd160.Tpo -c -o crypto/libheptafrancconsensus_la-ripemd160.lo `test -f 'crypto/ripemd160.cpp' || echo '$(srcdir)/'`crypto/ripemd160.cpp
	$(AM_V_at)$(am__mv) crypto/$(DEPDIR)/libheptafrancconsensus_la-ripemd160.Tpo crypto/$(DEPDIR)/libheptafrancconsensus_la-ripemd160.Plo
#	$(AM_V_CXX)source='crypto/ripemd160.cpp' object='crypto/libheptafrancconsensus_la-ripemd160.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafrancconsensus_la_CPPFLAGS) $(CPPFLAGS) $(libheptafrancconsensus_la_CXXFLAGS) $(CXXFLAGS) -c -o crypto/libheptafrancconsensus_la-ripemd160.lo `test -f 'crypto/ripemd160.cpp' || echo '$(srcdir)/'`crypto/ripemd160.cpp

crypto/libheptafrancconsensus_la-sha1.lo: crypto/sha1.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafrancconsensus_la_CPPFLAGS) $(CPPFLAGS) $(libheptafrancconsensus_la_CXXFLAGS) $(CXXFLAGS) -MT crypto/libheptafrancconsensus_la-sha1.lo -MD -MP -MF crypto/$(DEPDIR)/libheptafrancconsensus_la-sha1.Tpo -c -o crypto/libheptafrancconsensus_la-sha1.lo `test -f 'crypto/sha1.cpp' || echo '$(srcdir)/'`crypto/sha1.cpp
	$(AM_V_at)$(am__mv) crypto/$(DEPDIR)/libheptafrancconsensus_la-sha1.Tpo crypto/$(DEPDIR)/libheptafrancconsensus_la-sha1.Plo
#	$(AM_V_CXX)source='crypto/sha1.cpp' object='crypto/libheptafrancconsensus_la-sha1.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafrancconsensus_la_CPPFLAGS) $(CPPFLAGS) $(libheptafrancconsensus_la_CXXFLAGS) $(CXXFLAGS) -c -o crypto/libheptafrancconsensus_la-sha1.lo `test -f 'crypto/sha1.cpp' || echo '$(srcdir)/'`crypto/sha1.cpp

crypto/libheptafrancconsensus_la-sha256.lo: crypto/sha256.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafrancconsensus_la_CPPFLAGS) $(CPPFLAGS) $(libheptafrancconsensus_la_CXXFLAGS) $(CXXFLAGS) -MT crypto/libheptafrancconsensus_la-sha256.lo -MD -MP -MF crypto/$(DEPDIR)/libheptafrancconsensus_la-sha256.Tpo -c -o crypto/libheptafrancconsensus_la-sha256.lo `test -f 'crypto/sha256.cpp' || echo '$(srcdir)/'`crypto/sha256.cpp
	$(AM_V_at)$(am__mv) crypto/$(DEPDIR)/libheptafrancconsensus_la-sha256.Tpo crypto/$(DEPDIR)/libheptafrancconsensus_la-sha256.Plo
#	$(AM_V_CXX)source='crypto/sha256.cpp' object='crypto/libheptafrancconsensus_la-sha256.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafrancconsensus_la_CPPFLAGS) $(CPPFLAGS) $(libheptafrancconsensus_la_CXXFLAGS) $(CXXFLAGS) -c -o crypto/libheptafrancconsensus_la-sha256.lo `test -f 'crypto/sha256.cpp' || echo '$(srcdir)/'`crypto/sha256.cpp

crypto/libheptafrancconsensus_la-sha512.lo: crypto/sha512.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafrancconsensus_la_CPPFLAGS) $(CPPFLAGS) $(libheptafrancconsensus_la_CXXFLAGS) $(CXXFLAGS) -MT crypto/libheptafrancconsensus_la-sha512.lo -MD -MP -MF crypto/$(DEPDIR)/libheptafrancconsensus_la-sha512.Tpo -c -o crypto/libheptafrancconsensus_la-sha512.lo `test -f 'crypto/sha512.cpp' || echo '$(srcdir)/'`crypto/sha512.cpp
	$(AM_V_at)$(am__mv) crypto/$(DEPDIR)/libheptafrancconsensus_la-sha512.Tpo crypto/$(DEPDIR)/libheptafrancconsensus_la-sha512.Plo
#	$(AM_V_CXX)source='crypto/sha512.cpp' object='crypto/libheptafrancconsensus_la-sha512.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafrancconsensus_la_CPPFLAGS) $(CPPFLAGS) $(libheptafrancconsensus_la_CXXFLAGS) $(CXXFLAGS) -c -o crypto/libheptafrancconsensus_la-sha512.lo `test -f 'crypto/sha512.cpp' || echo '$(srcdir)/'`crypto/sha512.cpp

crypto/libheptafrancconsensus_la-sha256_sse4.lo: crypto/sha256_sse4.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafrancconsensus_la_CPPFLAGS) $(CPPFLAGS) $(libheptafrancconsensus_la_CXXFLAGS) $(CXXFLAGS) -MT crypto/libheptafrancconsensus_la-sha256_sse4.lo -MD -MP -MF crypto/$(DEPDIR)/libheptafrancconsensus_la-sha256_sse4.Tpo -c -o crypto/libheptafrancconsensus_la-sha256_sse4.lo `test -f 'crypto/sha256_sse4.cpp' || echo '$(srcdir)/'`crypto/sha256_sse4.cpp
	$(AM_V_at)$(am__mv) crypto/$(DEPDIR)/libheptafrancconsensus_la-sha256_sse4.Tpo crypto/$(DEPDIR)/libheptafrancconsensus_la-sha256_sse4.Plo
#	$(AM_V_CXX)source='crypto/sha256_sse4.cpp' object='crypto/libheptafrancconsensus_la-sha256_sse4.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafrancconsensus_la_CPPFLAGS) $(CPPFLAGS) $(libheptafrancconsensus_la_CXXFLAGS) $(CXXFLAGS) -c -o crypto/libheptafrancconsensus_la-sha256_sse4.lo `test -f 'crypto/sha256_sse4.cpp' || echo '$(srcdir)/'`crypto/sha256_sse4.cpp

libheptafrancconsensus_la-arith_uint256.lo: arith_uint256.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafrancconsensus_la_CPPFLAGS) $(CPPFLAGS) $(libheptafrancconsensus_la_CXXFLAGS) $(CXXFLAGS) -MT libheptafrancconsensus_la-arith_uint256.lo -MD -MP -MF $(DEPDIR)/libheptafrancconsensus_la-arith_uint256.Tpo -c -o libheptafrancconsensus_la-arith_uint256.lo `test -f 'arith_uint256.cpp' || echo '$(srcdir)/'`arith_uint256.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libheptafrancconsensus_la-arith_uint256.Tpo $(DEPDIR)/libheptafrancconsensus_la-arith_uint256.Plo
#	$(AM_V_CXX)source='arith_uint256.cpp' object='libheptafrancconsensus_la-arith_uint256.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafrancconsensus_la_CPPFLAGS) $(CPPFLAGS) $(libheptafrancconsensus_la_CXXFLAGS) $(CXXFLAGS) -c -o libheptafrancconsensus_la-arith_uint256.lo `test -f 'arith_uint256.cpp' || echo '$(srcdir)/'`arith_uint256.cpp

consensus/libheptafrancconsensus_la-merkle.lo: consensus/merkle.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafrancconsensus_la_CPPFLAGS) $(CPPFLAGS) $(libheptafrancconsensus_la_CXXFLAGS) $(CXXFLAGS) -MT consensus/libheptafrancconsensus_la-merkle.lo -MD -MP -MF consensus/$(DEPDIR)/libheptafrancconsensus_la-merkle.Tpo -c -o consensus/libheptafrancconsensus_la-merkle.lo `test -f 'consensus/merkle.cpp' || echo '$(srcdir)/'`consensus/merkle.cpp
	$(AM_V_at)$(am__mv) consensus/$(DEPDIR)/libheptafrancconsensus_la-merkle.Tpo consensus/$(DEPDIR)/libheptafrancconsensus_la-merkle.Plo
#	$(AM_V_CXX)source='consensus/merkle.cpp' object='consensus/libheptafrancconsensus_la-merkle.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafrancconsensus_la_CPPFLAGS) $(CPPFLAGS) $(libheptafrancconsensus_la_CXXFLAGS) $(CXXFLAGS) -c -o consensus/libheptafrancconsensus_la-merkle.lo `test -f 'consensus/merkle.cpp' || echo '$(srcdir)/'`consensus/merkle.cpp

libheptafrancconsensus_la-hash.lo: hash.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafrancconsensus_la_CPPFLAGS) $(CPPFLAGS) $(libheptafrancconsensus_la_CXXFLAGS) $(CXXFLAGS) -MT libheptafrancconsensus_la-hash.lo -MD -MP -MF $(DEPDIR)/libheptafrancconsensus_la-hash.Tpo -c -o libheptafrancconsensus_la-hash.lo `test -f 'hash.cpp' || echo '$(srcdir)/'`hash.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libheptafrancconsensus_la-hash.Tpo $(DEPDIR)/libheptafrancconsensus_la-hash.Plo
#	$(AM_V_CXX)source='hash.cpp' object='libheptafrancconsensus_la-hash.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafrancconsensus_la_CPPFLAGS) $(CPPFLAGS) $(libheptafrancconsensus_la_CXXFLAGS) $(CXXFLAGS) -c -o libheptafrancconsensus_la-hash.lo `test -f 'hash.cpp' || echo '$(srcdir)/'`hash.cpp

primitives/libheptafrancconsensus_la-block.lo: primitives/block.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafrancconsensus_la_CPPFLAGS) $(CPPFLAGS) $(libheptafrancconsensus_la_CXXFLAGS) $(CXXFLAGS) -MT primitives/libheptafrancconsensus_la-block.lo -MD -MP -MF primitives/$(DEPDIR)/libheptafrancconsensus_la-block.Tpo -c -o primitives/libheptafrancconsensus_la-block.lo `test -f 'primitives/block.cpp' || echo '$(srcdir)/'`primitives/block.cpp
	$(AM_V_at)$(am__mv) primitives/$(DEPDIR)/libheptafrancconsensus_la-block.Tpo primitives/$(DEPDIR)/libheptafrancconsensus_la-block.Plo
#	$(AM_V_CXX)source='primitives/block.cpp' object='primitives/libheptafrancconsensus_la-block.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafrancconsensus_la_CPPFLAGS) $(CPPFLAGS) $(libheptafrancconsensus_la_CXXFLAGS) $(CXXFLAGS) -c -o primitives/libheptafrancconsensus_la-block.lo `test -f 'primitives/block.cpp' || echo '$(srcdir)/'`primitives/block.cpp

primitives/libheptafrancconsensus_la-transaction.lo: primitives/transaction.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafrancconsensus_la_CPPFLAGS) $(CPPFLAGS) $(libheptafrancconsensus_la_CXXFLAGS) $(CXXFLAGS) -MT primitives/libheptafrancconsensus_la-transaction.lo -MD -MP -MF primitives/$(DEPDIR)/libheptafrancconsensus_la-transaction.Tpo -c -o primitives/libheptafrancconsensus_la-transaction.lo `test -f 'primitives/transaction.cpp' || echo '$(srcdir)/'`primitives/transaction.cpp
	$(AM_V_at)$(am__mv) primitives/$(DEPDIR)/libheptafrancconsensus_la-transaction.Tpo primitives/$(DEPDIR)/libheptafrancconsensus_la-transaction.Plo
#	$(AM_V_CXX)source='primitives/transaction.cpp' object='primitives/libheptafrancconsensus_la-transaction.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafrancconsensus_la_CPPFLAGS) $(CPPFLAGS) $(libheptafrancconsensus_la_CXXFLAGS) $(CXXFLAGS) -c -o primitives/libheptafrancconsensus_la-transaction.lo `test -f 'primitives/transaction.cpp' || echo '$(srcdir)/'`primitives/transaction.cpp

libheptafrancconsensus_la-pubkey.lo: pubkey.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafrancconsensus_la_CPPFLAGS) $(CPPFLAGS) $(libheptafrancconsensus_la_CXXFLAGS) $(CXXFLAGS) -MT libheptafrancconsensus_la-pubkey.lo -MD -MP -MF $(DEPDIR)/libheptafrancconsensus_la-pubkey.Tpo -c -o libheptafrancconsensus_la-pubkey.lo `test -f 'pubkey.cpp' || echo '$(srcdir)/'`pubkey.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libheptafrancconsensus_la-pubkey.Tpo $(DEPDIR)/libheptafrancconsensus_la-pubkey.Plo
#	$(AM_V_CXX)source='pubkey.cpp' object='libheptafrancconsensus_la-pubkey.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafrancconsensus_la_CPPFLAGS) $(CPPFLAGS) $(libheptafrancconsensus_la_CXXFLAGS) $(CXXFLAGS) -c -o libheptafrancconsensus_la-pubkey.lo `test -f 'pubkey.cpp' || echo '$(srcdir)/'`pubkey.cpp

script/libheptafrancconsensus_la-heptafrancconsensus.lo: script/heptafrancconsensus.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafrancconsensus_la_CPPFLAGS) $(CPPFLAGS) $(libheptafrancconsensus_la_CXXFLAGS) $(CXXFLAGS) -MT script/libheptafrancconsensus_la-heptafrancconsensus.lo -MD -MP -MF script/$(DEPDIR)/libheptafrancconsensus_la-heptafrancconsensus.Tpo -c -o script/libheptafrancconsensus_la-heptafrancconsensus.lo `test -f 'script/heptafrancconsensus.cpp' || echo '$(srcdir)/'`script/heptafrancconsensus.cpp
	$(AM_V_at)$(am__mv) script/$(DEPDIR)/libheptafrancconsensus_la-heptafrancconsensus.Tpo script/$(DEPDIR)/libheptafrancconsensus_la-heptafrancconsensus.Plo
#	$(AM_V_CXX)source='script/heptafrancconsensus.cpp' object='script/libheptafrancconsensus_la-heptafrancconsensus.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafrancconsensus_la_CPPFLAGS) $(CPPFLAGS) $(libheptafrancconsensus_la_CXXFLAGS) $(CXXFLAGS) -c -o script/libheptafrancconsensus_la-heptafrancconsensus.lo `test -f 'script/heptafrancconsensus.cpp' || echo '$(srcdir)/'`script/heptafrancconsensus.cpp

script/libheptafrancconsensus_la-interpreter.lo: script/interpreter.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafrancconsensus_la_CPPFLAGS) $(CPPFLAGS) $(libheptafrancconsensus_la_CXXFLAGS) $(CXXFLAGS) -MT script/libheptafrancconsensus_la-interpreter.lo -MD -MP -MF script/$(DEPDIR)/libheptafrancconsensus_la-interpreter.Tpo -c -o script/libheptafrancconsensus_la-interpreter.lo `test -f 'script/interpreter.cpp' || echo '$(srcdir)/'`script/interpreter.cpp
	$(AM_V_at)$(am__mv) script/$(DEPDIR)/libheptafrancconsensus_la-interpreter.Tpo script/$(DEPDIR)/libheptafrancconsensus_la-interpreter.Plo
#	$(AM_V_CXX)source='script/interpreter.cpp' object='script/libheptafrancconsensus_la-interpreter.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafrancconsensus_la_CPPFLAGS) $(CPPFLAGS) $(libheptafrancconsensus_la_CXXFLAGS) $(CXXFLAGS) -c -o script/libheptafrancconsensus_la-interpreter.lo `test -f 'script/interpreter.cpp' || echo '$(srcdir)/'`script/interpreter.cpp

script/libheptafrancconsensus_la-script.lo: script/script.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafrancconsensus_la_CPPFLAGS) $(CPPFLAGS) $(libheptafrancconsensus_la_CXXFLAGS) $(CXXFLAGS) -MT script/libheptafrancconsensus_la-script.lo -MD -MP -MF script/$(DEPDIR)/libheptafrancconsensus_la-script.Tpo -c -o script/libheptafrancconsensus_la-script.lo `test -f 'script/script.cpp' || echo '$(srcdir)/'`script/script.cpp
	$(AM_V_at)$(am__mv) script/$(DEPDIR)/libheptafrancconsensus_la-script.Tpo script/$(DEPDIR)/libheptafrancconsensus_la-script.Plo
#	$(AM_V_CXX)source='script/script.cpp' object='script/libheptafrancconsensus_la-script.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafrancconsensus_la_CPPFLAGS) $(CPPFLAGS) $(libheptafrancconsensus_la_CXXFLAGS) $(CXXFLAGS) -c -o script/libheptafrancconsensus_la-script.lo `test -f 'script/script.cpp' || echo '$(srcdir)/'`script/script.cpp

script/libheptafrancconsensus_la-script_error.lo: script/script_error.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafrancconsensus_la_CPPFLAGS) $(CPPFLAGS) $(libheptafrancconsensus_la_CXXFLAGS) $(CXXFLAGS) -MT script/libheptafrancconsensus_la-script_error.lo -MD -MP -MF script/$(DEPDIR)/libheptafrancconsensus_la-script_error.Tpo -c -o script/libheptafrancconsensus_la-script_error.lo `test -f 'script/script_error.cpp' || echo '$(srcdir)/'`script/script_error.cpp
	$(AM_V_at)$(am__mv) script/$(DEPDIR)/libheptafrancconsensus_la-script_error.Tpo script/$(DEPDIR)/libheptafrancconsensus_la-script_error.Plo
#	$(AM_V_CXX)source='script/script_error.cpp' object='script/libheptafrancconsensus_la-script_error.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafrancconsensus_la_CPPFLAGS) $(CPPFLAGS) $(libheptafrancconsensus_la_CXXFLAGS) $(CXXFLAGS) -c -o script/libheptafrancconsensus_la-script_error.lo `test -f 'script/script_error.cpp' || echo '$(srcdir)/'`script/script_error.cpp

libheptafrancconsensus_la-uint256.lo: uint256.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafrancconsensus_la_CPPFLAGS) $(CPPFLAGS) $(libheptafrancconsensus_la_CXXFLAGS) $(CXXFLAGS) -MT libheptafrancconsensus_la-uint256.lo -MD -MP -MF $(DEPDIR)/libheptafrancconsensus_la-uint256.Tpo -c -o libheptafrancconsensus_la-uint256.lo `test -f 'uint256.cpp' || echo '$(srcdir)/'`uint256.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libheptafrancconsensus_la-uint256.Tpo $(DEPDIR)/libheptafrancconsensus_la-uint256.Plo
#	$(AM_V_CXX)source='uint256.cpp' object='libheptafrancconsensus_la-uint256.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafrancconsensus_la_CPPFLAGS) $(CPPFLAGS) $(libheptafrancconsensus_la_CXXFLAGS) $(CXXFLAGS) -c -o libheptafrancconsensus_la-uint256.lo `test -f 'uint256.cpp' || echo '$(srcdir)/'`uint256.cpp

libheptafrancconsensus_la-utilstrencodings.lo: utilstrencodings.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafrancconsensus_la_CPPFLAGS) $(CPPFLAGS) $(libheptafrancconsensus_la_CXXFLAGS) $(CXXFLAGS) -MT libheptafrancconsensus_la-utilstrencodings.lo -MD -MP -MF $(DEPDIR)/libheptafrancconsensus_la-utilstrencodings.Tpo -c -o libheptafrancconsensus_la-utilstrencodings.lo `test -f 'utilstrencodings.cpp' || echo '$(srcdir)/'`utilstrencodings.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libheptafrancconsensus_la-utilstrencodings.Tpo $(DEPDIR)/libheptafrancconsensus_la-utilstrencodings.Plo
#	$(AM_V_CXX)source='utilstrencodings.cpp' object='libheptafrancconsensus_la-utilstrencodings.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafrancconsensus_la_CPPFLAGS) $(CPPFLAGS) $(libheptafrancconsensus_la_CXXFLAGS) $(CXXFLAGS) -c -o libheptafrancconsensus_la-utilstrencodings.lo `test -f 'utilstrencodings.cpp' || echo '$(srcdir)/'`utilstrencodings.cpp

compat/libheptafrancconsensus_la-glibc_compat.lo: compat/glibc_compat.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafrancconsensus_la_CPPFLAGS) $(CPPFLAGS) $(libheptafrancconsensus_la_CXXFLAGS) $(CXXFLAGS) -MT compat/libheptafrancconsensus_la-glibc_compat.lo -MD -MP -MF compat/$(DEPDIR)/libheptafrancconsensus_la-glibc_compat.Tpo -c -o compat/libheptafrancconsensus_la-glibc_compat.lo `test -f 'compat/glibc_compat.cpp' || echo '$(srcdir)/'`compat/glibc_compat.cpp
	$(AM_V_at)$(am__mv) compat/$(DEPDIR)/libheptafrancconsensus_la-glibc_compat.Tpo compat/$(DEPDIR)/libheptafrancconsensus_la-glibc_compat.Plo
#	$(AM_V_CXX)source='compat/glibc_compat.cpp' object='compat/libheptafrancconsensus_la-glibc_compat.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheptafrancconsensus_la_CPPFLAGS) $(CPPFLAGS) $(libheptafrancconsensus_la_CXXFLAGS) $(CXXFLAGS) -c -o compat/libheptafrancconsensus_la-glibc_compat.lo `test -f 'compat/glibc_compat.cpp' || echo '$(srcdir)/'`compat/glibc_compat.cpp

bench/bench_bench_heptafranc-bench_heptafranc.o: bench/bench_heptafranc.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_heptafranc_CPPFLAGS) $(CPPFLAGS) $(bench_bench_heptafranc_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bench_heptafranc-bench_heptafranc.o -MD -MP -MF bench/$(DEPDIR)/bench_bench_heptafranc-bench_heptafranc.Tpo -c -o bench/bench_bench_heptafranc-bench_heptafranc.o `test -f 'bench/bench_heptafranc.cpp' || echo '$(srcdir)/'`bench/bench_heptafranc.cpp
	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bench_heptafranc-bench_heptafranc.Tpo bench/$(DEPDIR)/bench_bench_heptafranc-bench_heptafranc.Po
#	$(AM_V_CXX)source='bench/bench_heptafranc.cpp' object='bench/bench_bench_heptafranc-bench_heptafranc.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_heptafranc_CPPFLAGS) $(CPPFLAGS) $(bench_bench_heptafranc_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bench_heptafranc-bench_heptafranc.o `test -f 'bench/bench_heptafranc.cpp' || echo '$(srcdir)/'`bench/bench_heptafranc.cpp

bench/bench_bench_heptafranc-bench_heptafranc.obj: bench/bench_heptafranc.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_heptafranc_CPPFLAGS) $(CPPFLAGS) $(bench_bench_heptafranc_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bench_heptafranc-bench_heptafranc.obj -MD -MP -MF bench/$(DEPDIR)/bench_bench_heptafranc-bench_heptafranc.Tpo -c -o bench/bench_bench_heptafranc-bench_heptafranc.obj `if test -f 'bench/bench_heptafranc.cpp'; then $(CYGPATH_W) 'bench/bench_heptafranc.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/bench_heptafranc.cpp'; fi`
	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bench_heptafranc-bench_heptafranc.Tpo bench/$(DEPDIR)/bench_bench_heptafranc-bench_heptafranc.Po
#	$(AM_V_CXX)source='bench/bench_heptafranc.cpp' object='bench/bench_bench_heptafranc-bench_heptafranc.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_heptafranc_CPPFLAGS) $(CPPFLAGS) $(bench_bench_heptafranc_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bench_heptafranc-bench_heptafranc.obj `if test -f 'bench/bench_heptafranc.cpp'; then $(CYGPATH_W) 'bench/bench_heptafranc.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/bench_heptafranc.cpp'; fi`

bench/bench_bench_heptafranc-bench.o: bench/bench.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_heptafranc_CPPFLAGS) $(CPPFLAGS) $(bench_bench_heptafranc_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bench_heptafranc-bench.o -MD -MP -MF bench/$(DEPDIR)/bench_bench_heptafranc-bench.Tpo -c -o bench/bench_bench_heptafranc-bench.o `test -f 'bench/bench.cpp' || echo '$(srcdir)/'`bench/bench.cpp
	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bench_heptafranc-bench.Tpo bench/$(DEPDIR)/bench_bench_heptafranc-bench.Po
#	$(AM_V_CXX)source='bench/bench.cpp' object='bench/bench_bench_heptafranc-bench.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_heptafranc_CPPFLAGS) $(CPPFLAGS) $(bench_bench_heptafranc_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bench_heptafranc-bench.o `test -f 'bench/bench.cpp' || echo '$(srcdir)/'`bench/bench.cpp

bench/bench_bench_heptafranc-bench.obj: bench/bench.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_heptafranc_CPPFLAGS) $(CPPFLAGS) $(bench_bench_heptafranc_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bench_heptafranc-bench.obj -MD -MP -MF bench/$(DEPDIR)/bench_bench_heptafranc-bench.Tpo -c -o bench/bench_bench_heptafranc-bench.obj `if test -f 'bench/bench.cpp'; then $(CYGPATH_W) 'bench/bench.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/bench.cpp'; fi`
	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bench_heptafranc-bench.Tpo bench/$(DEPDIR)/bench_bench_heptafranc-bench.Po
#	$(AM_V_CXX)source='bench/bench.cpp' object='bench/bench_bench_heptafranc-bench.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_heptafranc_CPPFLAGS) $(CPPFLAGS) $(bench_bench_heptafranc_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bench_heptafranc-bench.obj `if test -f 'bench/bench.cpp'; then $(CYGPATH_W) 'bench/bench.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/bench.cpp'; fi`

bench/bench_bench_heptafranc-block_assemble.o: bench/block_assemble.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_heptafranc_CPPFLAGS) $(CPPFLAGS) $(bench_bench_heptafranc_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bench_heptafranc-block_assemble.o -MD -MP -MF bench/$(DEPDIR)/bench_bench_heptafranc-block_assemble.Tpo -c -o bench/bench_bench_heptafranc-block_assemble.o `test -f 'bench/block_assemble.cpp' || echo '$(srcdir)/'`bench/block_assemble.cpp
	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bench_heptafranc-block_assemble.Tpo bench/$(DEPDIR)/bench_bench_heptafranc-block_assemble.Po
#	$(AM_V_CXX)source='bench/block_assemble.cpp' object='bench/bench_bench_heptafranc-block_assemble.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_heptafranc_CPPFLAGS) $(CPPFLAGS) $(bench_bench_heptafranc_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bench_heptafranc-block_assemble.o `test -f 'bench/block_assemble.cpp' || echo '$(srcdir)/'`bench/block_assemble.cpp

bench/bench_bench_heptafranc-block_assemble.obj: bench/block_assemble.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_heptafranc_CPPFLAGS) $(CPPFLAGS) $(bench_bench_heptafranc_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bench_heptafranc-block_assemble.obj -MD -MP -MF bench/$(DEPDIR)/bench_bench_heptafranc-block_assemble.Tpo -c -o bench/bench_bench_heptafranc-block_assemble.obj `if test -f 'bench/block_assemble.cpp'; then $(CYGPATH_W) 'bench/block_assemble.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/block_assemble.cpp'; fi`
	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bench_heptafranc-block_assemble.Tpo bench/$(DEPDIR)/bench_bench_heptafranc-block_assemble.Po
#	$(AM_V_CXX)source='bench/block_assemble.cpp' object='bench/bench_bench_heptafranc-block_assemble.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_heptafranc_CPPFLAGS) $(CPPFLAGS) $(bench_bench_heptafranc_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bench_heptafranc-block_assemble.obj `if test -f 'bench/block_assemble.cpp'; then $(CYGPATH_W) 'bench/block_assemble.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/block_assemble.cpp'; fi`

bench/bench_bench_heptafranc-checkblock.o: bench/checkblock.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_heptafranc_CPPFLAGS) $(CPPFLAGS) $(bench_bench_heptafranc_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bench_heptafranc-checkblock.o -MD -MP -MF bench/$(DEPDIR)/bench_bench_heptafranc-checkblock.Tpo -c -o bench/bench_bench_heptafranc-checkblock.o `test -f 'bench/checkblock.cpp' || echo '$(srcdir)/'`bench/checkblock.cpp
	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bench_heptafranc-checkblock.Tpo bench/$(DEPDIR)/bench_bench_heptafranc-checkblock.Po
#	$(AM_V_CXX)source='bench/checkblock.cpp' object='bench/bench_bench_heptafranc-checkblock.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_heptafranc_CPPFLAGS) $(CPPFLAGS) $(bench_bench_heptafranc_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bench_heptafranc-checkblock.o `test -f 'bench/checkblock.cpp' || echo '$(srcdir)/'`bench/checkblock.cpp

bench/bench_bench_heptafranc-checkblock.obj: bench/checkblock.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_heptafranc_CPPFLAGS) $(CPPFLAGS) $(bench_bench_heptafranc_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bench_heptafranc-checkblock.obj -MD -MP -MF bench/$(DEPDIR)/bench_bench_heptafranc-checkblock.Tpo -c -o bench/bench_bench_heptafranc-checkblock.obj `if test -f 'bench/checkblock.cpp'; then $(CYGPATH_W) 'bench/checkblock.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/checkblock.cpp'; fi`
	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bench_heptafranc-checkblock.Tpo bench/$(DEPDIR)/bench_bench_heptafranc-checkblock.Po
#	$(AM_V_CXX)source='bench/checkblock.cpp' object='bench/bench_bench_heptafranc-checkblock.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_heptafranc_CPPFLAGS) $(CPPFLAGS) $(bench_bench_heptafranc_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bench_heptafranc-checkblock.obj `if test -f 'bench/checkblock.cpp'; then $(CYGPATH_W) 'bench/checkblock.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/checkblock.cpp'; fi`

bench/bench_bench_heptafranc-checkqueue.o: bench/checkqueue.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_heptafranc_CPPFLAGS) $(CPPFLAGS) $(bench_bench_heptafranc_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bench_heptafranc-checkqueue.o -MD -MP -MF bench/$(DEPDIR)/bench_bench_heptafranc-checkqueue.Tpo -c -o bench/bench_bench_heptafranc-checkqueue.o `test -f 'bench/checkqueue.cpp' || echo '$(srcdir)/'`bench/checkqueue.cpp
	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bench_heptafranc-checkqueue.Tpo bench/$(DEPDIR)/bench_bench_heptafranc-checkqueue.Po
#	$(AM_V_CXX)source='bench/checkqueue.cpp' object='bench/bench_bench_heptafranc-checkqueue.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_heptafranc_CPPFLAGS) $(CPPFLAGS) $(bench_bench_heptafranc_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bench_heptafranc-checkqueue.o `test -f 'bench/checkqueue.cpp' || echo '$(srcdir)/'`bench/checkqueue.cpp

bench/bench_bench_heptafranc-checkqueue.obj: bench/checkqueue.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_heptafranc_CPPFLAGS) $(CPPFLAGS) $(bench_bench_heptafranc_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bench_heptafranc-checkqueue.obj -MD -MP -MF bench/$(DEPDIR)/bench_bench_heptafranc-checkqueue.Tpo -c -o bench/bench_bench_heptafranc-checkqueue.obj `if test -f 'bench/checkqueue.cpp'; then $(CYGPATH_W) 'bench/checkqueue.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/checkqueue.cpp'; fi`
	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bench_heptafranc-checkqueue.Tpo bench/$(DEPDIR)/bench_bench_heptafranc-checkqueue.Po
#	$(AM_V_CXX)source='bench/checkqueue.cpp' object='bench/bench_bench_heptafranc-checkqueue.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_heptafranc_CPPFLAGS) $(CPPFLAGS) $(bench_bench_heptafranc_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bench_heptafranc-checkqueue.obj `if test -f 'bench/checkqueue.cpp'; then $(CYGPATH_W) 'bench/checkqueue.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/checkqueue.cpp'; fi`

bench/bench_bench_heptafranc-examples.o: bench/examples.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_heptafranc_CPPFLAGS) $(CPPFLAGS) $(bench_bench_heptafranc_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bench_heptafranc-examples.o -MD -MP -MF bench/$(DEPDIR)/bench_bench_heptafranc-examples.Tpo -c -o bench/bench_bench_heptafranc-examples.o `test -f 'bench/examples.cpp' || echo '$(srcdir)/'`bench/examples.cpp
	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bench_heptafranc-examples.Tpo bench/$(DEPDIR)/bench_bench_heptafranc-examples.Po
#	$(AM_V_CXX)source='bench/examples.cpp' object='bench/bench_bench_heptafranc-examples.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_heptafranc_CPPFLAGS) $(CPPFLAGS) $(bench_bench_heptafranc_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bench_heptafranc-examples.o `test -f 'bench/examples.cpp' || echo '$(srcdir)/'`bench/examples.cpp

bench/bench_bench_heptafranc-examples.obj: bench/examples.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_heptafranc_CPPFLAGS) $(CPPFLAGS) $(bench_bench_heptafranc_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bench_heptafranc-examples.obj -MD -MP -MF bench/$(DEPDIR)/bench_bench_heptafranc-examples.Tpo -c -o bench/bench_bench_heptafranc-examples.obj `if test -f 'bench/examples.cpp'; then $(CYGPATH_W) 'bench/examples.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/examples.cpp'; fi`
	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bench_heptafranc-examples.Tpo bench/$(DEPDIR)/bench_bench_heptafranc-examples.Po
#	$(AM_V_CXX)source='bench/examples.cpp' object='bench/bench_bench_heptafranc-examples.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_heptafranc_CPPFLAGS) $(CPPFLAGS) $(bench_bench_heptafranc_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bench_heptafranc-examples.obj `if test -f 'bench/examples.cpp'; then $(CYGPATH_W) 'bench/examples.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/examples.cpp'; fi`

bench/bench_bench_heptafranc-rollingbloom.o: bench/rollingbloom.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_heptafranc_CPPFLAGS) $(CPPFLAGS) $(bench_bench_heptafranc_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bench_heptafranc-rollingbloom.o -MD -MP -MF bench/$(DEPDIR)/bench_bench_heptafranc-rollingbloom.Tpo -c -o bench/bench_bench_heptafranc-rollingbloom.o `test -f 'bench/rollingbloom.cpp' || echo '$(srcdir)/'`bench/rollingbloom.cpp
	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bench_heptafranc-rollingbloom.Tpo bench/$(DEPDIR)/bench_bench_heptafranc-rollingbloom.Po
#	$(AM_V_CXX)source='bench/rollingbloom.cpp' object='bench/bench_bench_heptafranc-rollingbloom.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_heptafranc_CPPFLAGS) $(CPPFLAGS) $(bench_bench_heptafranc_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bench_heptafranc-rollingbloom.o `test -f 'bench/rollingbloom.cpp' || echo '$(srcdir)/'`bench/rollingbloom.cpp

bench/bench_bench_heptafranc-rollingbloom.obj: bench/rollingbloom.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_heptafranc_CPPFLAGS) $(CPPFLAGS) $(bench_bench_heptafranc_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bench_heptafranc-rollingbloom.obj -MD -MP -MF bench/$(DEPDIR)/bench_bench_heptafranc-rollingbloom.Tpo -c -o bench/bench_bench_heptafranc-rollingbloom.obj `if test -f 'bench/rollingbloom.cpp'; then $(CYGPATH_W) 'bench/rollingbloom.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/rollingbloom.cpp'; fi`
	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bench_heptafranc-rollingbloom.Tpo bench/$(DEPDIR)/bench_bench_heptafranc-rollingbloom.Po
#	$(AM_V_CXX)source='bench/rollingbloom.cpp' object='bench/bench_bench_heptafranc-rollingbloom.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_heptafranc_CPPFLAGS) $(CPPFLAGS) $(bench_bench_heptafranc_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bench_heptafranc-rollingbloom.obj `if test -f 'bench/rollingbloom.cpp'; then $(CYGPATH_W) 'bench/rollingbloom.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/rollingbloom.cpp'; fi`

bench/bench_bench_heptafranc-crypto_hash.o: bench/crypto_hash.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_heptafranc_CPPFLAGS) $(CPPFLAGS) $(bench_bench_heptafranc_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bench_heptafranc-crypto_hash.o -MD -MP -MF bench/$(DEPDIR)/bench_bench_heptafranc-crypto_hash.Tpo -c -o bench/bench_bench_heptafranc-crypto_hash.o `test -f 'bench/crypto_hash.cpp' || echo '$(srcdir)/'`bench/crypto_hash.cpp
	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bench_heptafranc-crypto_hash.Tpo bench/$(DEPDIR)/bench_bench_heptafranc-crypto_hash.Po
#	$(AM_V_CXX)source='bench/crypto_hash.cpp' object='bench/bench_bench_heptafranc-crypto_hash.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_heptafranc_CPPFLAGS) $(CPPFLAGS) $(bench_bench_heptafranc_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bench_heptafranc-crypto_hash.o `test -f 'bench/crypto_hash.cpp' || echo '$(srcdir)/'`bench/crypto_hash.cpp

bench/bench_bench_heptafranc-crypto_hash.obj: bench/crypto_hash.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_heptafranc_CPPFLAGS) $(CPPFLAGS) $(bench_bench_heptafranc_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bench_heptafranc-crypto_hash.obj -MD -MP -MF bench/$(DEPDIR)/bench_bench_heptafranc-crypto_hash.Tpo -c -o bench/bench_bench_heptafranc-crypto_hash.obj `if test -f 'bench/crypto_hash.cpp'; then $(CYGPATH_W) 'bench/crypto_hash.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/crypto_hash.cpp'; fi`
	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bench_heptafranc-crypto_hash.Tpo bench/$(DEPDIR)/bench_bench_heptafranc-crypto_hash.Po
#	$(AM_V_CXX)source='bench/crypto_hash.cpp' object='bench/bench_bench_heptafranc-crypto_hash.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_heptafranc_CPPFLAGS) $(CPPFLAGS) $(bench_bench_heptafranc_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bench_heptafranc-crypto_hash.obj `if test -f 'bench/crypto_hash.cpp'; then $(CYGPATH_W) 'bench/crypto_hash.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/crypto_hash.cpp'; fi`

bench/bench_bench_heptafranc-ccoins_caching.o: bench/ccoins_caching.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_heptafranc_CPPFLAGS) $(CPPFLAGS) $(bench_bench_heptafranc_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bench_heptafranc-ccoins_caching.o -MD -MP -MF bench/$(DEPDIR)/bench_bench_heptafranc-ccoins_caching.Tpo -c -o bench/bench_bench_heptafranc-ccoins_caching.o `test -f 'bench/ccoins_caching.cpp' || echo '$(srcdir)/'`bench/ccoins_caching.cpp
	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bench_heptafranc-ccoins_caching.Tpo bench/$(DEPDIR)/bench_bench_heptafranc-ccoins_caching.Po
#	$(AM_V_CXX)source='bench/ccoins_caching.cpp' object='bench/bench_bench_heptafranc-ccoins_caching.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_heptafranc_CPPFLAGS) $(CPPFLAGS) $(bench_bench_heptafranc_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bench_heptafranc-ccoins_caching.o `test -f 'bench/ccoins_caching.cpp' || echo '$(srcdir)/'`bench/ccoins_caching.cpp

bench/bench_bench_heptafranc-ccoins_caching.obj: bench/ccoins_caching.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_heptafranc_CPPFLAGS) $(CPPFLAGS) $(bench_bench_heptafranc_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bench_heptafranc-ccoins_caching.obj -MD -MP -MF bench/$(DEPDIR)/bench_bench_heptafranc-ccoins_caching.Tpo -c -o bench/bench_bench_heptafranc-ccoins_caching.obj `if test -f 'bench/ccoins_caching.cpp'; then $(CYGPATH_W) 'bench/ccoins_caching.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/ccoins_caching.cpp'; fi`
	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bench_heptafranc-ccoins_caching.Tpo bench/$(DEPDIR)/bench_bench_heptafranc-ccoins_caching.Po
#	$(AM_V_CXX)source='bench/ccoins_caching.cpp' object='bench/bench_bench_heptafranc-ccoins_caching.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_heptafranc_CPPFLAGS) $(CPPFLAGS) $(bench_bench_heptafranc_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bench_heptafranc-ccoins_caching.obj `if test -f 'bench/ccoins_caching.cpp'; then $(CYGPATH_W) 'bench/ccoins_caching.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/ccoins_caching.cpp'; fi`

bench/bench_bench_heptafranc-merkle_root.o: bench/merkle_root.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_heptafranc_CPPFLAGS) $(CPPFLAGS) $(bench_bench_heptafranc_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bench_heptafranc-merkle_root.o -MD -MP -MF bench/$(DEPDIR)/bench_bench_heptafranc-merkle_root.Tpo -c -o bench/bench_bench_heptafranc-merkle_root.o `test -f 'bench/merkle_root.cpp' || echo '$(srcdir)/'`bench/merkle_root.cpp
	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bench_heptafranc-merkle_root.Tpo bench/$(DEPDIR)/bench_bench_heptafranc-merkle_root.Po
#	$(AM_V_CXX)source='bench/merkle_root.cpp' object='bench/bench_bench_heptafranc-merkle_root.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_heptafranc_CPPFLAGS) $(CPPFLAGS) $(bench_bench_heptafranc_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bench_heptafranc-merkle_root.o `test -f 'bench/merkle_root.cpp' || echo '$(srcdir)/'`bench/merkle_root.cpp

bench/bench_bench_heptafranc-merkle_root.obj: bench/merkle_root.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_heptafranc_CPPFLAGS) $(CPPFLAGS) $(bench_bench_heptafranc_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bench_heptafranc-merkle_root.obj -MD -MP -MF bench/$(DEPDIR)/bench_bench_heptafranc-merkle_root.Tpo -c -o bench/bench_bench_heptafranc-merkle_root.obj `if test -f 'bench/merkle_root.cpp'; then $(CYGPATH_W) 'bench/merkle_root.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/merkle_root.cpp'; fi`
	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bench_heptafranc-merkle_root.Tpo bench/$(DEPDIR)/bench_bench_heptafranc-merkle_root.Po
#	$(AM_V_CXX)source='bench/merkle_root.cpp' object='bench/bench_bench_heptafranc-merkle_root.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_heptafranc_CPPFLAGS) $(CPPFLAGS) $(bench_bench_heptafranc_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bench_heptafranc-merkle_root.obj `if test -f 'bench/merkle_root.cpp'; then $(CYGPATH_W) 'bench/merkle_root.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/merkle_root.cpp'; fi`

bench/bench_bench_heptafranc-mempool_eviction.o: bench/mempool_eviction.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_heptafranc_CPPFLAGS) $(CPPFLAGS) $(bench_bench_heptafranc_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bench_heptafranc-mempool_eviction.o -MD -MP -MF bench/$(DEPDIR)/bench_bench_heptafranc-mempool_eviction.Tpo -c -o bench/bench_bench_heptafranc-mempool_eviction.o `test -f 'bench/mempool_eviction.cpp' || echo '$(srcdir)/'`bench/mempool_eviction.cpp
	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bench_heptafranc-mempool_eviction.Tpo bench/$(DEPDIR)/bench_bench_heptafranc-mempool_eviction.Po
#	$(AM_V_CXX)source='bench/mempool_eviction.cpp' object='bench/bench_bench_heptafranc-mempool_eviction.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_heptafranc_CPPFLAGS) $(CPPFLAGS) $(bench_bench_heptafranc_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bench_heptafranc-mempool_eviction.o `test -f 'bench/mempool_eviction.cpp' || echo '$(srcdir)/'`bench/mempool_eviction.cpp

bench/bench_bench_heptafranc-mempool_eviction.obj: bench/mempool_eviction.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_heptafranc_CPPFLAGS) $(CPPFLAGS) $(bench_bench_heptafranc_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bench_heptafranc-mempool_eviction.obj -MD -MP -MF bench/$(DEPDIR)/bench_bench_heptafranc-mempool_eviction.Tpo -c -o bench/bench_bench_heptafranc-mempool_eviction.obj `if test -f 'bench/mempool_eviction.cpp'; then $(CYGPATH_W) 'bench/mempool_eviction.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/mempool_eviction.cpp'; fi`
	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bench_heptafranc-mempool_eviction.Tpo bench/$(DEPDIR)/bench_bench_heptafranc-mempool_eviction.Po
#	$(AM_V_CXX)source='bench/mempool_eviction.cpp' object='bench/bench_bench_heptafranc-mempool_eviction.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_heptafranc_CPPFLAGS) $(CPPFLAGS) $(bench_bench_heptafranc_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bench_heptafranc-mempool_eviction.obj `if test -f 'bench/mempool_eviction.cpp'; then $(CYGPATH_W) 'bench/mempool_eviction.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/mempool_eviction.cpp'; fi`

bench/bench_bench_heptafranc-verify_script.o: bench/verify_script.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_heptafranc_CPPFLAGS) $(CPPFLAGS) $(bench_bench_heptafranc_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bench_heptafranc-verify_script.o -MD -MP -MF bench/$(DEPDIR)/bench_bench_heptafranc-verify_script.Tpo -c -o bench/bench_bench_heptafranc-verify_script.o `test -f 'bench/verify_script.cpp' || echo '$(srcdir)/'`bench/verify_script.cpp
	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bench_heptafranc-verify_script.Tpo bench/$(DEPDIR)/bench_bench_heptafranc-verify_script.Po
#	$(AM_V_CXX)source='bench/verify_script.cpp' object='bench/bench_bench_heptafranc-verify_script.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_heptafranc_CPPFLAGS) $(CPPFLAGS) $(bench_bench_heptafranc_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bench_heptafranc-verify_script.o `test -f 'bench/verify_script.cpp' || echo '$(srcdir)/'`bench/verify_script.cpp

bench/bench_bench_heptafranc-verify_script.obj: bench/verify_script.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_heptafranc_CPPFLAGS) $(CPPFLAGS) $(bench_bench_heptafranc_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bench_heptafranc-verify_script.obj -MD -MP -MF bench/$(DEPDIR)/bench_bench_heptafranc-verify_script.Tpo -c -o bench/bench_bench_heptafranc-verify_script.obj `if test -f 'bench/verify_script.cpp'; then $(CYGPATH_W) 'bench/verify_script.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/verify_script.cpp'; fi`
	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bench_heptafranc-verify_script.Tpo bench/$(DEPDIR)/bench_bench_heptafranc-verify_script.Po
#	$(AM_V_CXX)source='bench/verify_script.cpp' object='bench/bench_bench_heptafranc-verify_script.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_heptafranc_CPPFLAGS) $(CPPFLAGS) $(bench_bench_heptafranc_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bench_heptafranc-verify_script.obj `if test -f 'bench/verify_script.cpp'; then $(CYGPATH_W) 'bench/verify_script.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/verify_script.cpp'; fi`

bench/bench_bench_heptafranc-base58.o: bench/base58.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_heptafranc_CPPFLAGS) $(CPPFLAGS) $(bench_bench_heptafranc_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bench_heptafranc-base58.o -MD -MP -MF bench/$(DEPDIR)/bench_bench_heptafranc-base58.Tpo -c -o bench/bench_bench_heptafranc-base58.o `test -f 'bench/base58.cpp' || echo '$(srcdir)/'`bench/base58.cpp
	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bench_heptafranc-base58.Tpo bench/$(DEPDIR)/bench_bench_heptafranc-base58.Po
#	$(AM_V_CXX)source='bench/base58.cpp' object='bench/bench_bench_heptafranc-base58.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_heptafranc_CPPFLAGS) $(CPPFLAGS) $(bench_bench_heptafranc_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bench_heptafranc-base58.o `test -f 'bench/base58.cpp' || echo '$(srcdir)/'`bench/base58.cpp

bench/bench_bench_heptafranc-base58.obj: bench/base58.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_heptafranc_CPPFLAGS) $(CPPFLAGS) $(bench_bench_heptafranc_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bench_heptafranc-base58.obj -MD -MP -MF bench/$(DEPDIR)/bench_bench_heptafranc-base58.Tpo -c -o bench/bench_bench_heptafranc-base58.obj `if test -f 'bench/base58.cpp'; then $(CYGPATH_W) 'bench/base58.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/base58.cpp'; fi`
	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bench_heptafranc-base58.Tpo bench/$(DEPDIR)/bench_bench_heptafranc-base58.Po
#	$(AM_V_CXX)source='bench/base58.cpp' object='bench/bench_bench_heptafranc-base58.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_heptafranc_CPPFLAGS) $(CPPFLAGS) $(bench_bench_heptafranc_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bench_heptafranc-base58.obj `if test -f 'bench/base58.cpp'; then $(CYGPATH_W) 'bench/base58.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/base58.cpp'; fi`

bench/bench_bench_heptafranc-bech32.o: bench/bech32.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_heptafranc_CPPFLAGS) $(CPPFLAGS) $(bench_bench_heptafranc_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bench_heptafranc-bech32.o -MD -MP -MF bench/$(DEPDIR)/bench_bench_heptafranc-bech32.Tpo -c -o bench/bench_bench_heptafranc-bech32.o `test -f 'bench/bech32.cpp' || echo '$(srcdir)/'`bench/bech32.cpp
	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bench_heptafranc-bech32.Tpo bench/$(DEPDIR)/bench_bench_heptafranc-bech32.Po
#	$(AM_V_CXX)source='bench/bech32.cpp' object='bench/bench_bench_heptafranc-bech32.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_heptafranc_CPPFLAGS) $(CPPFLAGS) $(bench_bench_heptafranc_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bench_heptafranc-bech32.o `test -f 'bench/bech32.cpp' || echo '$(srcdir)/'`bench/bech32.cpp

bench/bench_bench_heptafranc-bech32.obj: bench/bech32.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_heptafranc_CPPFLAGS) $(CPPFLAGS) $(bench_bench_heptafranc_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bench_heptafranc-bech32.obj -MD -MP -MF bench/$(DEPDIR)/bench_bench_heptafranc-bech32.Tpo -c -o bench/bench_bench_heptafranc-bech32.obj `if test -f 'bench/bech32.cpp'; then $(CYGPATH_W) 'bench/bech32.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/bech32.cpp'; fi`
	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bench_heptafranc-bech32.Tpo bench/$(DEPDIR)/bench_bench_heptafranc-bech32.Po
#	$(AM_V_CXX)source='bench/bech32.cpp' object='bench/bench_bench_heptafranc-bech32.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_heptafranc_CPPFLAGS) $(CPPFLAGS) $(bench_bench_heptafranc_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bench_heptafranc-bech32.obj `if test -f 'bench/bech32.cpp'; then $(CYGPATH_W) 'bench/bech32.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/bech32.cpp'; fi`

bench/bench_bench_heptafranc-lockedpool.o: bench/lockedpool.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_heptafranc_CPPFLAGS) $(CPPFLAGS) $(bench_bench_heptafranc_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bench_heptafranc-lockedpool.o -MD -MP -MF bench/$(DEPDIR)/bench_bench_heptafranc-lockedpool.Tpo -c -o bench/bench_bench_heptafranc-lockedpool.o `test -f 'bench/lockedpool.cpp' || echo '$(srcdir)/'`bench/lockedpool.cpp
	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bench_heptafranc-lockedpool.Tpo bench/$(DEPDIR)/bench_bench_heptafranc-lockedpool.Po
#	$(AM_V_CXX)source='bench/lockedpool.cpp' object='bench/bench_bench_heptafranc-lockedpool.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_heptafranc_CPPFLAGS) $(CPPFLAGS) $(bench_bench_heptafranc_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bench_heptafranc-lockedpool.o `test -f 'bench/lockedpool.cpp' || echo '$(srcdir)/'`bench/lockedpool.cpp

bench/bench_bench_heptafranc-lockedpool.obj: bench/lockedpool.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_heptafranc_CPPFLAGS) $(CPPFLAGS) $(bench_bench_heptafranc_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bench_heptafranc-lockedpool.obj -MD -MP -MF bench/$(DEPDIR)/bench_bench_heptafranc-lockedpool.Tpo -c -o bench/bench_bench_heptafranc-lockedpool.obj `if test -f 'bench/lockedpool.cpp'; then $(CYGPATH_W) 'bench/lockedpool.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/lockedpool.cpp'; fi`
	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bench_heptafranc-lockedpool.Tpo bench/$(DEPDIR)/bench_bench_heptafranc-lockedpool.Po
#	$(AM_V_CXX)source='bench/lockedpool.cpp' object='bench/bench_bench_heptafranc-lockedpool.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_heptafranc_CPPFLAGS) $(CPPFLAGS) $(bench_bench_heptafranc_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bench_heptafranc-lockedpool.obj `if test -f 'bench/lockedpool.cpp'; then $(CYGPATH_W) 'bench/lockedpool.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/lockedpool.cpp'; fi`

bench/bench_bench_heptafranc-prevector.o: bench/prevector.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_heptafranc_CPPFLAGS) $(CPPFLAGS) $(bench_bench_heptafranc_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bench_heptafranc-prevector.o -MD -MP -MF bench/$(DEPDIR)/bench_bench_heptafranc-prevector.Tpo -c -o bench/bench_bench_heptafranc-prevector.o `test -f 'bench/prevector.cpp' || echo '$(srcdir)/'`bench/prevector.cpp
	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bench_heptafranc-prevector.Tpo bench/$(DEPDIR)/bench_bench_heptafranc-prevector.Po
#	$(AM_V_CXX)source='bench/prevector.cpp' object='bench/bench_bench_heptafranc-prevector.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_heptafranc_CPPFLAGS) $(CPPFLAGS) $(bench_bench_heptafranc_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bench_heptafranc-prevector.o `test -f 'bench/prevector.cpp' || echo '$(srcdir)/'`bench/prevector.cpp

bench/bench_bench_heptafranc-prevector.obj: bench/prevector.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_heptafranc_CPPFLAGS) $(CPPFLAGS) $(bench_bench_heptafranc_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bench_heptafranc-prevector.obj -MD -MP -MF bench/$(DEPDIR)/bench_bench_heptafranc-prevector.Tpo -c -o bench/bench_bench_heptafranc-prevector.obj `if test -f 'bench/prevector.cpp'; then $(CYGPATH_W) 'bench/prevector.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/prevector.cpp'; fi`
	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bench_heptafranc-prevector.Tpo bench/$(DEPDIR)/bench_bench_heptafranc-prevector.Po
#	$(AM_V_CXX)source='bench/prevector.cpp' object='bench/bench_bench_heptafranc-prevector.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_heptafranc_CPPFLAGS) $(CPPFLAGS) $(bench_bench_heptafranc_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bench_heptafranc-prevector.obj `if test -f 'bench/prevector.cpp'; then $(CYGPATH_W) 'bench/prevector.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/prevector.cpp'; fi`

bench/bench_bench_heptafranc-coin_selection.o: bench/coin_selection.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_heptafranc_CPPFLAGS) $(CPPFLAGS) $(bench_bench_heptafranc_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bench_heptafranc-coin_selection.o -MD -MP -MF bench/$(DEPDIR)/bench_bench_heptafranc-coin_selection.Tpo -c -o bench/bench_bench_heptafranc-coin_selection.o `test -f 'bench/coin_selection.cpp' || echo '$(srcdir)/'`bench/coin_selection.cpp
	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bench_heptafranc-coin_selection.Tpo bench/$(DEPDIR)/bench_bench_heptafranc-coin_selection.Po
#	$(AM_V_CXX)source='bench/coin_selection.cpp' object='bench/bench_bench_heptafranc-coin_selection.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_heptafranc_CPPFLAGS) $(CPPFLAGS) $(bench_bench_heptafranc_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bench_heptafranc-coin_selection.o `test -f 'bench/coin_selection.cpp' || echo '$(srcdir)/'`bench/coin_selection.cpp

bench/bench_bench_heptafranc-coin_selection.obj: bench/coin_selection.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_heptafranc_CPPFLAGS) $(CPPFLAGS) $(bench_bench_heptafranc_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bench_heptafranc-coin_selection.obj -MD -MP -MF bench/$(DEPDIR)/bench_bench_heptafranc-coin_selection.Tpo -c -o bench/bench_bench_heptafranc-coin_selection.obj `if test -f 'bench/coin_selection.cpp'; then $(CYGPATH_W) 'bench/coin_selection.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/coin_selection.cpp'; fi`
	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bench_heptafranc-coin_selection.Tpo bench/$(DEPDIR)/bench_bench_heptafranc-coin_selection.Po
#	$(AM_V_CXX)source='bench/coin_selection.cpp' object='bench/bench_bench_heptafranc-coin_selection.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_heptafranc_CPPFLAGS) $(CPPFLAGS) $(bench_bench_heptafranc_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bench_heptafranc-coin_selection.obj `if test -f 'bench/coin_selection.cpp'; then $(CYGPATH_W) 'bench/coin_selection.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/coin_selection.cpp'; fi`

heptafranc_cli-heptafranc-cli.o: heptafranc-cli.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(heptafranc_cli_CPPFLAGS) $(CPPFLAGS) $(heptafranc_cli_CXXFLAGS) $(CXXFLAGS) -MT heptafranc_cli-heptafranc-cli.o -MD -MP -MF $(DEPDIR)/heptafranc_cli-heptafranc-cli.Tpo -c -o heptafranc_cli-heptafranc-cli.o `test -f 'heptafranc-cli.cpp' || echo '$(srcdir)/'`heptafranc-cli.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/heptafranc_cli-heptafranc-cli.Tpo $(DEPDIR)/heptafranc_cli-heptafranc-cli.Po
#	$(AM_V_CXX)source='heptafranc-cli.cpp' object='heptafranc_cli-heptafranc-cli.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(heptafranc_cli_CPPFLAGS) $(CPPFLAGS) $(heptafranc_cli_CXXFLAGS) $(CXXFLAGS) -c -o heptafranc_cli-heptafranc-cli.o `test -f 'heptafranc-cli.cpp' || echo '$(srcdir)/'`heptafranc-cli.cpp

heptafranc_cli-heptafranc-cli.obj: heptafranc-cli.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(heptafranc_cli_CPPFLAGS) $(CPPFLAGS) $(heptafranc_cli_CXXFLAGS) $(CXXFLAGS) -MT heptafranc_cli-heptafranc-cli.obj -MD -MP -MF $(DEPDIR)/heptafranc_cli-heptafranc-cli.Tpo -c -o heptafranc_cli-heptafranc-cli.obj `if test -f 'heptafranc-cli.cpp'; then $(CYGPATH_W) 'heptafranc-cli.cpp'; else $(CYGPATH_W) '$(srcdir)/heptafranc-cli.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/heptafranc_cli-heptafranc-cli.Tpo $(DEPDIR)/heptafranc_cli-heptafranc-cli.Po
#	$(AM_V_CXX)source='heptafranc-cli.cpp' object='heptafranc_cli-heptafranc-cli.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(heptafranc_cli_CPPFLAGS) $(CPPFLAGS) $(heptafranc_cli_CXXFLAGS) $(CXXFLAGS) -c -o heptafranc_cli-heptafranc-cli.obj `if test -f 'heptafranc-cli.cpp'; then $(CYGPATH_W) 'heptafranc-cli.cpp'; else $(CYGPATH_W) '$(srcdir)/heptafranc-cli.cpp'; fi`

heptafranc_tx-heptafranc-tx.o: heptafranc-tx.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(heptafranc_tx_CPPFLAGS) $(CPPFLAGS) $(heptafranc_tx_CXXFLAGS) $(CXXFLAGS) -MT heptafranc_tx-heptafranc-tx.o -MD -MP -MF $(DEPDIR)/heptafranc_tx-heptafranc-tx.Tpo -c -o heptafranc_tx-heptafranc-tx.o `test -f 'heptafranc-tx.cpp' || echo '$(srcdir)/'`heptafranc-tx.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/heptafranc_tx-heptafranc-tx.Tpo $(DEPDIR)/heptafranc_tx-heptafranc-tx.Po
#	$(AM_V_CXX)source='heptafranc-tx.cpp' object='heptafranc_tx-heptafranc-tx.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(heptafranc_tx_CPPFLAGS) $(CPPFLAGS) $(heptafranc_tx_CXXFLAGS) $(CXXFLAGS) -c -o heptafranc_tx-heptafranc-tx.o `test -f 'heptafranc-tx.cpp' || echo '$(srcdir)/'`heptafranc-tx.cpp

heptafranc_tx-heptafranc-tx.obj: heptafranc-tx.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(heptafranc_tx_CPPFLAGS) $(CPPFLAGS) $(heptafranc_tx_CXXFLAGS) $(CXXFLAGS) -MT heptafranc_tx-heptafranc-tx.obj -MD -MP -MF $(DEPDIR)/heptafranc_tx-heptafranc-tx.Tpo -c -o heptafranc_tx-heptafranc-tx.obj `if test -f 'heptafranc-tx.cpp'; then $(CYGPATH_W) 'heptafranc-tx.cpp'; else $(CYGPATH_W) '$(srcdir)/heptafranc-tx.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/heptafranc_tx-heptafranc-tx.Tpo $(DEPDIR)/heptafranc_tx-heptafranc-tx.Po
#	$(AM_V_CXX)source='heptafranc-tx.cpp' object='heptafranc_tx-heptafranc-tx.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(heptafranc_tx_CPPFLAGS) $(CPPFLAGS) $(heptafranc_tx_CXXFLAGS) $(CXXFLAGS) -c -o heptafranc_tx-heptafranc-tx.obj `if test -f 'heptafranc-tx.cpp'; then $(CYGPATH_W) 'heptafranc-tx.cpp'; else $(CYGPATH_W) '$(srcdir)/heptafranc-tx.cpp'; fi`

heptafrancd-heptafrancd.o: heptafrancd.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(heptafrancd_CPPFLAGS) $(CPPFLAGS) $(heptafrancd_CXXFLAGS) $(CXXFLAGS) -MT heptafrancd-heptafrancd.o -MD -MP -MF $(DEPDIR)/heptafrancd-heptafrancd.Tpo -c -o heptafrancd-heptafrancd.o `test -f 'heptafrancd.cpp' || echo '$(srcdir)/'`heptafrancd.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/heptafrancd-heptafrancd.Tpo $(DEPDIR)/heptafrancd-heptafrancd.Po
#	$(AM_V_CXX)source='heptafrancd.cpp' object='heptafrancd-heptafrancd.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(heptafrancd_CPPFLAGS) $(CPPFLAGS) $(heptafrancd_CXXFLAGS) $(CXXFLAGS) -c -o heptafrancd-heptafrancd.o `test -f 'heptafrancd.cpp' || echo '$(srcdir)/'`heptafrancd.cpp

heptafrancd-heptafrancd.obj: heptafrancd.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(heptafrancd_CPPFLAGS) $(CPPFLAGS) $(heptafrancd_CXXFLAGS) $(CXXFLAGS) -MT heptafrancd-heptafrancd.obj -MD -MP -MF $(DEPDIR)/heptafrancd-heptafrancd.Tpo -c -o heptafrancd-heptafrancd.obj `if test -f 'heptafrancd.cpp'; then $(CYGPATH_W) 'heptafrancd.cpp'; else $(CYGPATH_W) '$(srcdir)/heptafrancd.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/heptafrancd-heptafrancd.Tpo $(DEPDIR)/heptafrancd-heptafrancd.Po
#	$(AM_V_CXX)source='heptafrancd.cpp' object='heptafrancd-heptafrancd.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(heptafrancd_CPPFLAGS) $(CPPFLAGS) $(heptafrancd_CXXFLAGS) $(CXXFLAGS) -c -o heptafrancd-heptafrancd.obj `if test -f 'heptafrancd.cpp'; then $(CYGPATH_W) 'heptafrancd.cpp'; else $(CYGPATH_W) '$(srcdir)/heptafrancd.cpp'; fi`

qt/qt_heptafranc_qt-heptafranc.o: qt/heptafranc.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_heptafranc_qt_CPPFLAGS) $(CPPFLAGS) $(qt_heptafranc_qt_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_heptafranc_qt-heptafranc.o -MD -MP -MF qt/$(DEPDIR)/qt_heptafranc_qt-heptafranc.Tpo -c -o qt/qt_heptafranc_qt-heptafranc.o `test -f 'qt/heptafranc.cpp' || echo '$(srcdir)/'`qt/heptafranc.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_heptafranc_qt-heptafranc.Tpo qt/$(DEPDIR)/qt_heptafranc_qt-heptafranc.Po
#	$(AM_V_CXX)source='qt/heptafranc.cpp' object='qt/qt_heptafranc_qt-heptafranc.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_heptafranc_qt_CPPFLAGS) $(CPPFLAGS) $(qt_heptafranc_qt_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_heptafranc_qt-heptafranc.o `test -f 'qt/heptafranc.cpp' || echo '$(srcdir)/'`qt/heptafranc.cpp

qt/qt_heptafranc_qt-heptafranc.obj: qt/heptafranc.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_heptafranc_qt_CPPFLAGS) $(CPPFLAGS) $(qt_heptafranc_qt_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_heptafranc_qt-heptafranc.obj -MD -MP -MF qt/$(DEPDIR)/qt_heptafranc_qt-heptafranc.Tpo -c -o qt/qt_heptafranc_qt-heptafranc.obj `if test -f 'qt/heptafranc.cpp'; then $(CYGPATH_W) 'qt/heptafranc.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/heptafranc.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_heptafranc_qt-heptafranc.Tpo qt/$(DEPDIR)/qt_heptafranc_qt-heptafranc.Po
#	$(AM_V_CXX)source='qt/heptafranc.cpp' object='qt/qt_heptafranc_qt-heptafranc.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_heptafranc_qt_CPPFLAGS) $(CPPFLAGS) $(qt_heptafranc_qt_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_heptafranc_qt-heptafranc.obj `if test -f 'qt/heptafranc.cpp'; then $(CYGPATH_W) 'qt/heptafranc.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/heptafranc.cpp'; fi`

qt/test/qt_test_test_heptafranc_qt-compattests.o: qt/test/compattests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_heptafranc_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_heptafranc_qt_CXXFLAGS) $(CXXFLAGS) -MT qt/test/qt_test_test_heptafranc_qt-compattests.o -MD -MP -MF qt/test/$(DEPDIR)/qt_test_test_heptafranc_qt-compattests.Tpo -c -o qt/test/qt_test_test_heptafranc_qt-compattests.o `test -f 'qt/test/compattests.cpp' || echo '$(srcdir)/'`qt/test/compattests.cpp
	$(AM_V_at)$(am__mv) qt/test/$(DEPDIR)/qt_test_test_heptafranc_qt-compattests.Tpo qt/test/$(DEPDIR)/qt_test_test_heptafranc_qt-compattests.Po
#	$(AM_V_CXX)source='qt/test/compattests.cpp' object='qt/test/qt_test_test_heptafranc_qt-compattests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_heptafranc_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_heptafranc_qt_CXXFLAGS) $(CXXFLAGS) -c -o qt/test/qt_test_test_heptafranc_qt-compattests.o `test -f 'qt/test/compattests.cpp' || echo '$(srcdir)/'`qt/test/compattests.cpp

qt/test/qt_test_test_heptafranc_qt-compattests.obj: qt/test/compattests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_heptafranc_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_heptafranc_qt_CXXFLAGS) $(CXXFLAGS) -MT qt/test/qt_test_test_heptafranc_qt-compattests.obj -MD -MP -MF qt/test/$(DEPDIR)/qt_test_test_heptafranc_qt-compattests.Tpo -c -o qt/test/qt_test_test_heptafranc_qt-compattests.obj `if test -f 'qt/test/compattests.cpp'; then $(CYGPATH_W) 'qt/test/compattests.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/test/compattests.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/test/$(DEPDIR)/qt_test_test_heptafranc_qt-compattests.Tpo qt/test/$(DEPDIR)/qt_test_test_heptafranc_qt-compattests.Po
#	$(AM_V_CXX)source='qt/test/compattests.cpp' object='qt/test/qt_test_test_heptafranc_qt-compattests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_heptafranc_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_heptafranc_qt_CXXFLAGS) $(CXXFLAGS) -c -o qt/test/qt_test_test_heptafranc_qt-compattests.obj `if test -f 'qt/test/compattests.cpp'; then $(CYGPATH_W) 'qt/test/compattests.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/test/compattests.cpp'; fi`

qt/test/qt_test_test_heptafranc_qt-rpcnestedtests.o: qt/test/rpcnestedtests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_heptafranc_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_heptafranc_qt_CXXFLAGS) $(CXXFLAGS) -MT qt/test/qt_test_test_heptafranc_qt-rpcnestedtests.o -MD -MP -MF qt/test/$(DEPDIR)/qt_test_test_heptafranc_qt-rpcnestedtests.Tpo -c -o qt/test/qt_test_test_heptafranc_qt-rpcnestedtests.o `test -f 'qt/test/rpcnestedtests.cpp' || echo '$(srcdir)/'`qt/test/rpcnestedtests.cpp
	$(AM_V_at)$(am__mv) qt/test/$(DEPDIR)/qt_test_test_heptafranc_qt-rpcnestedtests.Tpo qt/test/$(DEPDIR)/qt_test_test_heptafranc_qt-rpcnestedtests.Po
#	$(AM_V_CXX)source='qt/test/rpcnestedtests.cpp' object='qt/test/qt_test_test_heptafranc_qt-rpcnestedtests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_heptafranc_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_heptafranc_qt_CXXFLAGS) $(CXXFLAGS) -c -o qt/test/qt_test_test_heptafranc_qt-rpcnestedtests.o `test -f 'qt/test/rpcnestedtests.cpp' || echo '$(srcdir)/'`qt/test/rpcnestedtests.cpp

qt/test/qt_test_test_heptafranc_qt-rpcnestedtests.obj: qt/test/rpcnestedtests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_heptafranc_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_heptafranc_qt_CXXFLAGS) $(CXXFLAGS) -MT qt/test/qt_test_test_heptafranc_qt-rpcnestedtests.obj -MD -MP -MF qt/test/$(DEPDIR)/qt_test_test_heptafranc_qt-rpcnestedtests.Tpo -c -o qt/test/qt_test_test_heptafranc_qt-rpcnestedtests.obj `if test -f 'qt/test/rpcnestedtests.cpp'; then $(CYGPATH_W) 'qt/test/rpcnestedtests.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/test/rpcnestedtests.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/test/$(DEPDIR)/qt_test_test_heptafranc_qt-rpcnestedtests.Tpo qt/test/$(DEPDIR)/qt_test_test_heptafranc_qt-rpcnestedtests.Po
#	$(AM_V_CXX)source='qt/test/rpcnestedtests.cpp' object='qt/test/qt_test_test_heptafranc_qt-rpcnestedtests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_heptafranc_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_heptafranc_qt_CXXFLAGS) $(CXXFLAGS) -c -o qt/test/qt_test_test_heptafranc_qt-rpcnestedtests.obj `if test -f 'qt/test/rpcnestedtests.cpp'; then $(CYGPATH_W) 'qt/test/rpcnestedtests.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/test/rpcnestedtests.cpp'; fi`

qt/test/qt_test_test_heptafranc_qt-test_main.o: qt/test/test_main.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_heptafranc_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_heptafranc_qt_CXXFLAGS) $(CXXFLAGS) -MT qt/test/qt_test_test_heptafranc_qt-test_main.o -MD -MP -MF qt/test/$(DEPDIR)/qt_test_test_heptafranc_qt-test_main.Tpo -c -o qt/test/qt_test_test_heptafranc_qt-test_main.o `test -f 'qt/test/test_main.cpp' || echo '$(srcdir)/'`qt/test/test_main.cpp
	$(AM_V_at)$(am__mv) qt/test/$(DEPDIR)/qt_test_test_heptafranc_qt-test_main.Tpo qt/test/$(DEPDIR)/qt_test_test_heptafranc_qt-test_main.Po
#	$(AM_V_CXX)source='qt/test/test_main.cpp' object='qt/test/qt_test_test_heptafranc_qt-test_main.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_heptafranc_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_heptafranc_qt_CXXFLAGS) $(CXXFLAGS) -c -o qt/test/qt_test_test_heptafranc_qt-test_main.o `test -f 'qt/test/test_main.cpp' || echo '$(srcdir)/'`qt/test/test_main.cpp

qt/test/qt_test_test_heptafranc_qt-test_main.obj: qt/test/test_main.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_heptafranc_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_heptafranc_qt_CXXFLAGS) $(CXXFLAGS) -MT qt/test/qt_test_test_heptafranc_qt-test_main.obj -MD -MP -MF qt/test/$(DEPDIR)/qt_test_test_heptafranc_qt-test_main.Tpo -c -o qt/test/qt_test_test_heptafranc_qt-test_main.obj `if test -f 'qt/test/test_main.cpp'; then $(CYGPATH_W) 'qt/test/test_main.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/test/test_main.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/test/$(DEPDIR)/qt_test_test_heptafranc_qt-test_main.Tpo qt/test/$(DEPDIR)/qt_test_test_heptafranc_qt-test_main.Po
#	$(AM_V_CXX)source='qt/test/test_main.cpp' object='qt/test/qt_test_test_heptafranc_qt-test_main.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_heptafranc_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_heptafranc_qt_CXXFLAGS) $(CXXFLAGS) -c -o qt/test/qt_test_test_heptafranc_qt-test_main.obj `if test -f 'qt/test/test_main.cpp'; then $(CYGPATH_W) 'qt/test/test_main.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/test/test_main.cpp'; fi`

qt/test/qt_test_test_heptafranc_qt-uritests.o: qt/test/uritests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_heptafranc_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_heptafranc_qt_CXXFLAGS) $(CXXFLAGS) -MT qt/test/qt_test_test_heptafranc_qt-uritests.o -MD -MP -MF qt/test/$(DEPDIR)/qt_test_test_heptafranc_qt-uritests.Tpo -c -o qt/test/qt_test_test_heptafranc_qt-uritests.o `test -f 'qt/test/uritests.cpp' || echo '$(srcdir)/'`qt/test/uritests.cpp
	$(AM_V_at)$(am__mv) qt/test/$(DEPDIR)/qt_test_test_heptafranc_qt-uritests.Tpo qt/test/$(DEPDIR)/qt_test_test_heptafranc_qt-uritests.Po
#	$(AM_V_CXX)source='qt/test/uritests.cpp' object='qt/test/qt_test_test_heptafranc_qt-uritests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_heptafranc_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_heptafranc_qt_CXXFLAGS) $(CXXFLAGS) -c -o qt/test/qt_test_test_heptafranc_qt-uritests.o `test -f 'qt/test/uritests.cpp' || echo '$(srcdir)/'`qt/test/uritests.cpp

qt/test/qt_test_test_heptafranc_qt-uritests.obj: qt/test/uritests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_heptafranc_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_heptafranc_qt_CXXFLAGS) $(CXXFLAGS) -MT qt/test/qt_test_test_heptafranc_qt-uritests.obj -MD -MP -MF qt/test/$(DEPDIR)/qt_test_test_heptafranc_qt-uritests.Tpo -c -o qt/test/qt_test_test_heptafranc_qt-uritests.obj `if test -f 'qt/test/uritests.cpp'; then $(CYGPATH_W) 'qt/test/uritests.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/test/uritests.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/test/$(DEPDIR)/qt_test_test_heptafranc_qt-uritests.Tpo qt/test/$(DEPDIR)/qt_test_test_heptafranc_qt-uritests.Po
#	$(AM_V_CXX)source='qt/test/uritests.cpp' object='qt/test/qt_test_test_heptafranc_qt-uritests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_heptafranc_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_heptafranc_qt_CXXFLAGS) $(CXXFLAGS) -c -o qt/test/qt_test_test_heptafranc_qt-uritests.obj `if test -f 'qt/test/uritests.cpp'; then $(CYGPATH_W) 'qt/test/uritests.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/test/uritests.cpp'; fi`

qt/test/qt_test_test_heptafranc_qt-util.o: qt/test/util.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_heptafranc_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_heptafranc_qt_CXXFLAGS) $(CXXFLAGS) -MT qt/test/qt_test_test_heptafranc_qt-util.o -MD -MP -MF qt/test/$(DEPDIR)/qt_test_test_heptafranc_qt-util.Tpo -c -o qt/test/qt_test_test_heptafranc_qt-util.o `test -f 'qt/test/util.cpp' || echo '$(srcdir)/'`qt/test/util.cpp
	$(AM_V_at)$(am__mv) qt/test/$(DEPDIR)/qt_test_test_heptafranc_qt-util.Tpo qt/test/$(DEPDIR)/qt_test_test_heptafranc_qt-util.Po
#	$(AM_V_CXX)source='qt/test/util.cpp' object='qt/test/qt_test_test_heptafranc_qt-util.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_heptafranc_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_heptafranc_qt_CXXFLAGS) $(CXXFLAGS) -c -o qt/test/qt_test_test_heptafranc_qt-util.o `test -f 'qt/test/util.cpp' || echo '$(srcdir)/'`qt/test/util.cpp

qt/test/qt_test_test_heptafranc_qt-util.obj: qt/test/util.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_heptafranc_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_heptafranc_qt_CXXFLAGS) $(CXXFLAGS) -MT qt/test/qt_test_test_heptafranc_qt-util.obj -MD -MP -MF qt/test/$(DEPDIR)/qt_test_test_heptafranc_qt-util.Tpo -c -o qt/test/qt_test_test_heptafranc_qt-util.obj `if test -f 'qt/test/util.cpp'; then $(CYGPATH_W) 'qt/test/util.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/test/util.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/test/$(DEPDIR)/qt_test_test_heptafranc_qt-util.Tpo qt/test/$(DEPDIR)/qt_test_test_heptafranc_qt-util.Po
#	$(AM_V_CXX)source='qt/test/util.cpp' object='qt/test/qt_test_test_heptafranc_qt-util.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_heptafranc_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_heptafranc_qt_CXXFLAGS) $(CXXFLAGS) -c -o qt/test/qt_test_test_heptafranc_qt-util.obj `if test -f 'qt/test/util.cpp'; then $(CYGPATH_W) 'qt/test/util.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/test/util.cpp'; fi`

test/qt_test_test_heptafranc_qt-test_heptafranc.o: test/test_heptafranc.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_heptafranc_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_heptafranc_qt_CXXFLAGS) $(CXXFLAGS) -MT test/qt_test_test_heptafranc_qt-test_heptafranc.o -MD -MP -MF test/$(DEPDIR)/qt_test_test_heptafranc_qt-test_heptafranc.Tpo -c -o test/qt_test_test_heptafranc_qt-test_heptafranc.o `test -f 'test/test_heptafranc.cpp' || echo '$(srcdir)/'`test/test_heptafranc.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/qt_test_test_heptafranc_qt-test_heptafranc.Tpo test/$(DEPDIR)/qt_test_test_heptafranc_qt-test_heptafranc.Po
#	$(AM_V_CXX)source='test/test_heptafranc.cpp' object='test/qt_test_test_heptafranc_qt-test_heptafranc.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_heptafranc_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_heptafranc_qt_CXXFLAGS) $(CXXFLAGS) -c -o test/qt_test_test_heptafranc_qt-test_heptafranc.o `test -f 'test/test_heptafranc.cpp' || echo '$(srcdir)/'`test/test_heptafranc.cpp

test/qt_test_test_heptafranc_qt-test_heptafranc.obj: test/test_heptafranc.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_heptafranc_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_heptafranc_qt_CXXFLAGS) $(CXXFLAGS) -MT test/qt_test_test_heptafranc_qt-test_heptafranc.obj -MD -MP -MF test/$(DEPDIR)/qt_test_test_heptafranc_qt-test_heptafranc.Tpo -c -o test/qt_test_test_heptafranc_qt-test_heptafranc.obj `if test -f 'test/test_heptafranc.cpp'; then $(CYGPATH_W) 'test/test_heptafranc.cpp'; else $(CYGPATH_W) '$(srcdir)/test/test_heptafranc.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/qt_test_test_heptafranc_qt-test_heptafranc.Tpo test/$(DEPDIR)/qt_test_test_heptafranc_qt-test_heptafranc.Po
#	$(AM_V_CXX)source='test/test_heptafranc.cpp' object='test/qt_test_test_heptafranc_qt-test_heptafranc.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_heptafranc_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_heptafranc_qt_CXXFLAGS) $(CXXFLAGS) -c -o test/qt_test_test_heptafranc_qt-test_heptafranc.obj `if test -f 'test/test_heptafranc.cpp'; then $(CYGPATH_W) 'test/test_heptafranc.cpp'; else $(CYGPATH_W) '$(srcdir)/test/test_heptafranc.cpp'; fi`

qt/test/qt_test_test_heptafranc_qt-addressbooktests.o: qt/test/addressbooktests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_heptafranc_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_heptafranc_qt_CXXFLAGS) $(CXXFLAGS) -MT qt/test/qt_test_test_heptafranc_qt-addressbooktests.o -MD -MP -MF qt/test/$(DEPDIR)/qt_test_test_heptafranc_qt-addressbooktests.Tpo -c -o qt/test/qt_test_test_heptafranc_qt-addressbooktests.o `test -f 'qt/test/addressbooktests.cpp' || echo '$(srcdir)/'`qt/test/addressbooktests.cpp
	$(AM_V_at)$(am__mv) qt/test/$(DEPDIR)/qt_test_test_heptafranc_qt-addressbooktests.Tpo qt/test/$(DEPDIR)/qt_test_test_heptafranc_qt-addressbooktests.Po
#	$(AM_V_CXX)source='qt/test/addressbooktests.cpp' object='qt/test/qt_test_test_heptafranc_qt-addressbooktests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_heptafranc_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_heptafranc_qt_CXXFLAGS) $(CXXFLAGS) -c -o qt/test/qt_test_test_heptafranc_qt-addressbooktests.o `test -f 'qt/test/addressbooktests.cpp' || echo '$(srcdir)/'`qt/test/addressbooktests.cpp

qt/test/qt_test_test_heptafranc_qt-addressbooktests.obj: qt/test/addressbooktests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_heptafranc_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_heptafranc_qt_CXXFLAGS) $(CXXFLAGS) -MT qt/test/qt_test_test_heptafranc_qt-addressbooktests.obj -MD -MP -MF qt/test/$(DEPDIR)/qt_test_test_heptafranc_qt-addressbooktests.Tpo -c -o qt/test/qt_test_test_heptafranc_qt-addressbooktests.obj `if test -f 'qt/test/addressbooktests.cpp'; then $(CYGPATH_W) 'qt/test/addressbooktests.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/test/addressbooktests.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/test/$(DEPDIR)/qt_test_test_heptafranc_qt-addressbooktests.Tpo qt/test/$(DEPDIR)/qt_test_test_heptafranc_qt-addressbooktests.Po
#	$(AM_V_CXX)source='qt/test/addressbooktests.cpp' object='qt/test/qt_test_test_heptafranc_qt-addressbooktests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_heptafranc_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_heptafranc_qt_CXXFLAGS) $(CXXFLAGS) -c -o qt/test/qt_test_test_heptafranc_qt-addressbooktests.obj `if test -f 'qt/test/addressbooktests.cpp'; then $(CYGPATH_W) 'qt/test/addressbooktests.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/test/addressbooktests.cpp'; fi`

qt/test/qt_test_test_heptafranc_qt-paymentservertests.o: qt/test/paymentservertests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_heptafranc_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_heptafranc_qt_CXXFLAGS) $(CXXFLAGS) -MT qt/test/qt_test_test_heptafranc_qt-paymentservertests.o -MD -MP -MF qt/test/$(DEPDIR)/qt_test_test_heptafranc_qt-paymentservertests.Tpo -c -o qt/test/qt_test_test_heptafranc_qt-paymentservertests.o `test -f 'qt/test/paymentservertests.cpp' || echo '$(srcdir)/'`qt/test/paymentservertests.cpp
	$(AM_V_at)$(am__mv) qt/test/$(DEPDIR)/qt_test_test_heptafranc_qt-paymentservertests.Tpo qt/test/$(DEPDIR)/qt_test_test_heptafranc_qt-paymentservertests.Po
#	$(AM_V_CXX)source='qt/test/paymentservertests.cpp' object='qt/test/qt_test_test_heptafranc_qt-paymentservertests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_heptafranc_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_heptafranc_qt_CXXFLAGS) $(CXXFLAGS) -c -o qt/test/qt_test_test_heptafranc_qt-paymentservertests.o `test -f 'qt/test/paymentservertests.cpp' || echo '$(srcdir)/'`qt/test/paymentservertests.cpp

qt/test/qt_test_test_heptafranc_qt-paymentservertests.obj: qt/test/paymentservertests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_heptafranc_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_heptafranc_qt_CXXFLAGS) $(CXXFLAGS) -MT qt/test/qt_test_test_heptafranc_qt-paymentservertests.obj -MD -MP -MF qt/test/$(DEPDIR)/qt_test_test_heptafranc_qt-paymentservertests.Tpo -c -o qt/test/qt_test_test_heptafranc_qt-paymentservertests.obj `if test -f 'qt/test/paymentservertests.cpp'; then $(CYGPATH_W) 'qt/test/paymentservertests.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/test/paymentservertests.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/test/$(DEPDIR)/qt_test_test_heptafranc_qt-paymentservertests.Tpo qt/test/$(DEPDIR)/qt_test_test_heptafranc_qt-paymentservertests.Po
#	$(AM_V_CXX)source='qt/test/paymentservertests.cpp' object='qt/test/qt_test_test_heptafranc_qt-paymentservertests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_heptafranc_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_heptafranc_qt_CXXFLAGS) $(CXXFLAGS) -c -o qt/test/qt_test_test_heptafranc_qt-paymentservertests.obj `if test -f 'qt/test/paymentservertests.cpp'; then $(CYGPATH_W) 'qt/test/paymentservertests.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/test/paymentservertests.cpp'; fi`

qt/test/qt_test_test_heptafranc_qt-wallettests.o: qt/test/wallettests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_heptafranc_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_heptafranc_qt_CXXFLAGS) $(CXXFLAGS) -MT qt/test/qt_test_test_heptafranc_qt-wallettests.o -MD -MP -MF qt/test/$(DEPDIR)/qt_test_test_heptafranc_qt-wallettests.Tpo -c -o qt/test/qt_test_test_heptafranc_qt-wallettests.o `test -f 'qt/test/wallettests.cpp' || echo '$(srcdir)/'`qt/test/wallettests.cpp
	$(AM_V_at)$(am__mv) qt/test/$(DEPDIR)/qt_test_test_heptafranc_qt-wallettests.Tpo qt/test/$(DEPDIR)/qt_test_test_heptafranc_qt-wallettests.Po
#	$(AM_V_CXX)source='qt/test/wallettests.cpp' object='qt/test/qt_test_test_heptafranc_qt-wallettests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_heptafranc_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_heptafranc_qt_CXXFLAGS) $(CXXFLAGS) -c -o qt/test/qt_test_test_heptafranc_qt-wallettests.o `test -f 'qt/test/wallettests.cpp' || echo '$(srcdir)/'`qt/test/wallettests.cpp

qt/test/qt_test_test_heptafranc_qt-wallettests.obj: qt/test/wallettests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_heptafranc_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_heptafranc_qt_CXXFLAGS) $(CXXFLAGS) -MT qt/test/qt_test_test_heptafranc_qt-wallettests.obj -MD -MP -MF qt/test/$(DEPDIR)/qt_test_test_heptafranc_qt-wallettests.Tpo -c -o qt/test/qt_test_test_heptafranc_qt-wallettests.obj `if test -f 'qt/test/wallettests.cpp'; then $(CYGPATH_W) 'qt/test/wallettests.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/test/wallettests.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/test/$(DEPDIR)/qt_test_test_heptafranc_qt-wallettests.Tpo qt/test/$(DEPDIR)/qt_test_test_heptafranc_qt-wallettests.Po
#	$(AM_V_CXX)source='qt/test/wallettests.cpp' object='qt/test/qt_test_test_heptafranc_qt-wallettests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_heptafranc_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_heptafranc_qt_CXXFLAGS) $(CXXFLAGS) -c -o qt/test/qt_test_test_heptafranc_qt-wallettests.obj `if test -f 'qt/test/wallettests.cpp'; then $(CYGPATH_W) 'qt/test/wallettests.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/test/wallettests.cpp'; fi`

wallet/test/qt_test_test_heptafranc_qt-wallet_test_fixture.o: wallet/test/wallet_test_fixture.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_heptafranc_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_heptafranc_qt_CXXFLAGS) $(CXXFLAGS) -MT wallet/test/qt_test_test_heptafranc_qt-wallet_test_fixture.o -MD -MP -MF wallet/test/$(DEPDIR)/qt_test_test_heptafranc_qt-wallet_test_fixture.Tpo -c -o wallet/test/qt_test_test_heptafranc_qt-wallet_test_fixture.o `test -f 'wallet/test/wallet_test_fixture.cpp' || echo '$(srcdir)/'`wallet/test/wallet_test_fixture.cpp
	$(AM_V_at)$(am__mv) wallet/test/$(DEPDIR)/qt_test_test_heptafranc_qt-wallet_test_fixture.Tpo wallet/test/$(DEPDIR)/qt_test_test_heptafranc_qt-wallet_test_fixture.Po
#	$(AM_V_CXX)source='wallet/test/wallet_test_fixture.cpp' object='wallet/test/qt_test_test_heptafranc_qt-wallet_test_fixture.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_heptafranc_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_heptafranc_qt_CXXFLAGS) $(CXXFLAGS) -c -o wallet/test/qt_test_test_heptafranc_qt-wallet_test_fixture.o `test -f 'wallet/test/wallet_test_fixture.cpp' || echo '$(srcdir)/'`wallet/test/wallet_test_fixture.cpp

wallet/test/qt_test_test_heptafranc_qt-wallet_test_fixture.obj: wallet/test/wallet_test_fixture.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_heptafranc_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_heptafranc_qt_CXXFLAGS) $(CXXFLAGS) -MT wallet/test/qt_test_test_heptafranc_qt-wallet_test_fixture.obj -MD -MP -MF wallet/test/$(DEPDIR)/qt_test_test_heptafranc_qt-wallet_test_fixture.Tpo -c -o wallet/test/qt_test_test_heptafranc_qt-wallet_test_fixture.obj `if test -f 'wallet/test/wallet_test_fixture.cpp'; then $(CYGPATH_W) 'wallet/test/wallet_test_fixture.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/test/wallet_test_fixture.cpp'; fi`
	$(AM_V_at)$(am__mv) wallet/test/$(DEPDIR)/qt_test_test_heptafranc_qt-wallet_test_fixture.Tpo wallet/test/$(DEPDIR)/qt_test_test_heptafranc_qt-wallet_test_fixture.Po
#	$(AM_V_CXX)source='wallet/test/wallet_test_fixture.cpp' object='wallet/test/qt_test_test_heptafranc_qt-wallet_test_fixture.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_heptafranc_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_heptafranc_qt_CXXFLAGS) $(CXXFLAGS) -c -o wallet/test/qt_test_test_heptafranc_qt-wallet_test_fixture.obj `if test -f 'wallet/test/wallet_test_fixture.cpp'; then $(CYGPATH_W) 'wallet/test/wallet_test_fixture.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/test/wallet_test_fixture.cpp'; fi`

qt/test/qt_test_test_heptafranc_qt-moc_compattests.o: qt/test/moc_compattests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_heptafranc_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_heptafranc_qt_CXXFLAGS) $(CXXFLAGS) -MT qt/test/qt_test_test_heptafranc_qt-moc_compattests.o -MD -MP -MF qt/test/$(DEPDIR)/qt_test_test_heptafranc_qt-moc_compattests.Tpo -c -o qt/test/qt_test_test_heptafranc_qt-moc_compattests.o `test -f 'qt/test/moc_compattests.cpp' || echo '$(srcdir)/'`qt/test/moc_compattests.cpp
	$(AM_V_at)$(am__mv) qt/test/$(DEPDIR)/qt_test_test_heptafranc_qt-moc_compattests.Tpo qt/test/$(DEPDIR)/qt_test_test_heptafranc_qt-moc_compattests.Po
#	$(AM_V_CXX)source='qt/test/moc_compattests.cpp' object='qt/test/qt_test_test_heptafranc_qt-moc_compattests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_heptafranc_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_heptafranc_qt_CXXFLAGS) $(CXXFLAGS) -c -o qt/test/qt_test_test_heptafranc_qt-moc_compattests.o `test -f 'qt/test/moc_compattests.cpp' || echo '$(srcdir)/'`qt/test/moc_compattests.cpp

qt/test/qt_test_test_heptafranc_qt-moc_compattests.obj: qt/test/moc_compattests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_heptafranc_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_heptafranc_qt_CXXFLAGS) $(CXXFLAGS) -MT qt/test/qt_test_test_heptafranc_qt-moc_compattests.obj -MD -MP -MF qt/test/$(DEPDIR)/qt_test_test_heptafranc_qt-moc_compattests.Tpo -c -o qt/test/qt_test_test_heptafranc_qt-moc_compattests.obj `if test -f 'qt/test/moc_compattests.cpp'; then $(CYGPATH_W) 'qt/test/moc_compattests.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/test/moc_compattests.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/test/$(DEPDIR)/qt_test_test_heptafranc_qt-moc_compattests.Tpo qt/test/$(DEPDIR)/qt_test_test_heptafranc_qt-moc_compattests.Po
#	$(AM_V_CXX)source='qt/test/moc_compattests.cpp' object='qt/test/qt_test_test_heptafranc_qt-moc_compattests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_heptafranc_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_heptafranc_qt_CXXFLAGS) $(CXXFLAGS) -c -o qt/test/qt_test_test_heptafranc_qt-moc_compattests.obj `if test -f 'qt/test/moc_compattests.cpp'; then $(CYGPATH_W) 'qt/test/moc_compattests.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/test/moc_compattests.cpp'; fi`

qt/test/qt_test_test_heptafranc_qt-moc_rpcnestedtests.o: qt/test/moc_rpcnestedtests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_heptafranc_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_heptafranc_qt_CXXFLAGS) $(CXXFLAGS) -MT qt/test/qt_test_test_heptafranc_qt-moc_rpcnestedtests.o -MD -MP -MF qt/test/$(DEPDIR)/qt_test_test_heptafranc_qt-moc_rpcnestedtests.Tpo -c -o qt/test/qt_test_test_heptafranc_qt-moc_rpcnestedtests.o `test -f 'qt/test/moc_rpcnestedtests.cpp' || echo '$(srcdir)/'`qt/test/moc_rpcnestedtests.cpp
	$(AM_V_at)$(am__mv) qt/test/$(DEPDIR)/qt_test_test_heptafranc_qt-moc_rpcnestedtests.Tpo qt/test/$(DEPDIR)/qt_test_test_heptafranc_qt-moc_rpcnestedtests.Po
#	$(AM_V_CXX)source='qt/test/moc_rpcnestedtests.cpp' object='qt/test/qt_test_test_heptafranc_qt-moc_rpcnestedtests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_heptafranc_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_heptafranc_qt_CXXFLAGS) $(CXXFLAGS) -c -o qt/test/qt_test_test_heptafranc_qt-moc_rpcnestedtests.o `test -f 'qt/test/moc_rpcnestedtests.cpp' || echo '$(srcdir)/'`qt/test/moc_rpcnestedtests.cpp

qt/test/qt_test_test_heptafranc_qt-moc_rpcnestedtests.obj: qt/test/moc_rpcnestedtests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_heptafranc_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_heptafranc_qt_CXXFLAGS) $(CXXFLAGS) -MT qt/test/qt_test_test_heptafranc_qt-moc_rpcnestedtests.obj -MD -MP -MF qt/test/$(DEPDIR)/qt_test_test_heptafranc_qt-moc_rpcnestedtests.Tpo -c -o qt/test/qt_test_test_heptafranc_qt-moc_rpcnestedtests.obj `if test -f 'qt/test/moc_rpcnestedtests.cpp'; then $(CYGPATH_W) 'qt/test/moc_rpcnestedtests.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/test/moc_rpcnestedtests.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/test/$(DEPDIR)/qt_test_test_heptafranc_qt-moc_rpcnestedtests.Tpo qt/test/$(DEPDIR)/qt_test_test_heptafranc_qt-moc_rpcnestedtests.Po
#	$(AM_V_CXX)source='qt/test/moc_rpcnestedtests.cpp' object='qt/test/qt_test_test_heptafranc_qt-moc_rpcnestedtests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_heptafranc_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_heptafranc_qt_CXXFLAGS) $(CXXFLAGS) -c -o qt/test/qt_test_test_heptafranc_qt-moc_rpcnestedtests.obj `if test -f 'qt/test/moc_rpcnestedtests.cpp'; then $(CYGPATH_W) 'qt/test/moc_rpcnestedtests.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/test/moc_rpcnestedtests.cpp'; fi`

qt/test/qt_test_test_heptafranc_qt-moc_uritests.o: qt/test/moc_uritests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_heptafranc_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_heptafranc_qt_CXXFLAGS) $(CXXFLAGS) -MT qt/test/qt_test_test_heptafranc_qt-moc_uritests.o -MD -MP -MF qt/test/$(DEPDIR)/qt_test_test_heptafranc_qt-moc_uritests.Tpo -c -o qt/test/qt_test_test_heptafranc_qt-moc_uritests.o `test -f 'qt/test/moc_uritests.cpp' || echo '$(srcdir)/'`qt/test/moc_uritests.cpp
	$(AM_V_at)$(am__mv) qt/test/$(DEPDIR)/qt_test_test_heptafranc_qt-moc_uritests.Tpo qt/test/$(DEPDIR)/qt_test_test_heptafranc_qt-moc_uritests.Po
#	$(AM_V_CXX)source='qt/test/moc_uritests.cpp' object='qt/test/qt_test_test_heptafranc_qt-moc_uritests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_heptafranc_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_heptafranc_qt_CXXFLAGS) $(CXXFLAGS) -c -o qt/test/qt_test_test_heptafranc_qt-moc_uritests.o `test -f 'qt/test/moc_uritests.cpp' || echo '$(srcdir)/'`qt/test/moc_uritests.cpp

qt/test/qt_test_test_heptafranc_qt-moc_uritests.obj: qt/test/moc_uritests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_heptafranc_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_heptafranc_qt_CXXFLAGS) $(CXXFLAGS) -MT qt/test/qt_test_test_heptafranc_qt-moc_uritests.obj -MD -MP -MF qt/test/$(DEPDIR)/qt_test_test_heptafranc_qt-moc_uritests.Tpo -c -o qt/test/qt_test_test_heptafranc_qt-moc_uritests.obj `if test -f 'qt/test/moc_uritests.cpp'; then $(CYGPATH_W) 'qt/test/moc_uritests.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/test/moc_uritests.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/test/$(DEPDIR)/qt_test_test_heptafranc_qt-moc_uritests.Tpo qt/test/$(DEPDIR)/qt_test_test_heptafranc_qt-moc_uritests.Po
#	$(AM_V_CXX)source='qt/test/moc_uritests.cpp' object='qt/test/qt_test_test_heptafranc_qt-moc_uritests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_heptafranc_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_heptafranc_qt_CXXFLAGS) $(CXXFLAGS) -c -o qt/test/qt_test_test_heptafranc_qt-moc_uritests.obj `if test -f 'qt/test/moc_uritests.cpp'; then $(CYGPATH_W) 'qt/test/moc_uritests.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/test/moc_uritests.cpp'; fi`

qt/test/qt_test_test_heptafranc_qt-moc_addressbooktests.o: qt/test/moc_addressbooktests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_heptafranc_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_heptafranc_qt_CXXFLAGS) $(CXXFLAGS) -MT qt/test/qt_test_test_heptafranc_qt-moc_addressbooktests.o -MD -MP -MF qt/test/$(DEPDIR)/qt_test_test_heptafranc_qt-moc_addressbooktests.Tpo -c -o qt/test/qt_test_test_heptafranc_qt-moc_addressbooktests.o `test -f 'qt/test/moc_addressbooktests.cpp' || echo '$(srcdir)/'`qt/test/moc_addressbooktests.cpp
	$(AM_V_at)$(am__mv) qt/test/$(DEPDIR)/qt_test_test_heptafranc_qt-moc_addressbooktests.Tpo qt/test/$(DEPDIR)/qt_test_test_heptafranc_qt-moc_addressbooktests.Po
#	$(AM_V_CXX)source='qt/test/moc_addressbooktests.cpp' object='qt/test/qt_test_test_heptafranc_qt-moc_addressbooktests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_heptafranc_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_heptafranc_qt_CXXFLAGS) $(CXXFLAGS) -c -o qt/test/qt_test_test_heptafranc_qt-moc_addressbooktests.o `test -f 'qt/test/moc_addressbooktests.cpp' || echo '$(srcdir)/'`qt/test/moc_addressbooktests.cpp

qt/test/qt_test_test_heptafranc_qt-moc_addressbooktests.obj: qt/test/moc_addressbooktests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_heptafranc_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_heptafranc_qt_CXXFLAGS) $(CXXFLAGS) -MT qt/test/qt_test_test_heptafranc_qt-moc_addressbooktests.obj -MD -MP -MF qt/test/$(DEPDIR)/qt_test_test_heptafranc_qt-moc_addressbooktests.Tpo -c -o qt/test/qt_test_test_heptafranc_qt-moc_addressbooktests.obj `if test -f 'qt/test/moc_addressbooktests.cpp'; then $(CYGPATH_W) 'qt/test/moc_addressbooktests.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/test/moc_addressbooktests.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/test/$(DEPDIR)/qt_test_test_heptafranc_qt-moc_addressbooktests.Tpo qt/test/$(DEPDIR)/qt_test_test_heptafranc_qt-moc_addressbooktests.Po
#	$(AM_V_CXX)source='qt/test/moc_addressbooktests.cpp' object='qt/test/qt_test_test_heptafranc_qt-moc_addressbooktests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_heptafranc_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_heptafranc_qt_CXXFLAGS) $(CXXFLAGS) -c -o qt/test/qt_test_test_heptafranc_qt-moc_addressbooktests.obj `if test -f 'qt/test/moc_addressbooktests.cpp'; then $(CYGPATH_W) 'qt/test/moc_addressbooktests.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/test/moc_addressbooktests.cpp'; fi`

qt/test/qt_test_test_heptafranc_qt-moc_paymentservertests.o: qt/test/moc_paymentservertests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_heptafranc_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_heptafranc_qt_CXXFLAGS) $(CXXFLAGS) -MT qt/test/qt_test_test_heptafranc_qt-moc_paymentservertests.o -MD -MP -MF qt/test/$(DEPDIR)/qt_test_test_heptafranc_qt-moc_paymentservertests.Tpo -c -o qt/test/qt_test_test_heptafranc_qt-moc_paymentservertests.o `test -f 'qt/test/moc_paymentservertests.cpp' || echo '$(srcdir)/'`qt/test/moc_paymentservertests.cpp
	$(AM_V_at)$(am__mv) qt/test/$(DEPDIR)/qt_test_test_heptafranc_qt-moc_paymentservertests.Tpo qt/test/$(DEPDIR)/qt_test_test_heptafranc_qt-moc_paymentservertests.Po
#	$(AM_V_CXX)source='qt/test/moc_paymentservertests.cpp' object='qt/test/qt_test_test_heptafranc_qt-moc_paymentservertests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_heptafranc_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_heptafranc_qt_CXXFLAGS) $(CXXFLAGS) -c -o qt/test/qt_test_test_heptafranc_qt-moc_paymentservertests.o `test -f 'qt/test/moc_paymentservertests.cpp' || echo '$(srcdir)/'`qt/test/moc_paymentservertests.cpp

qt/test/qt_test_test_heptafranc_qt-moc_paymentservertests.obj: qt/test/moc_paymentservertests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_heptafranc_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_heptafranc_qt_CXXFLAGS) $(CXXFLAGS) -MT qt/test/qt_test_test_heptafranc_qt-moc_paymentservertests.obj -MD -MP -MF qt/test/$(DEPDIR)/qt_test_test_heptafranc_qt-moc_paymentservertests.Tpo -c -o qt/test/qt_test_test_heptafranc_qt-moc_paymentservertests.obj `if test -f 'qt/test/moc_paymentservertests.cpp'; then $(CYGPATH_W) 'qt/test/moc_paymentservertests.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/test/moc_paymentservertests.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/test/$(DEPDIR)/qt_test_test_heptafranc_qt-moc_paymentservertests.Tpo qt/test/$(DEPDIR)/qt_test_test_heptafranc_qt-moc_paymentservertests.Po
#	$(AM_V_CXX)source='qt/test/moc_paymentservertests.cpp' object='qt/test/qt_test_test_heptafranc_qt-moc_paymentservertests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_heptafranc_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_heptafranc_qt_CXXFLAGS) $(CXXFLAGS) -c -o qt/test/qt_test_test_heptafranc_qt-moc_paymentservertests.obj `if test -f 'qt/test/moc_paymentservertests.cpp'; then $(CYGPATH_W) 'qt/test/moc_paymentservertests.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/test/moc_paymentservertests.cpp'; fi`

qt/test/qt_test_test_heptafranc_qt-moc_wallettests.o: qt/test/moc_wallettests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_heptafranc_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_heptafranc_qt_CXXFLAGS) $(CXXFLAGS) -MT qt/test/qt_test_test_heptafranc_qt-moc_wallettests.o -MD -MP -MF qt/test/$(DEPDIR)/qt_test_test_heptafranc_qt-moc_wallettests.Tpo -c -o qt/test/qt_test_test_heptafranc_qt-moc_wallettests.o `test -f 'qt/test/moc_wallettests.cpp' || echo '$(srcdir)/'`qt/test/moc_wallettests.cpp
	$(AM_V_at)$(am__mv) qt/test/$(DEPDIR)/qt_test_test_heptafranc_qt-moc_wallettests.Tpo qt/test/$(DEPDIR)/qt_test_test_heptafranc_qt-moc_wallettests.Po
#	$(AM_V_CXX)source='qt/test/moc_wallettests.cpp' object='qt/test/qt_test_test_heptafranc_qt-moc_wallettests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_heptafranc_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_heptafranc_qt_CXXFLAGS) $(CXXFLAGS) -c -o qt/test/qt_test_test_heptafranc_qt-moc_wallettests.o `test -f 'qt/test/moc_wallettests.cpp' || echo '$(srcdir)/'`qt/test/moc_wallettests.cpp

qt/test/qt_test_test_heptafranc_qt-moc_wallettests.obj: qt/test/moc_wallettests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_heptafranc_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_heptafranc_qt_CXXFLAGS) $(CXXFLAGS) -MT qt/test/qt_test_test_heptafranc_qt-moc_wallettests.obj -MD -MP -MF qt/test/$(DEPDIR)/qt_test_test_heptafranc_qt-moc_wallettests.Tpo -c -o qt/test/qt_test_test_heptafranc_qt-moc_wallettests.obj `if test -f 'qt/test/moc_wallettests.cpp'; then $(CYGPATH_W) 'qt/test/moc_wallettests.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/test/moc_wallettests.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/test/$(DEPDIR)/qt_test_test_heptafranc_qt-moc_wallettests.Tpo qt/test/$(DEPDIR)/qt_test_test_heptafranc_qt-moc_wallettests.Po
#	$(AM_V_CXX)source='qt/test/moc_wallettests.cpp' object='qt/test/qt_test_test_heptafranc_qt-moc_wallettests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_heptafranc_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_heptafranc_qt_CXXFLAGS) $(CXXFLAGS) -c -o qt/test/qt_test_test_heptafranc_qt-moc_wallettests.obj `if test -f 'qt/test/moc_wallettests.cpp'; then $(CYGPATH_W) 'qt/test/moc_wallettests.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/test/moc_wallettests.cpp'; fi`

test/test_test_heptafranc-test_heptafranc_main.o: test/test_heptafranc_main.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_heptafranc-test_heptafranc_main.o -MD -MP -MF test/$(DEPDIR)/test_test_heptafranc-test_heptafranc_main.Tpo -c -o test/test_test_heptafranc-test_heptafranc_main.o `test -f 'test/test_heptafranc_main.cpp' || echo '$(srcdir)/'`test/test_heptafranc_main.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_heptafranc-test_heptafranc_main.Tpo test/$(DEPDIR)/test_test_heptafranc-test_heptafranc_main.Po
#	$(AM_V_CXX)source='test/test_heptafranc_main.cpp' object='test/test_test_heptafranc-test_heptafranc_main.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_heptafranc-test_heptafranc_main.o `test -f 'test/test_heptafranc_main.cpp' || echo '$(srcdir)/'`test/test_heptafranc_main.cpp

test/test_test_heptafranc-test_heptafranc_main.obj: test/test_heptafranc_main.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_heptafranc-test_heptafranc_main.obj -MD -MP -MF test/$(DEPDIR)/test_test_heptafranc-test_heptafranc_main.Tpo -c -o test/test_test_heptafranc-test_heptafranc_main.obj `if test -f 'test/test_heptafranc_main.cpp'; then $(CYGPATH_W) 'test/test_heptafranc_main.cpp'; else $(CYGPATH_W) '$(srcdir)/test/test_heptafranc_main.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_heptafranc-test_heptafranc_main.Tpo test/$(DEPDIR)/test_test_heptafranc-test_heptafranc_main.Po
#	$(AM_V_CXX)source='test/test_heptafranc_main.cpp' object='test/test_test_heptafranc-test_heptafranc_main.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_heptafranc-test_heptafranc_main.obj `if test -f 'test/test_heptafranc_main.cpp'; then $(CYGPATH_W) 'test/test_heptafranc_main.cpp'; else $(CYGPATH_W) '$(srcdir)/test/test_heptafranc_main.cpp'; fi`

test/test_test_heptafranc-test_heptafranc.o: test/test_heptafranc.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_heptafranc-test_heptafranc.o -MD -MP -MF test/$(DEPDIR)/test_test_heptafranc-test_heptafranc.Tpo -c -o test/test_test_heptafranc-test_heptafranc.o `test -f 'test/test_heptafranc.cpp' || echo '$(srcdir)/'`test/test_heptafranc.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_heptafranc-test_heptafranc.Tpo test/$(DEPDIR)/test_test_heptafranc-test_heptafranc.Po
#	$(AM_V_CXX)source='test/test_heptafranc.cpp' object='test/test_test_heptafranc-test_heptafranc.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_heptafranc-test_heptafranc.o `test -f 'test/test_heptafranc.cpp' || echo '$(srcdir)/'`test/test_heptafranc.cpp

test/test_test_heptafranc-test_heptafranc.obj: test/test_heptafranc.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_heptafranc-test_heptafranc.obj -MD -MP -MF test/$(DEPDIR)/test_test_heptafranc-test_heptafranc.Tpo -c -o test/test_test_heptafranc-test_heptafranc.obj `if test -f 'test/test_heptafranc.cpp'; then $(CYGPATH_W) 'test/test_heptafranc.cpp'; else $(CYGPATH_W) '$(srcdir)/test/test_heptafranc.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_heptafranc-test_heptafranc.Tpo test/$(DEPDIR)/test_test_heptafranc-test_heptafranc.Po
#	$(AM_V_CXX)source='test/test_heptafranc.cpp' object='test/test_test_heptafranc-test_heptafranc.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_heptafranc-test_heptafranc.obj `if test -f 'test/test_heptafranc.cpp'; then $(CYGPATH_W) 'test/test_heptafranc.cpp'; else $(CYGPATH_W) '$(srcdir)/test/test_heptafranc.cpp'; fi`

wallet/test/test_test_heptafranc-wallet_test_fixture.o: wallet/test/wallet_test_fixture.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -MT wallet/test/test_test_heptafranc-wallet_test_fixture.o -MD -MP -MF wallet/test/$(DEPDIR)/test_test_heptafranc-wallet_test_fixture.Tpo -c -o wallet/test/test_test_heptafranc-wallet_test_fixture.o `test -f 'wallet/test/wallet_test_fixture.cpp' || echo '$(srcdir)/'`wallet/test/wallet_test_fixture.cpp
	$(AM_V_at)$(am__mv) wallet/test/$(DEPDIR)/test_test_heptafranc-wallet_test_fixture.Tpo wallet/test/$(DEPDIR)/test_test_heptafranc-wallet_test_fixture.Po
#	$(AM_V_CXX)source='wallet/test/wallet_test_fixture.cpp' object='wallet/test/test_test_heptafranc-wallet_test_fixture.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -c -o wallet/test/test_test_heptafranc-wallet_test_fixture.o `test -f 'wallet/test/wallet_test_fixture.cpp' || echo '$(srcdir)/'`wallet/test/wallet_test_fixture.cpp

wallet/test/test_test_heptafranc-wallet_test_fixture.obj: wallet/test/wallet_test_fixture.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -MT wallet/test/test_test_heptafranc-wallet_test_fixture.obj -MD -MP -MF wallet/test/$(DEPDIR)/test_test_heptafranc-wallet_test_fixture.Tpo -c -o wallet/test/test_test_heptafranc-wallet_test_fixture.obj `if test -f 'wallet/test/wallet_test_fixture.cpp'; then $(CYGPATH_W) 'wallet/test/wallet_test_fixture.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/test/wallet_test_fixture.cpp'; fi`
	$(AM_V_at)$(am__mv) wallet/test/$(DEPDIR)/test_test_heptafranc-wallet_test_fixture.Tpo wallet/test/$(DEPDIR)/test_test_heptafranc-wallet_test_fixture.Po
#	$(AM_V_CXX)source='wallet/test/wallet_test_fixture.cpp' object='wallet/test/test_test_heptafranc-wallet_test_fixture.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -c -o wallet/test/test_test_heptafranc-wallet_test_fixture.obj `if test -f 'wallet/test/wallet_test_fixture.cpp'; then $(CYGPATH_W) 'wallet/test/wallet_test_fixture.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/test/wallet_test_fixture.cpp'; fi`

test/test_test_heptafranc-arith_uint256_tests.o: test/arith_uint256_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_heptafranc-arith_uint256_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_heptafranc-arith_uint256_tests.Tpo -c -o test/test_test_heptafranc-arith_uint256_tests.o `test -f 'test/arith_uint256_tests.cpp' || echo '$(srcdir)/'`test/arith_uint256_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_heptafranc-arith_uint256_tests.Tpo test/$(DEPDIR)/test_test_heptafranc-arith_uint256_tests.Po
#	$(AM_V_CXX)source='test/arith_uint256_tests.cpp' object='test/test_test_heptafranc-arith_uint256_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_heptafranc-arith_uint256_tests.o `test -f 'test/arith_uint256_tests.cpp' || echo '$(srcdir)/'`test/arith_uint256_tests.cpp

test/test_test_heptafranc-arith_uint256_tests.obj: test/arith_uint256_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_heptafranc-arith_uint256_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_heptafranc-arith_uint256_tests.Tpo -c -o test/test_test_heptafranc-arith_uint256_tests.obj `if test -f 'test/arith_uint256_tests.cpp'; then $(CYGPATH_W) 'test/arith_uint256_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/arith_uint256_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_heptafranc-arith_uint256_tests.Tpo test/$(DEPDIR)/test_test_heptafranc-arith_uint256_tests.Po
#	$(AM_V_CXX)source='test/arith_uint256_tests.cpp' object='test/test_test_heptafranc-arith_uint256_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_heptafranc-arith_uint256_tests.obj `if test -f 'test/arith_uint256_tests.cpp'; then $(CYGPATH_W) 'test/arith_uint256_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/arith_uint256_tests.cpp'; fi`

test/test_test_heptafranc-addrman_tests.o: test/addrman_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_heptafranc-addrman_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_heptafranc-addrman_tests.Tpo -c -o test/test_test_heptafranc-addrman_tests.o `test -f 'test/addrman_tests.cpp' || echo '$(srcdir)/'`test/addrman_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_heptafranc-addrman_tests.Tpo test/$(DEPDIR)/test_test_heptafranc-addrman_tests.Po
#	$(AM_V_CXX)source='test/addrman_tests.cpp' object='test/test_test_heptafranc-addrman_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_heptafranc-addrman_tests.o `test -f 'test/addrman_tests.cpp' || echo '$(srcdir)/'`test/addrman_tests.cpp

test/test_test_heptafranc-addrman_tests.obj: test/addrman_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_heptafranc-addrman_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_heptafranc-addrman_tests.Tpo -c -o test/test_test_heptafranc-addrman_tests.obj `if test -f 'test/addrman_tests.cpp'; then $(CYGPATH_W) 'test/addrman_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/addrman_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_heptafranc-addrman_tests.Tpo test/$(DEPDIR)/test_test_heptafranc-addrman_tests.Po
#	$(AM_V_CXX)source='test/addrman_tests.cpp' object='test/test_test_heptafranc-addrman_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_heptafranc-addrman_tests.obj `if test -f 'test/addrman_tests.cpp'; then $(CYGPATH_W) 'test/addrman_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/addrman_tests.cpp'; fi`

test/test_test_heptafranc-amount_tests.o: test/amount_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_heptafranc-amount_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_heptafranc-amount_tests.Tpo -c -o test/test_test_heptafranc-amount_tests.o `test -f 'test/amount_tests.cpp' || echo '$(srcdir)/'`test/amount_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_heptafranc-amount_tests.Tpo test/$(DEPDIR)/test_test_heptafranc-amount_tests.Po
#	$(AM_V_CXX)source='test/amount_tests.cpp' object='test/test_test_heptafranc-amount_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_heptafranc-amount_tests.o `test -f 'test/amount_tests.cpp' || echo '$(srcdir)/'`test/amount_tests.cpp

test/test_test_heptafranc-amount_tests.obj: test/amount_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_heptafranc-amount_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_heptafranc-amount_tests.Tpo -c -o test/test_test_heptafranc-amount_tests.obj `if test -f 'test/amount_tests.cpp'; then $(CYGPATH_W) 'test/amount_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/amount_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_heptafranc-amount_tests.Tpo test/$(DEPDIR)/test_test_heptafranc-amount_tests.Po
#	$(AM_V_CXX)source='test/amount_tests.cpp' object='test/test_test_heptafranc-amount_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_heptafranc-amount_tests.obj `if test -f 'test/amount_tests.cpp'; then $(CYGPATH_W) 'test/amount_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/amount_tests.cpp'; fi`

test/test_test_heptafranc-allocator_tests.o: test/allocator_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_heptafranc-allocator_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_heptafranc-allocator_tests.Tpo -c -o test/test_test_heptafranc-allocator_tests.o `test -f 'test/allocator_tests.cpp' || echo '$(srcdir)/'`test/allocator_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_heptafranc-allocator_tests.Tpo test/$(DEPDIR)/test_test_heptafranc-allocator_tests.Po
#	$(AM_V_CXX)source='test/allocator_tests.cpp' object='test/test_test_heptafranc-allocator_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_heptafranc-allocator_tests.o `test -f 'test/allocator_tests.cpp' || echo '$(srcdir)/'`test/allocator_tests.cpp

test/test_test_heptafranc-allocator_tests.obj: test/allocator_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_heptafranc-allocator_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_heptafranc-allocator_tests.Tpo -c -o test/test_test_heptafranc-allocator_tests.obj `if test -f 'test/allocator_tests.cpp'; then $(CYGPATH_W) 'test/allocator_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/allocator_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_heptafranc-allocator_tests.Tpo test/$(DEPDIR)/test_test_heptafranc-allocator_tests.Po
#	$(AM_V_CXX)source='test/allocator_tests.cpp' object='test/test_test_heptafranc-allocator_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_heptafranc-allocator_tests.obj `if test -f 'test/allocator_tests.cpp'; then $(CYGPATH_W) 'test/allocator_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/allocator_tests.cpp'; fi`

test/test_test_heptafranc-base32_tests.o: test/base32_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_heptafranc-base32_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_heptafranc-base32_tests.Tpo -c -o test/test_test_heptafranc-base32_tests.o `test -f 'test/base32_tests.cpp' || echo '$(srcdir)/'`test/base32_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_heptafranc-base32_tests.Tpo test/$(DEPDIR)/test_test_heptafranc-base32_tests.Po
#	$(AM_V_CXX)source='test/base32_tests.cpp' object='test/test_test_heptafranc-base32_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_heptafranc-base32_tests.o `test -f 'test/base32_tests.cpp' || echo '$(srcdir)/'`test/base32_tests.cpp

test/test_test_heptafranc-base32_tests.obj: test/base32_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_heptafranc-base32_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_heptafranc-base32_tests.Tpo -c -o test/test_test_heptafranc-base32_tests.obj `if test -f 'test/base32_tests.cpp'; then $(CYGPATH_W) 'test/base32_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/base32_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_heptafranc-base32_tests.Tpo test/$(DEPDIR)/test_test_heptafranc-base32_tests.Po
#	$(AM_V_CXX)source='test/base32_tests.cpp' object='test/test_test_heptafranc-base32_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_heptafranc-base32_tests.obj `if test -f 'test/base32_tests.cpp'; then $(CYGPATH_W) 'test/base32_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/base32_tests.cpp'; fi`

test/test_test_heptafranc-base58_tests.o: test/base58_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_heptafranc-base58_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_heptafranc-base58_tests.Tpo -c -o test/test_test_heptafranc-base58_tests.o `test -f 'test/base58_tests.cpp' || echo '$(srcdir)/'`test/base58_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_heptafranc-base58_tests.Tpo test/$(DEPDIR)/test_test_heptafranc-base58_tests.Po
#	$(AM_V_CXX)source='test/base58_tests.cpp' object='test/test_test_heptafranc-base58_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_heptafranc-base58_tests.o `test -f 'test/base58_tests.cpp' || echo '$(srcdir)/'`test/base58_tests.cpp

test/test_test_heptafranc-base58_tests.obj: test/base58_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_heptafranc-base58_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_heptafranc-base58_tests.Tpo -c -o test/test_test_heptafranc-base58_tests.obj `if test -f 'test/base58_tests.cpp'; then $(CYGPATH_W) 'test/base58_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/base58_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_heptafranc-base58_tests.Tpo test/$(DEPDIR)/test_test_heptafranc-base58_tests.Po
#	$(AM_V_CXX)source='test/base58_tests.cpp' object='test/test_test_heptafranc-base58_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_heptafranc-base58_tests.obj `if test -f 'test/base58_tests.cpp'; then $(CYGPATH_W) 'test/base58_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/base58_tests.cpp'; fi`

test/test_test_heptafranc-base64_tests.o: test/base64_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_heptafranc-base64_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_heptafranc-base64_tests.Tpo -c -o test/test_test_heptafranc-base64_tests.o `test -f 'test/base64_tests.cpp' || echo '$(srcdir)/'`test/base64_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_heptafranc-base64_tests.Tpo test/$(DEPDIR)/test_test_heptafranc-base64_tests.Po
#	$(AM_V_CXX)source='test/base64_tests.cpp' object='test/test_test_heptafranc-base64_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_heptafranc-base64_tests.o `test -f 'test/base64_tests.cpp' || echo '$(srcdir)/'`test/base64_tests.cpp

test/test_test_heptafranc-base64_tests.obj: test/base64_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_heptafranc-base64_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_heptafranc-base64_tests.Tpo -c -o test/test_test_heptafranc-base64_tests.obj `if test -f 'test/base64_tests.cpp'; then $(CYGPATH_W) 'test/base64_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/base64_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_heptafranc-base64_tests.Tpo test/$(DEPDIR)/test_test_heptafranc-base64_tests.Po
#	$(AM_V_CXX)source='test/base64_tests.cpp' object='test/test_test_heptafranc-base64_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_heptafranc-base64_tests.obj `if test -f 'test/base64_tests.cpp'; then $(CYGPATH_W) 'test/base64_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/base64_tests.cpp'; fi`

test/test_test_heptafranc-bech32_tests.o: test/bech32_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_heptafranc-bech32_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_heptafranc-bech32_tests.Tpo -c -o test/test_test_heptafranc-bech32_tests.o `test -f 'test/bech32_tests.cpp' || echo '$(srcdir)/'`test/bech32_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_heptafranc-bech32_tests.Tpo test/$(DEPDIR)/test_test_heptafranc-bech32_tests.Po
#	$(AM_V_CXX)source='test/bech32_tests.cpp' object='test/test_test_heptafranc-bech32_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_heptafranc-bech32_tests.o `test -f 'test/bech32_tests.cpp' || echo '$(srcdir)/'`test/bech32_tests.cpp

test/test_test_heptafranc-bech32_tests.obj: test/bech32_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_heptafranc-bech32_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_heptafranc-bech32_tests.Tpo -c -o test/test_test_heptafranc-bech32_tests.obj `if test -f 'test/bech32_tests.cpp'; then $(CYGPATH_W) 'test/bech32_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/bech32_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_heptafranc-bech32_tests.Tpo test/$(DEPDIR)/test_test_heptafranc-bech32_tests.Po
#	$(AM_V_CXX)source='test/bech32_tests.cpp' object='test/test_test_heptafranc-bech32_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_heptafranc-bech32_tests.obj `if test -f 'test/bech32_tests.cpp'; then $(CYGPATH_W) 'test/bech32_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/bech32_tests.cpp'; fi`

test/test_test_heptafranc-bip32_tests.o: test/bip32_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_heptafranc-bip32_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_heptafranc-bip32_tests.Tpo -c -o test/test_test_heptafranc-bip32_tests.o `test -f 'test/bip32_tests.cpp' || echo '$(srcdir)/'`test/bip32_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_heptafranc-bip32_tests.Tpo test/$(DEPDIR)/test_test_heptafranc-bip32_tests.Po
#	$(AM_V_CXX)source='test/bip32_tests.cpp' object='test/test_test_heptafranc-bip32_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_heptafranc-bip32_tests.o `test -f 'test/bip32_tests.cpp' || echo '$(srcdir)/'`test/bip32_tests.cpp

test/test_test_heptafranc-bip32_tests.obj: test/bip32_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_heptafranc-bip32_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_heptafranc-bip32_tests.Tpo -c -o test/test_test_heptafranc-bip32_tests.obj `if test -f 'test/bip32_tests.cpp'; then $(CYGPATH_W) 'test/bip32_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/bip32_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_heptafranc-bip32_tests.Tpo test/$(DEPDIR)/test_test_heptafranc-bip32_tests.Po
#	$(AM_V_CXX)source='test/bip32_tests.cpp' object='test/test_test_heptafranc-bip32_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_heptafranc-bip32_tests.obj `if test -f 'test/bip32_tests.cpp'; then $(CYGPATH_W) 'test/bip32_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/bip32_tests.cpp'; fi`

test/test_test_heptafranc-blockchain_tests.o: test/blockchain_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_heptafranc-blockchain_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_heptafranc-blockchain_tests.Tpo -c -o test/test_test_heptafranc-blockchain_tests.o `test -f 'test/blockchain_tests.cpp' || echo '$(srcdir)/'`test/blockchain_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_heptafranc-blockchain_tests.Tpo test/$(DEPDIR)/test_test_heptafranc-blockchain_tests.Po
#	$(AM_V_CXX)source='test/blockchain_tests.cpp' object='test/test_test_heptafranc-blockchain_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_heptafranc-blockchain_tests.o `test -f 'test/blockchain_tests.cpp' || echo '$(srcdir)/'`test/blockchain_tests.cpp

test/test_test_heptafranc-blockchain_tests.obj: test/blockchain_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_heptafranc-blockchain_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_heptafranc-blockchain_tests.Tpo -c -o test/test_test_heptafranc-blockchain_tests.obj `if test -f 'test/blockchain_tests.cpp'; then $(CYGPATH_W) 'test/blockchain_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/blockchain_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_heptafranc-blockchain_tests.Tpo test/$(DEPDIR)/test_test_heptafranc-blockchain_tests.Po
#	$(AM_V_CXX)source='test/blockchain_tests.cpp' object='test/test_test_heptafranc-blockchain_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_heptafranc-blockchain_tests.obj `if test -f 'test/blockchain_tests.cpp'; then $(CYGPATH_W) 'test/blockchain_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/blockchain_tests.cpp'; fi`

test/test_test_heptafranc-blockencodings_tests.o: test/blockencodings_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_heptafranc-blockencodings_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_heptafranc-blockencodings_tests.Tpo -c -o test/test_test_heptafranc-blockencodings_tests.o `test -f 'test/blockencodings_tests.cpp' || echo '$(srcdir)/'`test/blockencodings_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_heptafranc-blockencodings_tests.Tpo test/$(DEPDIR)/test_test_heptafranc-blockencodings_tests.Po
#	$(AM_V_CXX)source='test/blockencodings_tests.cpp' object='test/test_test_heptafranc-blockencodings_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_heptafranc-blockencodings_tests.o `test -f 'test/blockencodings_tests.cpp' || echo '$(srcdir)/'`test/blockencodings_tests.cpp

test/test_test_heptafranc-blockencodings_tests.obj: test/blockencodings_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_heptafranc-blockencodings_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_heptafranc-blockencodings_tests.Tpo -c -o test/test_test_heptafranc-blockencodings_tests.obj `if test -f 'test/blockencodings_tests.cpp'; then $(CYGPATH_W) 'test/blockencodings_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/blockencodings_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_heptafranc-blockencodings_tests.Tpo test/$(DEPDIR)/test_test_heptafranc-blockencodings_tests.Po
#	$(AM_V_CXX)source='test/blockencodings_tests.cpp' object='test/test_test_heptafranc-blockencodings_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_heptafranc-blockencodings_tests.obj `if test -f 'test/blockencodings_tests.cpp'; then $(CYGPATH_W) 'test/blockencodings_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/blockencodings_tests.cpp'; fi`

test/test_test_heptafranc-bloom_tests.o: test/bloom_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_heptafranc-bloom_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_heptafranc-bloom_tests.Tpo -c -o test/test_test_heptafranc-bloom_tests.o `test -f 'test/bloom_tests.cpp' || echo '$(srcdir)/'`test/bloom_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_heptafranc-bloom_tests.Tpo test/$(DEPDIR)/test_test_heptafranc-bloom_tests.Po
#	$(AM_V_CXX)source='test/bloom_tests.cpp' object='test/test_test_heptafranc-bloom_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_heptafranc-bloom_tests.o `test -f 'test/bloom_tests.cpp' || echo '$(srcdir)/'`test/bloom_tests.cpp

test/test_test_heptafranc-bloom_tests.obj: test/bloom_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_heptafranc-bloom_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_heptafranc-bloom_tests.Tpo -c -o test/test_test_heptafranc-bloom_tests.obj `if test -f 'test/bloom_tests.cpp'; then $(CYGPATH_W) 'test/bloom_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/bloom_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_heptafranc-bloom_tests.Tpo test/$(DEPDIR)/test_test_heptafranc-bloom_tests.Po
#	$(AM_V_CXX)source='test/bloom_tests.cpp' object='test/test_test_heptafranc-bloom_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_heptafranc-bloom_tests.obj `if test -f 'test/bloom_tests.cpp'; then $(CYGPATH_W) 'test/bloom_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/bloom_tests.cpp'; fi`

test/test_test_heptafranc-bswap_tests.o: test/bswap_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_heptafranc-bswap_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_heptafranc-bswap_tests.Tpo -c -o test/test_test_heptafranc-bswap_tests.o `test -f 'test/bswap_tests.cpp' || echo '$(srcdir)/'`test/bswap_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_heptafranc-bswap_tests.Tpo test/$(DEPDIR)/test_test_heptafranc-bswap_tests.Po
#	$(AM_V_CXX)source='test/bswap_tests.cpp' object='test/test_test_heptafranc-bswap_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_heptafranc-bswap_tests.o `test -f 'test/bswap_tests.cpp' || echo '$(srcdir)/'`test/bswap_tests.cpp

test/test_test_heptafranc-bswap_tests.obj: test/bswap_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_heptafranc-bswap_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_heptafranc-bswap_tests.Tpo -c -o test/test_test_heptafranc-bswap_tests.obj `if test -f 'test/bswap_tests.cpp'; then $(CYGPATH_W) 'test/bswap_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/bswap_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_heptafranc-bswap_tests.Tpo test/$(DEPDIR)/test_test_heptafranc-bswap_tests.Po
#	$(AM_V_CXX)source='test/bswap_tests.cpp' object='test/test_test_heptafranc-bswap_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_heptafranc-bswap_tests.obj `if test -f 'test/bswap_tests.cpp'; then $(CYGPATH_W) 'test/bswap_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/bswap_tests.cpp'; fi`

test/test_test_heptafranc-checkqueue_tests.o: test/checkqueue_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_heptafranc-checkqueue_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_heptafranc-checkqueue_tests.Tpo -c -o test/test_test_heptafranc-checkqueue_tests.o `test -f 'test/checkqueue_tests.cpp' || echo '$(srcdir)/'`test/checkqueue_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_heptafranc-checkqueue_tests.Tpo test/$(DEPDIR)/test_test_heptafranc-checkqueue_tests.Po
#	$(AM_V_CXX)source='test/checkqueue_tests.cpp' object='test/test_test_heptafranc-checkqueue_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_heptafranc-checkqueue_tests.o `test -f 'test/checkqueue_tests.cpp' || echo '$(srcdir)/'`test/checkqueue_tests.cpp

test/test_test_heptafranc-checkqueue_tests.obj: test/checkqueue_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_heptafranc-checkqueue_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_heptafranc-checkqueue_tests.Tpo -c -o test/test_test_heptafranc-checkqueue_tests.obj `if test -f 'test/checkqueue_tests.cpp'; then $(CYGPATH_W) 'test/checkqueue_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/checkqueue_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_heptafranc-checkqueue_tests.Tpo test/$(DEPDIR)/test_test_heptafranc-checkqueue_tests.Po
#	$(AM_V_CXX)source='test/checkqueue_tests.cpp' object='test/test_test_heptafranc-checkqueue_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_heptafranc-checkqueue_tests.obj `if test -f 'test/checkqueue_tests.cpp'; then $(CYGPATH_W) 'test/checkqueue_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/checkqueue_tests.cpp'; fi`

test/test_test_heptafranc-coins_tests.o: test/coins_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_heptafranc-coins_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_heptafranc-coins_tests.Tpo -c -o test/test_test_heptafranc-coins_tests.o `test -f 'test/coins_tests.cpp' || echo '$(srcdir)/'`test/coins_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_heptafranc-coins_tests.Tpo test/$(DEPDIR)/test_test_heptafranc-coins_tests.Po
#	$(AM_V_CXX)source='test/coins_tests.cpp' object='test/test_test_heptafranc-coins_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_heptafranc-coins_tests.o `test -f 'test/coins_tests.cpp' || echo '$(srcdir)/'`test/coins_tests.cpp

test/test_test_heptafranc-coins_tests.obj: test/coins_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_heptafranc-coins_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_heptafranc-coins_tests.Tpo -c -o test/test_test_heptafranc-coins_tests.obj `if test -f 'test/coins_tests.cpp'; then $(CYGPATH_W) 'test/coins_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/coins_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_heptafranc-coins_tests.Tpo test/$(DEPDIR)/test_test_heptafranc-coins_tests.Po
#	$(AM_V_CXX)source='test/coins_tests.cpp' object='test/test_test_heptafranc-coins_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_heptafranc-coins_tests.obj `if test -f 'test/coins_tests.cpp'; then $(CYGPATH_W) 'test/coins_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/coins_tests.cpp'; fi`

test/test_test_heptafranc-compress_tests.o: test/compress_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_heptafranc-compress_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_heptafranc-compress_tests.Tpo -c -o test/test_test_heptafranc-compress_tests.o `test -f 'test/compress_tests.cpp' || echo '$(srcdir)/'`test/compress_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_heptafranc-compress_tests.Tpo test/$(DEPDIR)/test_test_heptafranc-compress_tests.Po
#	$(AM_V_CXX)source='test/compress_tests.cpp' object='test/test_test_heptafranc-compress_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_heptafranc-compress_tests.o `test -f 'test/compress_tests.cpp' || echo '$(srcdir)/'`test/compress_tests.cpp

test/test_test_heptafranc-compress_tests.obj: test/compress_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_heptafranc-compress_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_heptafranc-compress_tests.Tpo -c -o test/test_test_heptafranc-compress_tests.obj `if test -f 'test/compress_tests.cpp'; then $(CYGPATH_W) 'test/compress_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/compress_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_heptafranc-compress_tests.Tpo test/$(DEPDIR)/test_test_heptafranc-compress_tests.Po
#	$(AM_V_CXX)source='test/compress_tests.cpp' object='test/test_test_heptafranc-compress_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_heptafranc-compress_tests.obj `if test -f 'test/compress_tests.cpp'; then $(CYGPATH_W) 'test/compress_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/compress_tests.cpp'; fi`

test/test_test_heptafranc-crypto_tests.o: test/crypto_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_heptafranc-crypto_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_heptafranc-crypto_tests.Tpo -c -o test/test_test_heptafranc-crypto_tests.o `test -f 'test/crypto_tests.cpp' || echo '$(srcdir)/'`test/crypto_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_heptafranc-crypto_tests.Tpo test/$(DEPDIR)/test_test_heptafranc-crypto_tests.Po
#	$(AM_V_CXX)source='test/crypto_tests.cpp' object='test/test_test_heptafranc-crypto_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_heptafranc-crypto_tests.o `test -f 'test/crypto_tests.cpp' || echo '$(srcdir)/'`test/crypto_tests.cpp

test/test_test_heptafranc-crypto_tests.obj: test/crypto_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_heptafranc-crypto_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_heptafranc-crypto_tests.Tpo -c -o test/test_test_heptafranc-crypto_tests.obj `if test -f 'test/crypto_tests.cpp'; then $(CYGPATH_W) 'test/crypto_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/crypto_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_heptafranc-crypto_tests.Tpo test/$(DEPDIR)/test_test_heptafranc-crypto_tests.Po
#	$(AM_V_CXX)source='test/crypto_tests.cpp' object='test/test_test_heptafranc-crypto_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_heptafranc-crypto_tests.obj `if test -f 'test/crypto_tests.cpp'; then $(CYGPATH_W) 'test/crypto_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/crypto_tests.cpp'; fi`

test/test_test_heptafranc-cuckoocache_tests.o: test/cuckoocache_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_heptafranc-cuckoocache_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_heptafranc-cuckoocache_tests.Tpo -c -o test/test_test_heptafranc-cuckoocache_tests.o `test -f 'test/cuckoocache_tests.cpp' || echo '$(srcdir)/'`test/cuckoocache_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_heptafranc-cuckoocache_tests.Tpo test/$(DEPDIR)/test_test_heptafranc-cuckoocache_tests.Po
#	$(AM_V_CXX)source='test/cuckoocache_tests.cpp' object='test/test_test_heptafranc-cuckoocache_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_heptafranc-cuckoocache_tests.o `test -f 'test/cuckoocache_tests.cpp' || echo '$(srcdir)/'`test/cuckoocache_tests.cpp

test/test_test_heptafranc-cuckoocache_tests.obj: test/cuckoocache_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_heptafranc-cuckoocache_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_heptafranc-cuckoocache_tests.Tpo -c -o test/test_test_heptafranc-cuckoocache_tests.obj `if test -f 'test/cuckoocache_tests.cpp'; then $(CYGPATH_W) 'test/cuckoocache_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/cuckoocache_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_heptafranc-cuckoocache_tests.Tpo test/$(DEPDIR)/test_test_heptafranc-cuckoocache_tests.Po
#	$(AM_V_CXX)source='test/cuckoocache_tests.cpp' object='test/test_test_heptafranc-cuckoocache_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_heptafranc-cuckoocache_tests.obj `if test -f 'test/cuckoocache_tests.cpp'; then $(CYGPATH_W) 'test/cuckoocache_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/cuckoocache_tests.cpp'; fi`

test/test_test_heptafranc-denialofservice_tests.o: test/denialofservice_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_heptafranc-denialofservice_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_heptafranc-denialofservice_tests.Tpo -c -o test/test_test_heptafranc-denialofservice_tests.o `test -f 'test/denialofservice_tests.cpp' || echo '$(srcdir)/'`test/denialofservice_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_heptafranc-denialofservice_tests.Tpo test/$(DEPDIR)/test_test_heptafranc-denialofservice_tests.Po
#	$(AM_V_CXX)source='test/denialofservice_tests.cpp' object='test/test_test_heptafranc-denialofservice_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_heptafranc-denialofservice_tests.o `test -f 'test/denialofservice_tests.cpp' || echo '$(srcdir)/'`test/denialofservice_tests.cpp

test/test_test_heptafranc-denialofservice_tests.obj: test/denialofservice_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_heptafranc-denialofservice_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_heptafranc-denialofservice_tests.Tpo -c -o test/test_test_heptafranc-denialofservice_tests.obj `if test -f 'test/denialofservice_tests.cpp'; then $(CYGPATH_W) 'test/denialofservice_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/denialofservice_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_heptafranc-denialofservice_tests.Tpo test/$(DEPDIR)/test_test_heptafranc-denialofservice_tests.Po
#	$(AM_V_CXX)source='test/denialofservice_tests.cpp' object='test/test_test_heptafranc-denialofservice_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_heptafranc-denialofservice_tests.obj `if test -f 'test/denialofservice_tests.cpp'; then $(CYGPATH_W) 'test/denialofservice_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/denialofservice_tests.cpp'; fi`

test/test_test_heptafranc-descriptor_tests.o: test/descriptor_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_heptafranc-descriptor_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_heptafranc-descriptor_tests.Tpo -c -o test/test_test_heptafranc-descriptor_tests.o `test -f 'test/descriptor_tests.cpp' || echo '$(srcdir)/'`test/descriptor_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_heptafranc-descriptor_tests.Tpo test/$(DEPDIR)/test_test_heptafranc-descriptor_tests.Po
#	$(AM_V_CXX)source='test/descriptor_tests.cpp' object='test/test_test_heptafranc-descriptor_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_heptafranc-descriptor_tests.o `test -f 'test/descriptor_tests.cpp' || echo '$(srcdir)/'`test/descriptor_tests.cpp

test/test_test_heptafranc-descriptor_tests.obj: test/descriptor_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_heptafranc-descriptor_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_heptafranc-descriptor_tests.Tpo -c -o test/test_test_heptafranc-descriptor_tests.obj `if test -f 'test/descriptor_tests.cpp'; then $(CYGPATH_W) 'test/descriptor_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/descriptor_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_heptafranc-descriptor_tests.Tpo test/$(DEPDIR)/test_test_heptafranc-descriptor_tests.Po
#	$(AM_V_CXX)source='test/descriptor_tests.cpp' object='test/test_test_heptafranc-descriptor_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_heptafranc-descriptor_tests.obj `if test -f 'test/descriptor_tests.cpp'; then $(CYGPATH_W) 'test/descriptor_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/descriptor_tests.cpp'; fi`

test/test_test_heptafranc-getarg_tests.o: test/getarg_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_heptafranc-getarg_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_heptafranc-getarg_tests.Tpo -c -o test/test_test_heptafranc-getarg_tests.o `test -f 'test/getarg_tests.cpp' || echo '$(srcdir)/'`test/getarg_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_heptafranc-getarg_tests.Tpo test/$(DEPDIR)/test_test_heptafranc-getarg_tests.Po
#	$(AM_V_CXX)source='test/getarg_tests.cpp' object='test/test_test_heptafranc-getarg_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_heptafranc-getarg_tests.o `test -f 'test/getarg_tests.cpp' || echo '$(srcdir)/'`test/getarg_tests.cpp

test/test_test_heptafranc-getarg_tests.obj: test/getarg_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_heptafranc-getarg_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_heptafranc-getarg_tests.Tpo -c -o test/test_test_heptafranc-getarg_tests.obj `if test -f 'test/getarg_tests.cpp'; then $(CYGPATH_W) 'test/getarg_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/getarg_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_heptafranc-getarg_tests.Tpo test/$(DEPDIR)/test_test_heptafranc-getarg_tests.Po
#	$(AM_V_CXX)source='test/getarg_tests.cpp' object='test/test_test_heptafranc-getarg_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_heptafranc-getarg_tests.obj `if test -f 'test/getarg_tests.cpp'; then $(CYGPATH_W) 'test/getarg_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/getarg_tests.cpp'; fi`

test/test_test_heptafranc-hash_tests.o: test/hash_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_heptafranc-hash_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_heptafranc-hash_tests.Tpo -c -o test/test_test_heptafranc-hash_tests.o `test -f 'test/hash_tests.cpp' || echo '$(srcdir)/'`test/hash_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_heptafranc-hash_tests.Tpo test/$(DEPDIR)/test_test_heptafranc-hash_tests.Po
#	$(AM_V_CXX)source='test/hash_tests.cpp' object='test/test_test_heptafranc-hash_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_heptafranc-hash_tests.o `test -f 'test/hash_tests.cpp' || echo '$(srcdir)/'`test/hash_tests.cpp

test/test_test_heptafranc-hash_tests.obj: test/hash_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_heptafranc-hash_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_heptafranc-hash_tests.Tpo -c -o test/test_test_heptafranc-hash_tests.obj `if test -f 'test/hash_tests.cpp'; then $(CYGPATH_W) 'test/hash_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/hash_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_heptafranc-hash_tests.Tpo test/$(DEPDIR)/test_test_heptafranc-hash_tests.Po
#	$(AM_V_CXX)source='test/hash_tests.cpp' object='test/test_test_heptafranc-hash_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_heptafranc-hash_tests.obj `if test -f 'test/hash_tests.cpp'; then $(CYGPATH_W) 'test/hash_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/hash_tests.cpp'; fi`

test/test_test_heptafranc-key_io_tests.o: test/key_io_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_heptafranc-key_io_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_heptafranc-key_io_tests.Tpo -c -o test/test_test_heptafranc-key_io_tests.o `test -f 'test/key_io_tests.cpp' || echo '$(srcdir)/'`test/key_io_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_heptafranc-key_io_tests.Tpo test/$(DEPDIR)/test_test_heptafranc-key_io_tests.Po
#	$(AM_V_CXX)source='test/key_io_tests.cpp' object='test/test_test_heptafranc-key_io_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_heptafranc-key_io_tests.o `test -f 'test/key_io_tests.cpp' || echo '$(srcdir)/'`test/key_io_tests.cpp

test/test_test_heptafranc-key_io_tests.obj: test/key_io_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_heptafranc-key_io_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_heptafranc-key_io_tests.Tpo -c -o test/test_test_heptafranc-key_io_tests.obj `if test -f 'test/key_io_tests.cpp'; then $(CYGPATH_W) 'test/key_io_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/key_io_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_heptafranc-key_io_tests.Tpo test/$(DEPDIR)/test_test_heptafranc-key_io_tests.Po
#	$(AM_V_CXX)source='test/key_io_tests.cpp' object='test/test_test_heptafranc-key_io_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_heptafranc-key_io_tests.obj `if test -f 'test/key_io_tests.cpp'; then $(CYGPATH_W) 'test/key_io_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/key_io_tests.cpp'; fi`

test/test_test_heptafranc-key_tests.o: test/key_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_heptafranc-key_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_heptafranc-key_tests.Tpo -c -o test/test_test_heptafranc-key_tests.o `test -f 'test/key_tests.cpp' || echo '$(srcdir)/'`test/key_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_heptafranc-key_tests.Tpo test/$(DEPDIR)/test_test_heptafranc-key_tests.Po
#	$(AM_V_CXX)source='test/key_tests.cpp' object='test/test_test_heptafranc-key_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_heptafranc-key_tests.o `test -f 'test/key_tests.cpp' || echo '$(srcdir)/'`test/key_tests.cpp

test/test_test_heptafranc-key_tests.obj: test/key_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_heptafranc-key_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_heptafranc-key_tests.Tpo -c -o test/test_test_heptafranc-key_tests.obj `if test -f 'test/key_tests.cpp'; then $(CYGPATH_W) 'test/key_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/key_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_heptafranc-key_tests.Tpo test/$(DEPDIR)/test_test_heptafranc-key_tests.Po
#	$(AM_V_CXX)source='test/key_tests.cpp' object='test/test_test_heptafranc-key_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_heptafranc-key_tests.obj `if test -f 'test/key_tests.cpp'; then $(CYGPATH_W) 'test/key_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/key_tests.cpp'; fi`

test/test_test_heptafranc-limitedmap_tests.o: test/limitedmap_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_heptafranc-limitedmap_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_heptafranc-limitedmap_tests.Tpo -c -o test/test_test_heptafranc-limitedmap_tests.o `test -f 'test/limitedmap_tests.cpp' || echo '$(srcdir)/'`test/limitedmap_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_heptafranc-limitedmap_tests.Tpo test/$(DEPDIR)/test_test_heptafranc-limitedmap_tests.Po
#	$(AM_V_CXX)source='test/limitedmap_tests.cpp' object='test/test_test_heptafranc-limitedmap_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_heptafranc-limitedmap_tests.o `test -f 'test/limitedmap_tests.cpp' || echo '$(srcdir)/'`test/limitedmap_tests.cpp

test/test_test_heptafranc-limitedmap_tests.obj: test/limitedmap_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_heptafranc-limitedmap_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_heptafranc-limitedmap_tests.Tpo -c -o test/test_test_heptafranc-limitedmap_tests.obj `if test -f 'test/limitedmap_tests.cpp'; then $(CYGPATH_W) 'test/limitedmap_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/limitedmap_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_heptafranc-limitedmap_tests.Tpo test/$(DEPDIR)/test_test_heptafranc-limitedmap_tests.Po
#	$(AM_V_CXX)source='test/limitedmap_tests.cpp' object='test/test_test_heptafranc-limitedmap_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_heptafranc-limitedmap_tests.obj `if test -f 'test/limitedmap_tests.cpp'; then $(CYGPATH_W) 'test/limitedmap_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/limitedmap_tests.cpp'; fi`

test/test_test_heptafranc-dbwrapper_tests.o: test/dbwrapper_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_heptafranc-dbwrapper_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_heptafranc-dbwrapper_tests.Tpo -c -o test/test_test_heptafranc-dbwrapper_tests.o `test -f 'test/dbwrapper_tests.cpp' || echo '$(srcdir)/'`test/dbwrapper_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_heptafranc-dbwrapper_tests.Tpo test/$(DEPDIR)/test_test_heptafranc-dbwrapper_tests.Po
#	$(AM_V_CXX)source='test/dbwrapper_tests.cpp' object='test/test_test_heptafranc-dbwrapper_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_heptafranc-dbwrapper_tests.o `test -f 'test/dbwrapper_tests.cpp' || echo '$(srcdir)/'`test/dbwrapper_tests.cpp

test/test_test_heptafranc-dbwrapper_tests.obj: test/dbwrapper_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_heptafranc-dbwrapper_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_heptafranc-dbwrapper_tests.Tpo -c -o test/test_test_heptafranc-dbwrapper_tests.obj `if test -f 'test/dbwrapper_tests.cpp'; then $(CYGPATH_W) 'test/dbwrapper_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/dbwrapper_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_heptafranc-dbwrapper_tests.Tpo test/$(DEPDIR)/test_test_heptafranc-dbwrapper_tests.Po
#	$(AM_V_CXX)source='test/dbwrapper_tests.cpp' object='test/test_test_heptafranc-dbwrapper_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_heptafranc-dbwrapper_tests.obj `if test -f 'test/dbwrapper_tests.cpp'; then $(CYGPATH_W) 'test/dbwrapper_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/dbwrapper_tests.cpp'; fi`

test/test_test_heptafranc-main_tests.o: test/main_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_heptafranc-main_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_heptafranc-main_tests.Tpo -c -o test/test_test_heptafranc-main_tests.o `test -f 'test/main_tests.cpp' || echo '$(srcdir)/'`test/main_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_heptafranc-main_tests.Tpo test/$(DEPDIR)/test_test_heptafranc-main_tests.Po
#	$(AM_V_CXX)source='test/main_tests.cpp' object='test/test_test_heptafranc-main_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_heptafranc-main_tests.o `test -f 'test/main_tests.cpp' || echo '$(srcdir)/'`test/main_tests.cpp

test/test_test_heptafranc-main_tests.obj: test/main_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_heptafranc-main_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_heptafranc-main_tests.Tpo -c -o test/test_test_heptafranc-main_tests.obj `if test -f 'test/main_tests.cpp'; then $(CYGPATH_W) 'test/main_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/main_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_heptafranc-main_tests.Tpo test/$(DEPDIR)/test_test_heptafranc-main_tests.Po
#	$(AM_V_CXX)source='test/main_tests.cpp' object='test/test_test_heptafranc-main_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_heptafranc-main_tests.obj `if test -f 'test/main_tests.cpp'; then $(CYGPATH_W) 'test/main_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/main_tests.cpp'; fi`

test/test_test_heptafranc-mempool_tests.o: test/mempool_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_heptafranc-mempool_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_heptafranc-mempool_tests.Tpo -c -o test/test_test_heptafranc-mempool_tests.o `test -f 'test/mempool_tests.cpp' || echo '$(srcdir)/'`test/mempool_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_heptafranc-mempool_tests.Tpo test/$(DEPDIR)/test_test_heptafranc-mempool_tests.Po
#	$(AM_V_CXX)source='test/mempool_tests.cpp' object='test/test_test_heptafranc-mempool_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_heptafranc-mempool_tests.o `test -f 'test/mempool_tests.cpp' || echo '$(srcdir)/'`test/mempool_tests.cpp

test/test_test_heptafranc-mempool_tests.obj: test/mempool_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_heptafranc-mempool_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_heptafranc-mempool_tests.Tpo -c -o test/test_test_heptafranc-mempool_tests.obj `if test -f 'test/mempool_tests.cpp'; then $(CYGPATH_W) 'test/mempool_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/mempool_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_heptafranc-mempool_tests.Tpo test/$(DEPDIR)/test_test_heptafranc-mempool_tests.Po
#	$(AM_V_CXX)source='test/mempool_tests.cpp' object='test/test_test_heptafranc-mempool_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_heptafranc-mempool_tests.obj `if test -f 'test/mempool_tests.cpp'; then $(CYGPATH_W) 'test/mempool_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/mempool_tests.cpp'; fi`

test/test_test_heptafranc-merkle_tests.o: test/merkle_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_heptafranc-merkle_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_heptafranc-merkle_tests.Tpo -c -o test/test_test_heptafranc-merkle_tests.o `test -f 'test/merkle_tests.cpp' || echo '$(srcdir)/'`test/merkle_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_heptafranc-merkle_tests.Tpo test/$(DEPDIR)/test_test_heptafranc-merkle_tests.Po
#	$(AM_V_CXX)source='test/merkle_tests.cpp' object='test/test_test_heptafranc-merkle_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_heptafranc-merkle_tests.o `test -f 'test/merkle_tests.cpp' || echo '$(srcdir)/'`test/merkle_tests.cpp

test/test_test_heptafranc-merkle_tests.obj: test/merkle_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_heptafranc-merkle_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_heptafranc-merkle_tests.Tpo -c -o test/test_test_heptafranc-merkle_tests.obj `if test -f 'test/merkle_tests.cpp'; then $(CYGPATH_W) 'test/merkle_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/merkle_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_heptafranc-merkle_tests.Tpo test/$(DEPDIR)/test_test_heptafranc-merkle_tests.Po
#	$(AM_V_CXX)source='test/merkle_tests.cpp' object='test/test_test_heptafranc-merkle_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_heptafranc-merkle_tests.obj `if test -f 'test/merkle_tests.cpp'; then $(CYGPATH_W) 'test/merkle_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/merkle_tests.cpp'; fi`

test/test_test_heptafranc-merkleblock_tests.o: test/merkleblock_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_heptafranc-merkleblock_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_heptafranc-merkleblock_tests.Tpo -c -o test/test_test_heptafranc-merkleblock_tests.o `test -f 'test/merkleblock_tests.cpp' || echo '$(srcdir)/'`test/merkleblock_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_heptafranc-merkleblock_tests.Tpo test/$(DEPDIR)/test_test_heptafranc-merkleblock_tests.Po
#	$(AM_V_CXX)source='test/merkleblock_tests.cpp' object='test/test_test_heptafranc-merkleblock_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_heptafranc-merkleblock_tests.o `test -f 'test/merkleblock_tests.cpp' || echo '$(srcdir)/'`test/merkleblock_tests.cpp

test/test_test_heptafranc-merkleblock_tests.obj: test/merkleblock_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_heptafranc-merkleblock_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_heptafranc-merkleblock_tests.Tpo -c -o test/test_test_heptafranc-merkleblock_tests.obj `if test -f 'test/merkleblock_tests.cpp'; then $(CYGPATH_W) 'test/merkleblock_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/merkleblock_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_heptafranc-merkleblock_tests.Tpo test/$(DEPDIR)/test_test_heptafranc-merkleblock_tests.Po
#	$(AM_V_CXX)source='test/merkleblock_tests.cpp' object='test/test_test_heptafranc-merkleblock_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_heptafranc-merkleblock_tests.obj `if test -f 'test/merkleblock_tests.cpp'; then $(CYGPATH_W) 'test/merkleblock_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/merkleblock_tests.cpp'; fi`

test/test_test_heptafranc-miner_tests.o: test/miner_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_heptafranc-miner_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_heptafranc-miner_tests.Tpo -c -o test/test_test_heptafranc-miner_tests.o `test -f 'test/miner_tests.cpp' || echo '$(srcdir)/'`test/miner_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_heptafranc-miner_tests.Tpo test/$(DEPDIR)/test_test_heptafranc-miner_tests.Po
#	$(AM_V_CXX)source='test/miner_tests.cpp' object='test/test_test_heptafranc-miner_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_heptafranc-miner_tests.o `test -f 'test/miner_tests.cpp' || echo '$(srcdir)/'`test/miner_tests.cpp

test/test_test_heptafranc-miner_tests.obj: test/miner_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_heptafranc-miner_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_heptafranc-miner_tests.Tpo -c -o test/test_test_heptafranc-miner_tests.obj `if test -f 'test/miner_tests.cpp'; then $(CYGPATH_W) 'test/miner_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/miner_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_heptafranc-miner_tests.Tpo test/$(DEPDIR)/test_test_heptafranc-miner_tests.Po
#	$(AM_V_CXX)source='test/miner_tests.cpp' object='test/test_test_heptafranc-miner_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_heptafranc-miner_tests.obj `if test -f 'test/miner_tests.cpp'; then $(CYGPATH_W) 'test/miner_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/miner_tests.cpp'; fi`

test/test_test_heptafranc-multisig_tests.o: test/multisig_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_heptafranc-multisig_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_heptafranc-multisig_tests.Tpo -c -o test/test_test_heptafranc-multisig_tests.o `test -f 'test/multisig_tests.cpp' || echo '$(srcdir)/'`test/multisig_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_heptafranc-multisig_tests.Tpo test/$(DEPDIR)/test_test_heptafranc-multisig_tests.Po
#	$(AM_V_CXX)source='test/multisig_tests.cpp' object='test/test_test_heptafranc-multisig_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_heptafranc-multisig_tests.o `test -f 'test/multisig_tests.cpp' || echo '$(srcdir)/'`test/multisig_tests.cpp

test/test_test_heptafranc-multisig_tests.obj: test/multisig_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_heptafranc-multisig_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_heptafranc-multisig_tests.Tpo -c -o test/test_test_heptafranc-multisig_tests.obj `if test -f 'test/multisig_tests.cpp'; then $(CYGPATH_W) 'test/multisig_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/multisig_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_heptafranc-multisig_tests.Tpo test/$(DEPDIR)/test_test_heptafranc-multisig_tests.Po
#	$(AM_V_CXX)source='test/multisig_tests.cpp' object='test/test_test_heptafranc-multisig_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_heptafranc-multisig_tests.obj `if test -f 'test/multisig_tests.cpp'; then $(CYGPATH_W) 'test/multisig_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/multisig_tests.cpp'; fi`

test/test_test_heptafranc-net_tests.o: test/net_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_heptafranc-net_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_heptafranc-net_tests.Tpo -c -o test/test_test_heptafranc-net_tests.o `test -f 'test/net_tests.cpp' || echo '$(srcdir)/'`test/net_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_heptafranc-net_tests.Tpo test/$(DEPDIR)/test_test_heptafranc-net_tests.Po
#	$(AM_V_CXX)source='test/net_tests.cpp' object='test/test_test_heptafranc-net_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_heptafranc-net_tests.o `test -f 'test/net_tests.cpp' || echo '$(srcdir)/'`test/net_tests.cpp

test/test_test_heptafranc-net_tests.obj: test/net_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_heptafranc-net_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_heptafranc-net_tests.Tpo -c -o test/test_test_heptafranc-net_tests.obj `if test -f 'test/net_tests.cpp'; then $(CYGPATH_W) 'test/net_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/net_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_heptafranc-net_tests.Tpo test/$(DEPDIR)/test_test_heptafranc-net_tests.Po
#	$(AM_V_CXX)source='test/net_tests.cpp' object='test/test_test_heptafranc-net_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_heptafranc-net_tests.obj `if test -f 'test/net_tests.cpp'; then $(CYGPATH_W) 'test/net_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/net_tests.cpp'; fi`

test/test_test_heptafranc-netbase_tests.o: test/netbase_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_heptafranc-netbase_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_heptafranc-netbase_tests.Tpo -c -o test/test_test_heptafranc-netbase_tests.o `test -f 'test/netbase_tests.cpp' || echo '$(srcdir)/'`test/netbase_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_heptafranc-netbase_tests.Tpo test/$(DEPDIR)/test_test_heptafranc-netbase_tests.Po
#	$(AM_V_CXX)source='test/netbase_tests.cpp' object='test/test_test_heptafranc-netbase_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_heptafranc-netbase_tests.o `test -f 'test/netbase_tests.cpp' || echo '$(srcdir)/'`test/netbase_tests.cpp

test/test_test_heptafranc-netbase_tests.obj: test/netbase_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_heptafranc-netbase_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_heptafranc-netbase_tests.Tpo -c -o test/test_test_heptafranc-netbase_tests.obj `if test -f 'test/netbase_tests.cpp'; then $(CYGPATH_W) 'test/netbase_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/netbase_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_heptafranc-netbase_tests.Tpo test/$(DEPDIR)/test_test_heptafranc-netbase_tests.Po
#	$(AM_V_CXX)source='test/netbase_tests.cpp' object='test/test_test_heptafranc-netbase_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_heptafranc-netbase_tests.obj `if test -f 'test/netbase_tests.cpp'; then $(CYGPATH_W) 'test/netbase_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/netbase_tests.cpp'; fi`

test/test_test_heptafranc-pmt_tests.o: test/pmt_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_heptafranc-pmt_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_heptafranc-pmt_tests.Tpo -c -o test/test_test_heptafranc-pmt_tests.o `test -f 'test/pmt_tests.cpp' || echo '$(srcdir)/'`test/pmt_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_heptafranc-pmt_tests.Tpo test/$(DEPDIR)/test_test_heptafranc-pmt_tests.Po
#	$(AM_V_CXX)source='test/pmt_tests.cpp' object='test/test_test_heptafranc-pmt_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_heptafranc-pmt_tests.o `test -f 'test/pmt_tests.cpp' || echo '$(srcdir)/'`test/pmt_tests.cpp

test/test_test_heptafranc-pmt_tests.obj: test/pmt_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_heptafranc-pmt_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_heptafranc-pmt_tests.Tpo -c -o test/test_test_heptafranc-pmt_tests.obj `if test -f 'test/pmt_tests.cpp'; then $(CYGPATH_W) 'test/pmt_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/pmt_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_heptafranc-pmt_tests.Tpo test/$(DEPDIR)/test_test_heptafranc-pmt_tests.Po
#	$(AM_V_CXX)source='test/pmt_tests.cpp' object='test/test_test_heptafranc-pmt_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_heptafranc-pmt_tests.obj `if test -f 'test/pmt_tests.cpp'; then $(CYGPATH_W) 'test/pmt_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/pmt_tests.cpp'; fi`

test/test_test_heptafranc-policyestimator_tests.o: test/policyestimator_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_heptafranc-policyestimator_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_heptafranc-policyestimator_tests.Tpo -c -o test/test_test_heptafranc-policyestimator_tests.o `test -f 'test/policyestimator_tests.cpp' || echo '$(srcdir)/'`test/policyestimator_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_heptafranc-policyestimator_tests.Tpo test/$(DEPDIR)/test_test_heptafranc-policyestimator_tests.Po
#	$(AM_V_CXX)source='test/policyestimator_tests.cpp' object='test/test_test_heptafranc-policyestimator_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_heptafranc-policyestimator_tests.o `test -f 'test/policyestimator_tests.cpp' || echo '$(srcdir)/'`test/policyestimator_tests.cpp

test/test_test_heptafranc-policyestimator_tests.obj: test/policyestimator_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_heptafranc-policyestimator_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_heptafranc-policyestimator_tests.Tpo -c -o test/test_test_heptafranc-policyestimator_tests.obj `if test -f 'test/policyestimator_tests.cpp'; then $(CYGPATH_W) 'test/policyestimator_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/policyestimator_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_heptafranc-policyestimator_tests.Tpo test/$(DEPDIR)/test_test_heptafranc-policyestimator_tests.Po
#	$(AM_V_CXX)source='test/policyestimator_tests.cpp' object='test/test_test_heptafranc-policyestimator_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_heptafranc-policyestimator_tests.obj `if test -f 'test/policyestimator_tests.cpp'; then $(CYGPATH_W) 'test/policyestimator_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/policyestimator_tests.cpp'; fi`

test/test_test_heptafranc-pow_tests.o: test/pow_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_heptafranc-pow_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_heptafranc-pow_tests.Tpo -c -o test/test_test_heptafranc-pow_tests.o `test -f 'test/pow_tests.cpp' || echo '$(srcdir)/'`test/pow_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_heptafranc-pow_tests.Tpo test/$(DEPDIR)/test_test_heptafranc-pow_tests.Po
#	$(AM_V_CXX)source='test/pow_tests.cpp' object='test/test_test_heptafranc-pow_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_heptafranc-pow_tests.o `test -f 'test/pow_tests.cpp' || echo '$(srcdir)/'`test/pow_tests.cpp

test/test_test_heptafranc-pow_tests.obj: test/pow_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_heptafranc-pow_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_heptafranc-pow_tests.Tpo -c -o test/test_test_heptafranc-pow_tests.obj `if test -f 'test/pow_tests.cpp'; then $(CYGPATH_W) 'test/pow_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/pow_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_heptafranc-pow_tests.Tpo test/$(DEPDIR)/test_test_heptafranc-pow_tests.Po
#	$(AM_V_CXX)source='test/pow_tests.cpp' object='test/test_test_heptafranc-pow_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_heptafranc-pow_tests.obj `if test -f 'test/pow_tests.cpp'; then $(CYGPATH_W) 'test/pow_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/pow_tests.cpp'; fi`

test/test_test_heptafranc-prevector_tests.o: test/prevector_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_heptafranc-prevector_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_heptafranc-prevector_tests.Tpo -c -o test/test_test_heptafranc-prevector_tests.o `test -f 'test/prevector_tests.cpp' || echo '$(srcdir)/'`test/prevector_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_heptafranc-prevector_tests.Tpo test/$(DEPDIR)/test_test_heptafranc-prevector_tests.Po
#	$(AM_V_CXX)source='test/prevector_tests.cpp' object='test/test_test_heptafranc-prevector_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_heptafranc-prevector_tests.o `test -f 'test/prevector_tests.cpp' || echo '$(srcdir)/'`test/prevector_tests.cpp

test/test_test_heptafranc-prevector_tests.obj: test/prevector_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_heptafranc-prevector_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_heptafranc-prevector_tests.Tpo -c -o test/test_test_heptafranc-prevector_tests.obj `if test -f 'test/prevector_tests.cpp'; then $(CYGPATH_W) 'test/prevector_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/prevector_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_heptafranc-prevector_tests.Tpo test/$(DEPDIR)/test_test_heptafranc-prevector_tests.Po
#	$(AM_V_CXX)source='test/prevector_tests.cpp' object='test/test_test_heptafranc-prevector_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_heptafranc-prevector_tests.obj `if test -f 'test/prevector_tests.cpp'; then $(CYGPATH_W) 'test/prevector_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/prevector_tests.cpp'; fi`

test/test_test_heptafranc-raii_event_tests.o: test/raii_event_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_heptafranc-raii_event_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_heptafranc-raii_event_tests.Tpo -c -o test/test_test_heptafranc-raii_event_tests.o `test -f 'test/raii_event_tests.cpp' || echo '$(srcdir)/'`test/raii_event_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_heptafranc-raii_event_tests.Tpo test/$(DEPDIR)/test_test_heptafranc-raii_event_tests.Po
#	$(AM_V_CXX)source='test/raii_event_tests.cpp' object='test/test_test_heptafranc-raii_event_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_heptafranc-raii_event_tests.o `test -f 'test/raii_event_tests.cpp' || echo '$(srcdir)/'`test/raii_event_tests.cpp

test/test_test_heptafranc-raii_event_tests.obj: test/raii_event_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_heptafranc-raii_event_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_heptafranc-raii_event_tests.Tpo -c -o test/test_test_heptafranc-raii_event_tests.obj `if test -f 'test/raii_event_tests.cpp'; then $(CYGPATH_W) 'test/raii_event_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/raii_event_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_heptafranc-raii_event_tests.Tpo test/$(DEPDIR)/test_test_heptafranc-raii_event_tests.Po
#	$(AM_V_CXX)source='test/raii_event_tests.cpp' object='test/test_test_heptafranc-raii_event_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_heptafranc-raii_event_tests.obj `if test -f 'test/raii_event_tests.cpp'; then $(CYGPATH_W) 'test/raii_event_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/raii_event_tests.cpp'; fi`

test/test_test_heptafranc-random_tests.o: test/random_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_heptafranc-random_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_heptafranc-random_tests.Tpo -c -o test/test_test_heptafranc-random_tests.o `test -f 'test/random_tests.cpp' || echo '$(srcdir)/'`test/random_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_heptafranc-random_tests.Tpo test/$(DEPDIR)/test_test_heptafranc-random_tests.Po
#	$(AM_V_CXX)source='test/random_tests.cpp' object='test/test_test_heptafranc-random_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_heptafranc-random_tests.o `test -f 'test/random_tests.cpp' || echo '$(srcdir)/'`test/random_tests.cpp

test/test_test_heptafranc-random_tests.obj: test/random_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_heptafranc-random_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_heptafranc-random_tests.Tpo -c -o test/test_test_heptafranc-random_tests.obj `if test -f 'test/random_tests.cpp'; then $(CYGPATH_W) 'test/random_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/random_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_heptafranc-random_tests.Tpo test/$(DEPDIR)/test_test_heptafranc-random_tests.Po
#	$(AM_V_CXX)source='test/random_tests.cpp' object='test/test_test_heptafranc-random_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_heptafranc-random_tests.obj `if test -f 'test/random_tests.cpp'; then $(CYGPATH_W) 'test/random_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/random_tests.cpp'; fi`

test/test_test_heptafranc-reverselock_tests.o: test/reverselock_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_heptafranc-reverselock_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_heptafranc-reverselock_tests.Tpo -c -o test/test_test_heptafranc-reverselock_tests.o `test -f 'test/reverselock_tests.cpp' || echo '$(srcdir)/'`test/reverselock_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_heptafranc-reverselock_tests.Tpo test/$(DEPDIR)/test_test_heptafranc-reverselock_tests.Po
#	$(AM_V_CXX)source='test/reverselock_tests.cpp' object='test/test_test_heptafranc-reverselock_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_heptafranc-reverselock_tests.o `test -f 'test/reverselock_tests.cpp' || echo '$(srcdir)/'`test/reverselock_tests.cpp

test/test_test_heptafranc-reverselock_tests.obj: test/reverselock_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_heptafranc-reverselock_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_heptafranc-reverselock_tests.Tpo -c -o test/test_test_heptafranc-reverselock_tests.obj `if test -f 'test/reverselock_tests.cpp'; then $(CYGPATH_W) 'test/reverselock_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/reverselock_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_heptafranc-reverselock_tests.Tpo test/$(DEPDIR)/test_test_heptafranc-reverselock_tests.Po
#	$(AM_V_CXX)source='test/reverselock_tests.cpp' object='test/test_test_heptafranc-reverselock_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_heptafranc-reverselock_tests.obj `if test -f 'test/reverselock_tests.cpp'; then $(CYGPATH_W) 'test/reverselock_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/reverselock_tests.cpp'; fi`

test/test_test_heptafranc-rpc_tests.o: test/rpc_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_heptafranc-rpc_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_heptafranc-rpc_tests.Tpo -c -o test/test_test_heptafranc-rpc_tests.o `test -f 'test/rpc_tests.cpp' || echo '$(srcdir)/'`test/rpc_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_heptafranc-rpc_tests.Tpo test/$(DEPDIR)/test_test_heptafranc-rpc_tests.Po
#	$(AM_V_CXX)source='test/rpc_tests.cpp' object='test/test_test_heptafranc-rpc_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_heptafranc-rpc_tests.o `test -f 'test/rpc_tests.cpp' || echo '$(srcdir)/'`test/rpc_tests.cpp

test/test_test_heptafranc-rpc_tests.obj: test/rpc_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_heptafranc-rpc_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_heptafranc-rpc_tests.Tpo -c -o test/test_test_heptafranc-rpc_tests.obj `if test -f 'test/rpc_tests.cpp'; then $(CYGPATH_W) 'test/rpc_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/rpc_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_heptafranc-rpc_tests.Tpo test/$(DEPDIR)/test_test_heptafranc-rpc_tests.Po
#	$(AM_V_CXX)source='test/rpc_tests.cpp' object='test/test_test_heptafranc-rpc_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_heptafranc-rpc_tests.obj `if test -f 'test/rpc_tests.cpp'; then $(CYGPATH_W) 'test/rpc_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/rpc_tests.cpp'; fi`

test/test_test_heptafranc-sanity_tests.o: test/sanity_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_heptafranc-sanity_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_heptafranc-sanity_tests.Tpo -c -o test/test_test_heptafranc-sanity_tests.o `test -f 'test/sanity_tests.cpp' || echo '$(srcdir)/'`test/sanity_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_heptafranc-sanity_tests.Tpo test/$(DEPDIR)/test_test_heptafranc-sanity_tests.Po
#	$(AM_V_CXX)source='test/sanity_tests.cpp' object='test/test_test_heptafranc-sanity_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_heptafranc-sanity_tests.o `test -f 'test/sanity_tests.cpp' || echo '$(srcdir)/'`test/sanity_tests.cpp

test/test_test_heptafranc-sanity_tests.obj: test/sanity_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_heptafranc-sanity_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_heptafranc-sanity_tests.Tpo -c -o test/test_test_heptafranc-sanity_tests.obj `if test -f 'test/sanity_tests.cpp'; then $(CYGPATH_W) 'test/sanity_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/sanity_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_heptafranc-sanity_tests.Tpo test/$(DEPDIR)/test_test_heptafranc-sanity_tests.Po
#	$(AM_V_CXX)source='test/sanity_tests.cpp' object='test/test_test_heptafranc-sanity_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_heptafranc-sanity_tests.obj `if test -f 'test/sanity_tests.cpp'; then $(CYGPATH_W) 'test/sanity_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/sanity_tests.cpp'; fi`

test/test_test_heptafranc-scheduler_tests.o: test/scheduler_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_heptafranc-scheduler_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_heptafranc-scheduler_tests.Tpo -c -o test/test_test_heptafranc-scheduler_tests.o `test -f 'test/scheduler_tests.cpp' || echo '$(srcdir)/'`test/scheduler_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_heptafranc-scheduler_tests.Tpo test/$(DEPDIR)/test_test_heptafranc-scheduler_tests.Po
#	$(AM_V_CXX)source='test/scheduler_tests.cpp' object='test/test_test_heptafranc-scheduler_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_heptafranc-scheduler_tests.o `test -f 'test/scheduler_tests.cpp' || echo '$(srcdir)/'`test/scheduler_tests.cpp

test/test_test_heptafranc-scheduler_tests.obj: test/scheduler_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_heptafranc-scheduler_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_heptafranc-scheduler_tests.Tpo -c -o test/test_test_heptafranc-scheduler_tests.obj `if test -f 'test/scheduler_tests.cpp'; then $(CYGPATH_W) 'test/scheduler_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/scheduler_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_heptafranc-scheduler_tests.Tpo test/$(DEPDIR)/test_test_heptafranc-scheduler_tests.Po
#	$(AM_V_CXX)source='test/scheduler_tests.cpp' object='test/test_test_heptafranc-scheduler_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_heptafranc-scheduler_tests.obj `if test -f 'test/scheduler_tests.cpp'; then $(CYGPATH_W) 'test/scheduler_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/scheduler_tests.cpp'; fi`

test/test_test_heptafranc-script_p2sh_tests.o: test/script_p2sh_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_heptafranc-script_p2sh_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_heptafranc-script_p2sh_tests.Tpo -c -o test/test_test_heptafranc-script_p2sh_tests.o `test -f 'test/script_p2sh_tests.cpp' || echo '$(srcdir)/'`test/script_p2sh_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_heptafranc-script_p2sh_tests.Tpo test/$(DEPDIR)/test_test_heptafranc-script_p2sh_tests.Po
#	$(AM_V_CXX)source='test/script_p2sh_tests.cpp' object='test/test_test_heptafranc-script_p2sh_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_heptafranc-script_p2sh_tests.o `test -f 'test/script_p2sh_tests.cpp' || echo '$(srcdir)/'`test/script_p2sh_tests.cpp

test/test_test_heptafranc-script_p2sh_tests.obj: test/script_p2sh_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_heptafranc-script_p2sh_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_heptafranc-script_p2sh_tests.Tpo -c -o test/test_test_heptafranc-script_p2sh_tests.obj `if test -f 'test/script_p2sh_tests.cpp'; then $(CYGPATH_W) 'test/script_p2sh_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/script_p2sh_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_heptafranc-script_p2sh_tests.Tpo test/$(DEPDIR)/test_test_heptafranc-script_p2sh_tests.Po
#	$(AM_V_CXX)source='test/script_p2sh_tests.cpp' object='test/test_test_heptafranc-script_p2sh_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_heptafranc-script_p2sh_tests.obj `if test -f 'test/script_p2sh_tests.cpp'; then $(CYGPATH_W) 'test/script_p2sh_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/script_p2sh_tests.cpp'; fi`

test/test_test_heptafranc-script_tests.o: test/script_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_heptafranc-script_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_heptafranc-script_tests.Tpo -c -o test/test_test_heptafranc-script_tests.o `test -f 'test/script_tests.cpp' || echo '$(srcdir)/'`test/script_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_heptafranc-script_tests.Tpo test/$(DEPDIR)/test_test_heptafranc-script_tests.Po
#	$(AM_V_CXX)source='test/script_tests.cpp' object='test/test_test_heptafranc-script_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_heptafranc-script_tests.o `test -f 'test/script_tests.cpp' || echo '$(srcdir)/'`test/script_tests.cpp

test/test_test_heptafranc-script_tests.obj: test/script_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_heptafranc-script_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_heptafranc-script_tests.Tpo -c -o test/test_test_heptafranc-script_tests.obj `if test -f 'test/script_tests.cpp'; then $(CYGPATH_W) 'test/script_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/script_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_heptafranc-script_tests.Tpo test/$(DEPDIR)/test_test_heptafranc-script_tests.Po
#	$(AM_V_CXX)source='test/script_tests.cpp' object='test/test_test_heptafranc-script_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_heptafranc-script_tests.obj `if test -f 'test/script_tests.cpp'; then $(CYGPATH_W) 'test/script_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/script_tests.cpp'; fi`

test/test_test_heptafranc-script_standard_tests.o: test/script_standard_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_heptafranc-script_standard_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_heptafranc-script_standard_tests.Tpo -c -o test/test_test_heptafranc-script_standard_tests.o `test -f 'test/script_standard_tests.cpp' || echo '$(srcdir)/'`test/script_standard_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_heptafranc-script_standard_tests.Tpo test/$(DEPDIR)/test_test_heptafranc-script_standard_tests.Po
#	$(AM_V_CXX)source='test/script_standard_tests.cpp' object='test/test_test_heptafranc-script_standard_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_heptafranc-script_standard_tests.o `test -f 'test/script_standard_tests.cpp' || echo '$(srcdir)/'`test/script_standard_tests.cpp

test/test_test_heptafranc-script_standard_tests.obj: test/script_standard_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_heptafranc-script_standard_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_heptafranc-script_standard_tests.Tpo -c -o test/test_test_heptafranc-script_standard_tests.obj `if test -f 'test/script_standard_tests.cpp'; then $(CYGPATH_W) 'test/script_standard_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/script_standard_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_heptafranc-script_standard_tests.Tpo test/$(DEPDIR)/test_test_heptafranc-script_standard_tests.Po
#	$(AM_V_CXX)source='test/script_standard_tests.cpp' object='test/test_test_heptafranc-script_standard_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_heptafranc-script_standard_tests.obj `if test -f 'test/script_standard_tests.cpp'; then $(CYGPATH_W) 'test/script_standard_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/script_standard_tests.cpp'; fi`

test/test_test_heptafranc-scriptnum_tests.o: test/scriptnum_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_heptafranc-scriptnum_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_heptafranc-scriptnum_tests.Tpo -c -o test/test_test_heptafranc-scriptnum_tests.o `test -f 'test/scriptnum_tests.cpp' || echo '$(srcdir)/'`test/scriptnum_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_heptafranc-scriptnum_tests.Tpo test/$(DEPDIR)/test_test_heptafranc-scriptnum_tests.Po
#	$(AM_V_CXX)source='test/scriptnum_tests.cpp' object='test/test_test_heptafranc-scriptnum_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_heptafranc-scriptnum_tests.o `test -f 'test/scriptnum_tests.cpp' || echo '$(srcdir)/'`test/scriptnum_tests.cpp

test/test_test_heptafranc-scriptnum_tests.obj: test/scriptnum_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_heptafranc-scriptnum_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_heptafranc-scriptnum_tests.Tpo -c -o test/test_test_heptafranc-scriptnum_tests.obj `if test -f 'test/scriptnum_tests.cpp'; then $(CYGPATH_W) 'test/scriptnum_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/scriptnum_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_heptafranc-scriptnum_tests.Tpo test/$(DEPDIR)/test_test_heptafranc-scriptnum_tests.Po
#	$(AM_V_CXX)source='test/scriptnum_tests.cpp' object='test/test_test_heptafranc-scriptnum_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_heptafranc-scriptnum_tests.obj `if test -f 'test/scriptnum_tests.cpp'; then $(CYGPATH_W) 'test/scriptnum_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/scriptnum_tests.cpp'; fi`

test/test_test_heptafranc-serialize_tests.o: test/serialize_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_heptafranc-serialize_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_heptafranc-serialize_tests.Tpo -c -o test/test_test_heptafranc-serialize_tests.o `test -f 'test/serialize_tests.cpp' || echo '$(srcdir)/'`test/serialize_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_heptafranc-serialize_tests.Tpo test/$(DEPDIR)/test_test_heptafranc-serialize_tests.Po
#	$(AM_V_CXX)source='test/serialize_tests.cpp' object='test/test_test_heptafranc-serialize_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_heptafranc-serialize_tests.o `test -f 'test/serialize_tests.cpp' || echo '$(srcdir)/'`test/serialize_tests.cpp

test/test_test_heptafranc-serialize_tests.obj: test/serialize_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_heptafranc-serialize_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_heptafranc-serialize_tests.Tpo -c -o test/test_test_heptafranc-serialize_tests.obj `if test -f 'test/serialize_tests.cpp'; then $(CYGPATH_W) 'test/serialize_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/serialize_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_heptafranc-serialize_tests.Tpo test/$(DEPDIR)/test_test_heptafranc-serialize_tests.Po
#	$(AM_V_CXX)source='test/serialize_tests.cpp' object='test/test_test_heptafranc-serialize_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_heptafranc-serialize_tests.obj `if test -f 'test/serialize_tests.cpp'; then $(CYGPATH_W) 'test/serialize_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/serialize_tests.cpp'; fi`

test/test_test_heptafranc-sighash_tests.o: test/sighash_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_heptafranc-sighash_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_heptafranc-sighash_tests.Tpo -c -o test/test_test_heptafranc-sighash_tests.o `test -f 'test/sighash_tests.cpp' || echo '$(srcdir)/'`test/sighash_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_heptafranc-sighash_tests.Tpo test/$(DEPDIR)/test_test_heptafranc-sighash_tests.Po
#	$(AM_V_CXX)source='test/sighash_tests.cpp' object='test/test_test_heptafranc-sighash_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_heptafranc-sighash_tests.o `test -f 'test/sighash_tests.cpp' || echo '$(srcdir)/'`test/sighash_tests.cpp

test/test_test_heptafranc-sighash_tests.obj: test/sighash_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_heptafranc-sighash_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_heptafranc-sighash_tests.Tpo -c -o test/test_test_heptafranc-sighash_tests.obj `if test -f 'test/sighash_tests.cpp'; then $(CYGPATH_W) 'test/sighash_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/sighash_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_heptafranc-sighash_tests.Tpo test/$(DEPDIR)/test_test_heptafranc-sighash_tests.Po
#	$(AM_V_CXX)source='test/sighash_tests.cpp' object='test/test_test_heptafranc-sighash_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_heptafranc-sighash_tests.obj `if test -f 'test/sighash_tests.cpp'; then $(CYGPATH_W) 'test/sighash_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/sighash_tests.cpp'; fi`

test/test_test_heptafranc-sigopcount_tests.o: test/sigopcount_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_heptafranc-sigopcount_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_heptafranc-sigopcount_tests.Tpo -c -o test/test_test_heptafranc-sigopcount_tests.o `test -f 'test/sigopcount_tests.cpp' || echo '$(srcdir)/'`test/sigopcount_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_heptafranc-sigopcount_tests.Tpo test/$(DEPDIR)/test_test_heptafranc-sigopcount_tests.Po
#	$(AM_V_CXX)source='test/sigopcount_tests.cpp' object='test/test_test_heptafranc-sigopcount_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_heptafranc-sigopcount_tests.o `test -f 'test/sigopcount_tests.cpp' || echo '$(srcdir)/'`test/sigopcount_tests.cpp

test/test_test_heptafranc-sigopcount_tests.obj: test/sigopcount_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_heptafranc-sigopcount_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_heptafranc-sigopcount_tests.Tpo -c -o test/test_test_heptafranc-sigopcount_tests.obj `if test -f 'test/sigopcount_tests.cpp'; then $(CYGPATH_W) 'test/sigopcount_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/sigopcount_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_heptafranc-sigopcount_tests.Tpo test/$(DEPDIR)/test_test_heptafranc-sigopcount_tests.Po
#	$(AM_V_CXX)source='test/sigopcount_tests.cpp' object='test/test_test_heptafranc-sigopcount_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_heptafranc-sigopcount_tests.obj `if test -f 'test/sigopcount_tests.cpp'; then $(CYGPATH_W) 'test/sigopcount_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/sigopcount_tests.cpp'; fi`

test/test_test_heptafranc-skiplist_tests.o: test/skiplist_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_heptafranc-skiplist_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_heptafranc-skiplist_tests.Tpo -c -o test/test_test_heptafranc-skiplist_tests.o `test -f 'test/skiplist_tests.cpp' || echo '$(srcdir)/'`test/skiplist_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_heptafranc-skiplist_tests.Tpo test/$(DEPDIR)/test_test_heptafranc-skiplist_tests.Po
#	$(AM_V_CXX)source='test/skiplist_tests.cpp' object='test/test_test_heptafranc-skiplist_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_heptafranc-skiplist_tests.o `test -f 'test/skiplist_tests.cpp' || echo '$(srcdir)/'`test/skiplist_tests.cpp

test/test_test_heptafranc-skiplist_tests.obj: test/skiplist_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_heptafranc-skiplist_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_heptafranc-skiplist_tests.Tpo -c -o test/test_test_heptafranc-skiplist_tests.obj `if test -f 'test/skiplist_tests.cpp'; then $(CYGPATH_W) 'test/skiplist_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/skiplist_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_heptafranc-skiplist_tests.Tpo test/$(DEPDIR)/test_test_heptafranc-skiplist_tests.Po
#	$(AM_V_CXX)source='test/skiplist_tests.cpp' object='test/test_test_heptafranc-skiplist_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_heptafranc-skiplist_tests.obj `if test -f 'test/skiplist_tests.cpp'; then $(CYGPATH_W) 'test/skiplist_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/skiplist_tests.cpp'; fi`

test/test_test_heptafranc-streams_tests.o: test/streams_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_heptafranc-streams_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_heptafranc-streams_tests.Tpo -c -o test/test_test_heptafranc-streams_tests.o `test -f 'test/streams_tests.cpp' || echo '$(srcdir)/'`test/streams_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_heptafranc-streams_tests.Tpo test/$(DEPDIR)/test_test_heptafranc-streams_tests.Po
#	$(AM_V_CXX)source='test/streams_tests.cpp' object='test/test_test_heptafranc-streams_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_heptafranc-streams_tests.o `test -f 'test/streams_tests.cpp' || echo '$(srcdir)/'`test/streams_tests.cpp

test/test_test_heptafranc-streams_tests.obj: test/streams_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_heptafranc-streams_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_heptafranc-streams_tests.Tpo -c -o test/test_test_heptafranc-streams_tests.obj `if test -f 'test/streams_tests.cpp'; then $(CYGPATH_W) 'test/streams_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/streams_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_heptafranc-streams_tests.Tpo test/$(DEPDIR)/test_test_heptafranc-streams_tests.Po
#	$(AM_V_CXX)source='test/streams_tests.cpp' object='test/test_test_heptafranc-streams_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_heptafranc-streams_tests.obj `if test -f 'test/streams_tests.cpp'; then $(CYGPATH_W) 'test/streams_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/streams_tests.cpp'; fi`

test/test_test_heptafranc-timedata_tests.o: test/timedata_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_heptafranc-timedata_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_heptafranc-timedata_tests.Tpo -c -o test/test_test_heptafranc-timedata_tests.o `test -f 'test/timedata_tests.cpp' || echo '$(srcdir)/'`test/timedata_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_heptafranc-timedata_tests.Tpo test/$(DEPDIR)/test_test_heptafranc-timedata_tests.Po
#	$(AM_V_CXX)source='test/timedata_tests.cpp' object='test/test_test_heptafranc-timedata_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_heptafranc-timedata_tests.o `test -f 'test/timedata_tests.cpp' || echo '$(srcdir)/'`test/timedata_tests.cpp

test/test_test_heptafranc-timedata_tests.obj: test/timedata_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_heptafranc-timedata_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_heptafranc-timedata_tests.Tpo -c -o test/test_test_heptafranc-timedata_tests.obj `if test -f 'test/timedata_tests.cpp'; then $(CYGPATH_W) 'test/timedata_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/timedata_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_heptafranc-timedata_tests.Tpo test/$(DEPDIR)/test_test_heptafranc-timedata_tests.Po
#	$(AM_V_CXX)source='test/timedata_tests.cpp' object='test/test_test_heptafranc-timedata_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_heptafranc-timedata_tests.obj `if test -f 'test/timedata_tests.cpp'; then $(CYGPATH_W) 'test/timedata_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/timedata_tests.cpp'; fi`

test/test_test_heptafranc-torcontrol_tests.o: test/torcontrol_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_heptafranc-torcontrol_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_heptafranc-torcontrol_tests.Tpo -c -o test/test_test_heptafranc-torcontrol_tests.o `test -f 'test/torcontrol_tests.cpp' || echo '$(srcdir)/'`test/torcontrol_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_heptafranc-torcontrol_tests.Tpo test/$(DEPDIR)/test_test_heptafranc-torcontrol_tests.Po
#	$(AM_V_CXX)source='test/torcontrol_tests.cpp' object='test/test_test_heptafranc-torcontrol_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_heptafranc-torcontrol_tests.o `test -f 'test/torcontrol_tests.cpp' || echo '$(srcdir)/'`test/torcontrol_tests.cpp

test/test_test_heptafranc-torcontrol_tests.obj: test/torcontrol_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_heptafranc-torcontrol_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_heptafranc-torcontrol_tests.Tpo -c -o test/test_test_heptafranc-torcontrol_tests.obj `if test -f 'test/torcontrol_tests.cpp'; then $(CYGPATH_W) 'test/torcontrol_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/torcontrol_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_heptafranc-torcontrol_tests.Tpo test/$(DEPDIR)/test_test_heptafranc-torcontrol_tests.Po
#	$(AM_V_CXX)source='test/torcontrol_tests.cpp' object='test/test_test_heptafranc-torcontrol_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_heptafranc-torcontrol_tests.obj `if test -f 'test/torcontrol_tests.cpp'; then $(CYGPATH_W) 'test/torcontrol_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/torcontrol_tests.cpp'; fi`

test/test_test_heptafranc-transaction_tests.o: test/transaction_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_heptafranc-transaction_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_heptafranc-transaction_tests.Tpo -c -o test/test_test_heptafranc-transaction_tests.o `test -f 'test/transaction_tests.cpp' || echo '$(srcdir)/'`test/transaction_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_heptafranc-transaction_tests.Tpo test/$(DEPDIR)/test_test_heptafranc-transaction_tests.Po
#	$(AM_V_CXX)source='test/transaction_tests.cpp' object='test/test_test_heptafranc-transaction_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_heptafranc-transaction_tests.o `test -f 'test/transaction_tests.cpp' || echo '$(srcdir)/'`test/transaction_tests.cpp

test/test_test_heptafranc-transaction_tests.obj: test/transaction_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_heptafranc-transaction_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_heptafranc-transaction_tests.Tpo -c -o test/test_test_heptafranc-transaction_tests.obj `if test -f 'test/transaction_tests.cpp'; then $(CYGPATH_W) 'test/transaction_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/transaction_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_heptafranc-transaction_tests.Tpo test/$(DEPDIR)/test_test_heptafranc-transaction_tests.Po
#	$(AM_V_CXX)source='test/transaction_tests.cpp' object='test/test_test_heptafranc-transaction_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_heptafranc-transaction_tests.obj `if test -f 'test/transaction_tests.cpp'; then $(CYGPATH_W) 'test/transaction_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/transaction_tests.cpp'; fi`

test/test_test_heptafranc-txindex_tests.o: test/txindex_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_heptafranc-txindex_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_heptafranc-txindex_tests.Tpo -c -o test/test_test_heptafranc-txindex_tests.o `test -f 'test/txindex_tests.cpp' || echo '$(srcdir)/'`test/txindex_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_heptafranc-txindex_tests.Tpo test/$(DEPDIR)/test_test_heptafranc-txindex_tests.Po
#	$(AM_V_CXX)source='test/txindex_tests.cpp' object='test/test_test_heptafranc-txindex_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_heptafranc-txindex_tests.o `test -f 'test/txindex_tests.cpp' || echo '$(srcdir)/'`test/txindex_tests.cpp

test/test_test_heptafranc-txindex_tests.obj: test/txindex_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_heptafranc-txindex_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_heptafranc-txindex_tests.Tpo -c -o test/test_test_heptafranc-txindex_tests.obj `if test -f 'test/txindex_tests.cpp'; then $(CYGPATH_W) 'test/txindex_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/txindex_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_heptafranc-txindex_tests.Tpo test/$(DEPDIR)/test_test_heptafranc-txindex_tests.Po
#	$(AM_V_CXX)source='test/txindex_tests.cpp' object='test/test_test_heptafranc-txindex_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_heptafranc-txindex_tests.obj `if test -f 'test/txindex_tests.cpp'; then $(CYGPATH_W) 'test/txindex_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/txindex_tests.cpp'; fi`

test/test_test_heptafranc-txvalidation_tests.o: test/txvalidation_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_heptafranc-txvalidation_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_heptafranc-txvalidation_tests.Tpo -c -o test/test_test_heptafranc-txvalidation_tests.o `test -f 'test/txvalidation_tests.cpp' || echo '$(srcdir)/'`test/txvalidation_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_heptafranc-txvalidation_tests.Tpo test/$(DEPDIR)/test_test_heptafranc-txvalidation_tests.Po
#	$(AM_V_CXX)source='test/txvalidation_tests.cpp' object='test/test_test_heptafranc-txvalidation_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_heptafranc-txvalidation_tests.o `test -f 'test/txvalidation_tests.cpp' || echo '$(srcdir)/'`test/txvalidation_tests.cpp

test/test_test_heptafranc-txvalidation_tests.obj: test/txvalidation_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_heptafranc-txvalidation_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_heptafranc-txvalidation_tests.Tpo -c -o test/test_test_heptafranc-txvalidation_tests.obj `if test -f 'test/txvalidation_tests.cpp'; then $(CYGPATH_W) 'test/txvalidation_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/txvalidation_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_heptafranc-txvalidation_tests.Tpo test/$(DEPDIR)/test_test_heptafranc-txvalidation_tests.Po
#	$(AM_V_CXX)source='test/txvalidation_tests.cpp' object='test/test_test_heptafranc-txvalidation_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_heptafranc-txvalidation_tests.obj `if test -f 'test/txvalidation_tests.cpp'; then $(CYGPATH_W) 'test/txvalidation_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/txvalidation_tests.cpp'; fi`

test/test_test_heptafranc-txvalidationcache_tests.o: test/txvalidationcache_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_heptafranc-txvalidationcache_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_heptafranc-txvalidationcache_tests.Tpo -c -o test/test_test_heptafranc-txvalidationcache_tests.o `test -f 'test/txvalidationcache_tests.cpp' || echo '$(srcdir)/'`test/txvalidationcache_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_heptafranc-txvalidationcache_tests.Tpo test/$(DEPDIR)/test_test_heptafranc-txvalidationcache_tests.Po
#	$(AM_V_CXX)source='test/txvalidationcache_tests.cpp' object='test/test_test_heptafranc-txvalidationcache_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_heptafranc-txvalidationcache_tests.o `test -f 'test/txvalidationcache_tests.cpp' || echo '$(srcdir)/'`test/txvalidationcache_tests.cpp

test/test_test_heptafranc-txvalidationcache_tests.obj: test/txvalidationcache_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_heptafranc-txvalidationcache_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_heptafranc-txvalidationcache_tests.Tpo -c -o test/test_test_heptafranc-txvalidationcache_tests.obj `if test -f 'test/txvalidationcache_tests.cpp'; then $(CYGPATH_W) 'test/txvalidationcache_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/txvalidationcache_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_heptafranc-txvalidationcache_tests.Tpo test/$(DEPDIR)/test_test_heptafranc-txvalidationcache_tests.Po
#	$(AM_V_CXX)source='test/txvalidationcache_tests.cpp' object='test/test_test_heptafranc-txvalidationcache_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_heptafranc-txvalidationcache_tests.obj `if test -f 'test/txvalidationcache_tests.cpp'; then $(CYGPATH_W) 'test/txvalidationcache_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/txvalidationcache_tests.cpp'; fi`

test/test_test_heptafranc-uint256_tests.o: test/uint256_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_heptafranc-uint256_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_heptafranc-uint256_tests.Tpo -c -o test/test_test_heptafranc-uint256_tests.o `test -f 'test/uint256_tests.cpp' || echo '$(srcdir)/'`test/uint256_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_heptafranc-uint256_tests.Tpo test/$(DEPDIR)/test_test_heptafranc-uint256_tests.Po
#	$(AM_V_CXX)source='test/uint256_tests.cpp' object='test/test_test_heptafranc-uint256_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_heptafranc-uint256_tests.o `test -f 'test/uint256_tests.cpp' || echo '$(srcdir)/'`test/uint256_tests.cpp

test/test_test_heptafranc-uint256_tests.obj: test/uint256_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_heptafranc-uint256_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_heptafranc-uint256_tests.Tpo -c -o test/test_test_heptafranc-uint256_tests.obj `if test -f 'test/uint256_tests.cpp'; then $(CYGPATH_W) 'test/uint256_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/uint256_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_heptafranc-uint256_tests.Tpo test/$(DEPDIR)/test_test_heptafranc-uint256_tests.Po
#	$(AM_V_CXX)source='test/uint256_tests.cpp' object='test/test_test_heptafranc-uint256_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_heptafranc-uint256_tests.obj `if test -f 'test/uint256_tests.cpp'; then $(CYGPATH_W) 'test/uint256_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/uint256_tests.cpp'; fi`

test/test_test_heptafranc-util_tests.o: test/util_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_heptafranc-util_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_heptafranc-util_tests.Tpo -c -o test/test_test_heptafranc-util_tests.o `test -f 'test/util_tests.cpp' || echo '$(srcdir)/'`test/util_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_heptafranc-util_tests.Tpo test/$(DEPDIR)/test_test_heptafranc-util_tests.Po
#	$(AM_V_CXX)source='test/util_tests.cpp' object='test/test_test_heptafranc-util_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_heptafranc-util_tests.o `test -f 'test/util_tests.cpp' || echo '$(srcdir)/'`test/util_tests.cpp

test/test_test_heptafranc-util_tests.obj: test/util_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_heptafranc-util_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_heptafranc-util_tests.Tpo -c -o test/test_test_heptafranc-util_tests.obj `if test -f 'test/util_tests.cpp'; then $(CYGPATH_W) 'test/util_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/util_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_heptafranc-util_tests.Tpo test/$(DEPDIR)/test_test_heptafranc-util_tests.Po
#	$(AM_V_CXX)source='test/util_tests.cpp' object='test/test_test_heptafranc-util_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_heptafranc-util_tests.obj `if test -f 'test/util_tests.cpp'; then $(CYGPATH_W) 'test/util_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/util_tests.cpp'; fi`

test/test_test_heptafranc-validation_block_tests.o: test/validation_block_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_heptafranc-validation_block_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_heptafranc-validation_block_tests.Tpo -c -o test/test_test_heptafranc-validation_block_tests.o `test -f 'test/validation_block_tests.cpp' || echo '$(srcdir)/'`test/validation_block_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_heptafranc-validation_block_tests.Tpo test/$(DEPDIR)/test_test_heptafranc-validation_block_tests.Po
#	$(AM_V_CXX)source='test/validation_block_tests.cpp' object='test/test_test_heptafranc-validation_block_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_heptafranc-validation_block_tests.o `test -f 'test/validation_block_tests.cpp' || echo '$(srcdir)/'`test/validation_block_tests.cpp

test/test_test_heptafranc-validation_block_tests.obj: test/validation_block_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_heptafranc-validation_block_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_heptafranc-validation_block_tests.Tpo -c -o test/test_test_heptafranc-validation_block_tests.obj `if test -f 'test/validation_block_tests.cpp'; then $(CYGPATH_W) 'test/validation_block_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/validation_block_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_heptafranc-validation_block_tests.Tpo test/$(DEPDIR)/test_test_heptafranc-validation_block_tests.Po
#	$(AM_V_CXX)source='test/validation_block_tests.cpp' object='test/test_test_heptafranc-validation_block_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_heptafranc-validation_block_tests.obj `if test -f 'test/validation_block_tests.cpp'; then $(CYGPATH_W) 'test/validation_block_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/validation_block_tests.cpp'; fi`

test/test_test_heptafranc-versionbits_tests.o: test/versionbits_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_heptafranc-versionbits_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_heptafranc-versionbits_tests.Tpo -c -o test/test_test_heptafranc-versionbits_tests.o `test -f 'test/versionbits_tests.cpp' || echo '$(srcdir)/'`test/versionbits_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_heptafranc-versionbits_tests.Tpo test/$(DEPDIR)/test_test_heptafranc-versionbits_tests.Po
#	$(AM_V_CXX)source='test/versionbits_tests.cpp' object='test/test_test_heptafranc-versionbits_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_heptafranc-versionbits_tests.o `test -f 'test/versionbits_tests.cpp' || echo '$(srcdir)/'`test/versionbits_tests.cpp

test/test_test_heptafranc-versionbits_tests.obj: test/versionbits_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_heptafranc-versionbits_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_heptafranc-versionbits_tests.Tpo -c -o test/test_test_heptafranc-versionbits_tests.obj `if test -f 'test/versionbits_tests.cpp'; then $(CYGPATH_W) 'test/versionbits_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/versionbits_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_heptafranc-versionbits_tests.Tpo test/$(DEPDIR)/test_test_heptafranc-versionbits_tests.Po
#	$(AM_V_CXX)source='test/versionbits_tests.cpp' object='test/test_test_heptafranc-versionbits_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_heptafranc-versionbits_tests.obj `if test -f 'test/versionbits_tests.cpp'; then $(CYGPATH_W) 'test/versionbits_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/versionbits_tests.cpp'; fi`

wallet/test/test_test_heptafranc-accounting_tests.o: wallet/test/accounting_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -MT wallet/test/test_test_heptafranc-accounting_tests.o -MD -MP -MF wallet/test/$(DEPDIR)/test_test_heptafranc-accounting_tests.Tpo -c -o wallet/test/test_test_heptafranc-accounting_tests.o `test -f 'wallet/test/accounting_tests.cpp' || echo '$(srcdir)/'`wallet/test/accounting_tests.cpp
	$(AM_V_at)$(am__mv) wallet/test/$(DEPDIR)/test_test_heptafranc-accounting_tests.Tpo wallet/test/$(DEPDIR)/test_test_heptafranc-accounting_tests.Po
#	$(AM_V_CXX)source='wallet/test/accounting_tests.cpp' object='wallet/test/test_test_heptafranc-accounting_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -c -o wallet/test/test_test_heptafranc-accounting_tests.o `test -f 'wallet/test/accounting_tests.cpp' || echo '$(srcdir)/'`wallet/test/accounting_tests.cpp

wallet/test/test_test_heptafranc-accounting_tests.obj: wallet/test/accounting_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -MT wallet/test/test_test_heptafranc-accounting_tests.obj -MD -MP -MF wallet/test/$(DEPDIR)/test_test_heptafranc-accounting_tests.Tpo -c -o wallet/test/test_test_heptafranc-accounting_tests.obj `if test -f 'wallet/test/accounting_tests.cpp'; then $(CYGPATH_W) 'wallet/test/accounting_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/test/accounting_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) wallet/test/$(DEPDIR)/test_test_heptafranc-accounting_tests.Tpo wallet/test/$(DEPDIR)/test_test_heptafranc-accounting_tests.Po
#	$(AM_V_CXX)source='wallet/test/accounting_tests.cpp' object='wallet/test/test_test_heptafranc-accounting_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -c -o wallet/test/test_test_heptafranc-accounting_tests.obj `if test -f 'wallet/test/accounting_tests.cpp'; then $(CYGPATH_W) 'wallet/test/accounting_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/test/accounting_tests.cpp'; fi`

wallet/test/test_test_heptafranc-psbt_wallet_tests.o: wallet/test/psbt_wallet_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -MT wallet/test/test_test_heptafranc-psbt_wallet_tests.o -MD -MP -MF wallet/test/$(DEPDIR)/test_test_heptafranc-psbt_wallet_tests.Tpo -c -o wallet/test/test_test_heptafranc-psbt_wallet_tests.o `test -f 'wallet/test/psbt_wallet_tests.cpp' || echo '$(srcdir)/'`wallet/test/psbt_wallet_tests.cpp
	$(AM_V_at)$(am__mv) wallet/test/$(DEPDIR)/test_test_heptafranc-psbt_wallet_tests.Tpo wallet/test/$(DEPDIR)/test_test_heptafranc-psbt_wallet_tests.Po
#	$(AM_V_CXX)source='wallet/test/psbt_wallet_tests.cpp' object='wallet/test/test_test_heptafranc-psbt_wallet_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -c -o wallet/test/test_test_heptafranc-psbt_wallet_tests.o `test -f 'wallet/test/psbt_wallet_tests.cpp' || echo '$(srcdir)/'`wallet/test/psbt_wallet_tests.cpp

wallet/test/test_test_heptafranc-psbt_wallet_tests.obj: wallet/test/psbt_wallet_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -MT wallet/test/test_test_heptafranc-psbt_wallet_tests.obj -MD -MP -MF wallet/test/$(DEPDIR)/test_test_heptafranc-psbt_wallet_tests.Tpo -c -o wallet/test/test_test_heptafranc-psbt_wallet_tests.obj `if test -f 'wallet/test/psbt_wallet_tests.cpp'; then $(CYGPATH_W) 'wallet/test/psbt_wallet_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/test/psbt_wallet_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) wallet/test/$(DEPDIR)/test_test_heptafranc-psbt_wallet_tests.Tpo wallet/test/$(DEPDIR)/test_test_heptafranc-psbt_wallet_tests.Po
#	$(AM_V_CXX)source='wallet/test/psbt_wallet_tests.cpp' object='wallet/test/test_test_heptafranc-psbt_wallet_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -c -o wallet/test/test_test_heptafranc-psbt_wallet_tests.obj `if test -f 'wallet/test/psbt_wallet_tests.cpp'; then $(CYGPATH_W) 'wallet/test/psbt_wallet_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/test/psbt_wallet_tests.cpp'; fi`

wallet/test/test_test_heptafranc-wallet_tests.o: wallet/test/wallet_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -MT wallet/test/test_test_heptafranc-wallet_tests.o -MD -MP -MF wallet/test/$(DEPDIR)/test_test_heptafranc-wallet_tests.Tpo -c -o wallet/test/test_test_heptafranc-wallet_tests.o `test -f 'wallet/test/wallet_tests.cpp' || echo '$(srcdir)/'`wallet/test/wallet_tests.cpp
	$(AM_V_at)$(am__mv) wallet/test/$(DEPDIR)/test_test_heptafranc-wallet_tests.Tpo wallet/test/$(DEPDIR)/test_test_heptafranc-wallet_tests.Po
#	$(AM_V_CXX)source='wallet/test/wallet_tests.cpp' object='wallet/test/test_test_heptafranc-wallet_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -c -o wallet/test/test_test_heptafranc-wallet_tests.o `test -f 'wallet/test/wallet_tests.cpp' || echo '$(srcdir)/'`wallet/test/wallet_tests.cpp

wallet/test/test_test_heptafranc-wallet_tests.obj: wallet/test/wallet_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -MT wallet/test/test_test_heptafranc-wallet_tests.obj -MD -MP -MF wallet/test/$(DEPDIR)/test_test_heptafranc-wallet_tests.Tpo -c -o wallet/test/test_test_heptafranc-wallet_tests.obj `if test -f 'wallet/test/wallet_tests.cpp'; then $(CYGPATH_W) 'wallet/test/wallet_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/test/wallet_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) wallet/test/$(DEPDIR)/test_test_heptafranc-wallet_tests.Tpo wallet/test/$(DEPDIR)/test_test_heptafranc-wallet_tests.Po
#	$(AM_V_CXX)source='wallet/test/wallet_tests.cpp' object='wallet/test/test_test_heptafranc-wallet_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -c -o wallet/test/test_test_heptafranc-wallet_tests.obj `if test -f 'wallet/test/wallet_tests.cpp'; then $(CYGPATH_W) 'wallet/test/wallet_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/test/wallet_tests.cpp'; fi`

wallet/test/test_test_heptafranc-wallet_crypto_tests.o: wallet/test/wallet_crypto_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -MT wallet/test/test_test_heptafranc-wallet_crypto_tests.o -MD -MP -MF wallet/test/$(DEPDIR)/test_test_heptafranc-wallet_crypto_tests.Tpo -c -o wallet/test/test_test_heptafranc-wallet_crypto_tests.o `test -f 'wallet/test/wallet_crypto_tests.cpp' || echo '$(srcdir)/'`wallet/test/wallet_crypto_tests.cpp
	$(AM_V_at)$(am__mv) wallet/test/$(DEPDIR)/test_test_heptafranc-wallet_crypto_tests.Tpo wallet/test/$(DEPDIR)/test_test_heptafranc-wallet_crypto_tests.Po
#	$(AM_V_CXX)source='wallet/test/wallet_crypto_tests.cpp' object='wallet/test/test_test_heptafranc-wallet_crypto_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -c -o wallet/test/test_test_heptafranc-wallet_crypto_tests.o `test -f 'wallet/test/wallet_crypto_tests.cpp' || echo '$(srcdir)/'`wallet/test/wallet_crypto_tests.cpp

wallet/test/test_test_heptafranc-wallet_crypto_tests.obj: wallet/test/wallet_crypto_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -MT wallet/test/test_test_heptafranc-wallet_crypto_tests.obj -MD -MP -MF wallet/test/$(DEPDIR)/test_test_heptafranc-wallet_crypto_tests.Tpo -c -o wallet/test/test_test_heptafranc-wallet_crypto_tests.obj `if test -f 'wallet/test/wallet_crypto_tests.cpp'; then $(CYGPATH_W) 'wallet/test/wallet_crypto_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/test/wallet_crypto_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) wallet/test/$(DEPDIR)/test_test_heptafranc-wallet_crypto_tests.Tpo wallet/test/$(DEPDIR)/test_test_heptafranc-wallet_crypto_tests.Po
#	$(AM_V_CXX)source='wallet/test/wallet_crypto_tests.cpp' object='wallet/test/test_test_heptafranc-wallet_crypto_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -c -o wallet/test/test_test_heptafranc-wallet_crypto_tests.obj `if test -f 'wallet/test/wallet_crypto_tests.cpp'; then $(CYGPATH_W) 'wallet/test/wallet_crypto_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/test/wallet_crypto_tests.cpp'; fi`

wallet/test/test_test_heptafranc-coinselector_tests.o: wallet/test/coinselector_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -MT wallet/test/test_test_heptafranc-coinselector_tests.o -MD -MP -MF wallet/test/$(DEPDIR)/test_test_heptafranc-coinselector_tests.Tpo -c -o wallet/test/test_test_heptafranc-coinselector_tests.o `test -f 'wallet/test/coinselector_tests.cpp' || echo '$(srcdir)/'`wallet/test/coinselector_tests.cpp
	$(AM_V_at)$(am__mv) wallet/test/$(DEPDIR)/test_test_heptafranc-coinselector_tests.Tpo wallet/test/$(DEPDIR)/test_test_heptafranc-coinselector_tests.Po
#	$(AM_V_CXX)source='wallet/test/coinselector_tests.cpp' object='wallet/test/test_test_heptafranc-coinselector_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -c -o wallet/test/test_test_heptafranc-coinselector_tests.o `test -f 'wallet/test/coinselector_tests.cpp' || echo '$(srcdir)/'`wallet/test/coinselector_tests.cpp

wallet/test/test_test_heptafranc-coinselector_tests.obj: wallet/test/coinselector_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -MT wallet/test/test_test_heptafranc-coinselector_tests.obj -MD -MP -MF wallet/test/$(DEPDIR)/test_test_heptafranc-coinselector_tests.Tpo -c -o wallet/test/test_test_heptafranc-coinselector_tests.obj `if test -f 'wallet/test/coinselector_tests.cpp'; then $(CYGPATH_W) 'wallet/test/coinselector_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/test/coinselector_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) wallet/test/$(DEPDIR)/test_test_heptafranc-coinselector_tests.Tpo wallet/test/$(DEPDIR)/test_test_heptafranc-coinselector_tests.Po
#	$(AM_V_CXX)source='wallet/test/coinselector_tests.cpp' object='wallet/test/test_test_heptafranc-coinselector_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_CXXFLAGS) $(CXXFLAGS) -c -o wallet/test/test_test_heptafranc-coinselector_tests.obj `if test -f 'wallet/test/coinselector_tests.cpp'; then $(CYGPATH_W) 'wallet/test/coinselector_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/test/coinselector_tests.cpp'; fi`

test/test_test_heptafranc_fuzzy-test_heptafranc_fuzzy.o: test/test_heptafranc_fuzzy.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_fuzzy_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_fuzzy_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_heptafranc_fuzzy-test_heptafranc_fuzzy.o -MD -MP -MF test/$(DEPDIR)/test_test_heptafranc_fuzzy-test_heptafranc_fuzzy.Tpo -c -o test/test_test_heptafranc_fuzzy-test_heptafranc_fuzzy.o `test -f 'test/test_heptafranc_fuzzy.cpp' || echo '$(srcdir)/'`test/test_heptafranc_fuzzy.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_heptafranc_fuzzy-test_heptafranc_fuzzy.Tpo test/$(DEPDIR)/test_test_heptafranc_fuzzy-test_heptafranc_fuzzy.Po
#	$(AM_V_CXX)source='test/test_heptafranc_fuzzy.cpp' object='test/test_test_heptafranc_fuzzy-test_heptafranc_fuzzy.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_fuzzy_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_fuzzy_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_heptafranc_fuzzy-test_heptafranc_fuzzy.o `test -f 'test/test_heptafranc_fuzzy.cpp' || echo '$(srcdir)/'`test/test_heptafranc_fuzzy.cpp

test/test_test_heptafranc_fuzzy-test_heptafranc_fuzzy.obj: test/test_heptafranc_fuzzy.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_fuzzy_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_fuzzy_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_heptafranc_fuzzy-test_heptafranc_fuzzy.obj -MD -MP -MF test/$(DEPDIR)/test_test_heptafranc_fuzzy-test_heptafranc_fuzzy.Tpo -c -o test/test_test_heptafranc_fuzzy-test_heptafranc_fuzzy.obj `if test -f 'test/test_heptafranc_fuzzy.cpp'; then $(CYGPATH_W) 'test/test_heptafranc_fuzzy.cpp'; else $(CYGPATH_W) '$(srcdir)/test/test_heptafranc_fuzzy.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_heptafranc_fuzzy-test_heptafranc_fuzzy.Tpo test/$(DEPDIR)/test_test_heptafranc_fuzzy-test_heptafranc_fuzzy.Po
#	$(AM_V_CXX)source='test/test_heptafranc_fuzzy.cpp' object='test/test_test_heptafranc_fuzzy-test_heptafranc_fuzzy.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_heptafranc_fuzzy_CPPFLAGS) $(CPPFLAGS) $(test_test_heptafranc_fuzzy_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_heptafranc_fuzzy-test_heptafranc_fuzzy.obj `if test -f 'test/test_heptafranc_fuzzy.cpp'; then $(CYGPATH_W) 'test/test_heptafranc_fuzzy.cpp'; else $(CYGPATH_W) '$(srcdir)/test/test_heptafranc_fuzzy.cpp'; fi`

.cpp.o:
	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.lo$$||'`;\
	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Plo
#	$(AM_V_CXX)source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LTCXXCOMPILE) -c -o $@ $<

.mm.o:
	$(AM_V_OBJCXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
	$(OBJCXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_OBJCXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(OBJCXXDEPMODE) $(depcomp) \
#	$(AM_V_OBJCXX_no)$(OBJCXXCOMPILE) -c -o $@ $<

.mm.obj:
	$(AM_V_OBJCXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
	$(OBJCXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_OBJCXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(OBJCXXDEPMODE) $(depcomp) \
#	$(AM_V_OBJCXX_no)$(OBJCXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.mm.lo:
	$(AM_V_OBJCXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.lo$$||'`;\
	$(LTOBJCXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Plo
#	$(AM_V_OBJCXX)source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(OBJCXXDEPMODE) $(depcomp) \
#	$(AM_V_OBJCXX_no)$(LTOBJCXXCOMPILE) -c -o $@ $<

qt/qt_heptafranc_qt-macdockiconhandler.o: qt/macdockiconhandler.mm
	$(AM_V_OBJCXX)$(OBJCXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_heptafranc_qt_CPPFLAGS) $(CPPFLAGS) $(AM_OBJCXXFLAGS) $(OBJCXXFLAGS) -MT qt/qt_heptafranc_qt-macdockiconhandler.o -MD -MP -MF qt/$(DEPDIR)/qt_heptafranc_qt-macdockiconhandler.Tpo -c -o qt/qt_heptafranc_qt-macdockiconhandler.o `test -f 'qt/macdockiconhandler.mm' || echo '$(srcdir)/'`qt/macdockiconhandler.mm
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_heptafranc_qt-macdockiconhandler.Tpo qt/$(DEPDIR)/qt_heptafranc_qt-macdockiconhandler.Po
#	$(AM_V_OBJCXX)source='qt/macdockiconhandler.mm' object='qt/qt_heptafranc_qt-macdockiconhandler.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(OBJCXXDEPMODE) $(depcomp) \
#	$(AM_V_OBJCXX_no)$(OBJCXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_heptafranc_qt_CPPFLAGS) $(CPPFLAGS) $(AM_OBJCXXFLAGS) $(OBJCXXFLAGS) -c -o qt/qt_heptafranc_qt-macdockiconhandler.o `test -f 'qt/macdockiconhandler.mm' || echo '$(srcdir)/'`qt/macdockiconhandler.mm

qt/qt_heptafranc_qt-macdockiconhandler.obj: qt/macdockiconhandler.mm
	$(AM_V_OBJCXX)$(OBJCXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_heptafranc_qt_CPPFLAGS) $(CPPFLAGS) $(AM_OBJCXXFLAGS) $(OBJCXXFLAGS) -MT qt/qt_heptafranc_qt-macdockiconhandler.obj -MD -MP -MF qt/$(DEPDIR)/qt_heptafranc_qt-macdockiconhandler.Tpo -c -o qt/qt_heptafranc_qt-macdockiconhandler.obj `if test -f 'qt/macdockiconhandler.mm'; then $(CYGPATH_W) 'qt/macdockiconhandler.mm'; else $(CYGPATH_W) '$(srcdir)/qt/macdockiconhandler.mm'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_heptafranc_qt-macdockiconhandler.Tpo qt/$(DEPDIR)/qt_heptafranc_qt-macdockiconhandler.Po
#	$(AM_V_OBJCXX)source='qt/macdockiconhandler.mm' object='qt/qt_heptafranc_qt-macdockiconhandler.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(OBJCXXDEPMODE) $(depcomp) \
#	$(AM_V_OBJCXX_no)$(OBJCXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_heptafranc_qt_CPPFLAGS) $(CPPFLAGS) $(AM_OBJCXXFLAGS) $(OBJCXXFLAGS) -c -o qt/qt_heptafranc_qt-macdockiconhandler.obj `if test -f 'qt/macdockiconhandler.mm'; then $(CYGPATH_W) 'qt/macdockiconhandler.mm'; else $(CYGPATH_W) '$(srcdir)/qt/macdockiconhandler.mm'; fi`

qt/qt_heptafranc_qt-macnotificationhandler.o: qt/macnotificationhandler.mm
	$(AM_V_OBJCXX)$(OBJCXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_heptafranc_qt_CPPFLAGS) $(CPPFLAGS) $(AM_OBJCXXFLAGS) $(OBJCXXFLAGS) -MT qt/qt_heptafranc_qt-macnotificationhandler.o -MD -MP -MF qt/$(DEPDIR)/qt_heptafranc_qt-macnotificationhandler.Tpo -c -o qt/qt_heptafranc_qt-macnotificationhandler.o `test -f 'qt/macnotificationhandler.mm' || echo '$(srcdir)/'`qt/macnotificationhandler.mm
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_heptafranc_qt-macnotificationhandler.Tpo qt/$(DEPDIR)/qt_heptafranc_qt-macnotificationhandler.Po
#	$(AM_V_OBJCXX)source='qt/macnotificationhandler.mm' object='qt/qt_heptafranc_qt-macnotificationhandler.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(OBJCXXDEPMODE) $(depcomp) \
#	$(AM_V_OBJCXX_no)$(OBJCXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_heptafranc_qt_CPPFLAGS) $(CPPFLAGS) $(AM_OBJCXXFLAGS) $(OBJCXXFLAGS) -c -o qt/qt_heptafranc_qt-macnotificationhandler.o `test -f 'qt/macnotificationhandler.mm' || echo '$(srcdir)/'`qt/macnotificationhandler.mm

qt/qt_heptafranc_qt-macnotificationhandler.obj: qt/macnotificationhandler.mm
	$(AM_V_OBJCXX)$(OBJCXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_heptafranc_qt_CPPFLAGS) $(CPPFLAGS) $(AM_OBJCXXFLAGS) $(OBJCXXFLAGS) -MT qt/qt_heptafranc_qt-macnotificationhandler.obj -MD -MP -MF qt/$(DEPDIR)/qt_heptafranc_qt-macnotificationhandler.Tpo -c -o qt/qt_heptafranc_qt-macnotificationhandler.obj `if test -f 'qt/macnotificationhandler.mm'; then $(CYGPATH_W) 'qt/macnotificationhandler.mm'; else $(CYGPATH_W) '$(srcdir)/qt/macnotificationhandler.mm'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_heptafranc_qt-macnotificationhandler.Tpo qt/$(DEPDIR)/qt_heptafranc_qt-macnotificationhandler.Po
#	$(AM_V_OBJCXX)source='qt/macnotificationhandler.mm' object='qt/qt_heptafranc_qt-macnotificationhandler.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(OBJCXXDEPMODE) $(depcomp) \
#	$(AM_V_OBJCXX_no)$(OBJCXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_heptafranc_qt_CPPFLAGS) $(CPPFLAGS) $(AM_OBJCXXFLAGS) $(OBJCXXFLAGS) -c -o qt/qt_heptafranc_qt-macnotificationhandler.obj `if test -f 'qt/macnotificationhandler.mm'; then $(CYGPATH_W) 'qt/macnotificationhandler.mm'; else $(CYGPATH_W) '$(srcdir)/qt/macnotificationhandler.mm'; fi`

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
	-rm -rf bench/.libs bench/_libs
	-rm -rf compat/.libs compat/_libs
	-rm -rf consensus/.libs consensus/_libs
	-rm -rf crypto/.libs crypto/_libs
	-rm -rf primitives/.libs primitives/_libs
	-rm -rf qt/.libs qt/_libs
	-rm -rf qt/test/.libs qt/test/_libs
	-rm -rf script/.libs script/_libs
	-rm -rf test/.libs test/_libs
install-includeHEADERS: $(include_HEADERS)
	@$(NORMAL_INSTALL)
	@list='$(include_HEADERS)'; test -n "$(includedir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(includedir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(includedir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_HEADER) $$files '$(DESTDIR)$(includedir)'"; \
	  $(INSTALL_HEADER) $$files "$(DESTDIR)$(includedir)" || exit $$?; \
	done

uninstall-includeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(include_HEADERS)'; test -n "$(includedir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(includedir)'; $(am__uninstall_files_from_dir)

# This directory's subdirectories are mostly independent; you can cd
# into them and run 'make' without going through this Makefile.
# To change the values of 'make' variables: instead of editing Makefiles,
# (1) if the variable is set in 'config.status', edit 'config.status'
#     (which will cause the Makefiles to be regenerated when you run 'make');
# (2) otherwise, pass the desired values on the 'make' command line.
$(am__recursive_targets):
	@fail=; \
	if $(am__make_keepgoing); then \
	  failcom='fail=yes'; \
	else \
	  failcom='exit 1'; \
	fi; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	case "$@" in \
	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
	  *) list='$(SUBDIRS)' ;; \
	esac; \
	for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-recursive
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	if ($(ETAGS) --etags-include --version) >/dev/null 2>&1; then \
	  include_option=--etags-include; \
	  empty_fix=.; \
	else \
	  include_option=--include; \
	  empty_fix=; \
	fi; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test ! -f $$subdir/TAGS || \
	      set "$$@" "$$include_option=$$here/$$subdir/TAGS"; \
	  fi; \
	done; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-recursive

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-recursive

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

# Recover from deleted '.trs' file; this should ensure that
# "rm -f foo.log; make foo.trs" re-run 'foo.test', and re-create
# both 'foo.log' and 'foo.trs'.  Break the recipe in two subshells
# to avoid problems with "make -n".
.log.trs:
	rm -f $< $@
	$(MAKE) $(AM_MAKEFLAGS) $<

# Leading 'am--fnord' is there to ensure the list of targets does not
# expand to empty, as could happen e.g. with make check TESTS=''.
am--fnord $(TEST_LOGS) $(TEST_LOGS:.log=.trs): $(am__force_recheck)
am--force-recheck:
	@:

$(TEST_SUITE_LOG): $(TEST_LOGS)
	@$(am__set_TESTS_bases); \
	am__f_ok () { test -f "$$1" && test -r "$$1"; }; \
	redo_bases=`for i in $$bases; do \
	              am__f_ok $$i.trs && am__f_ok $$i.log || echo $$i; \
	            done`; \
	if test -n "$$redo_bases"; then \
	  redo_logs=`for i in $$redo_bases; do echo $$i.log; done`; \
	  redo_results=`for i in $$redo_bases; do echo $$i.trs; done`; \
	  if $(am__make_dryrun); then :; else \
	    rm -f $$redo_logs && rm -f $$redo_results || exit 1; \
	  fi; \
	fi; \
	if test -n "$$am__remaking_logs"; then \
	  echo "fatal: making $(TEST_SUITE_LOG): possible infinite" \
	       "recursion detected" >&2; \
	elif test -n "$$redo_logs"; then \
	  am__remaking_logs=yes $(MAKE) $(AM_MAKEFLAGS) $$redo_logs; \
	fi; \
	if $(am__make_dryrun); then :; else \
	  st=0;  \
	  errmsg="fatal: making $(TEST_SUITE_LOG): failed to create"; \
	  for i in $$redo_bases; do \
	    test -f $$i.trs && test -r $$i.trs \
	      || { echo "$$errmsg $$i.trs" >&2; st=1; }; \
	    test -f $$i.log && test -r $$i.log \
	      || { echo "$$errmsg $$i.log" >&2; st=1; }; \
	  done; \
	  test $$st -eq 0 || exit 1; \
	fi
	@$(am__sh_e_setup); $(am__tty_colors); $(am__set_TESTS_bases); \
	ws='[ 	]'; \
	results=`for b in $$bases; do echo $$b.trs; done`; \
	test -n "$$results" || results=/dev/null; \
	all=`  grep "^$$ws*:test-result:"           $$results | wc -l`; \
	pass=` grep "^$$ws*:test-result:$$ws*PASS"  $$results | wc -l`; \
	fail=` grep "^$$ws*:test-result:$$ws*FAIL"  $$results | wc -l`; \
	skip=` grep "^$$ws*:test-result:$$ws*SKIP"  $$results | wc -l`; \
	xfail=`grep "^$$ws*:test-result:$$ws*XFAIL" $$results | wc -l`; \
	xpass=`grep "^$$ws*:test-result:$$ws*XPASS" $$results | wc -l`; \
	error=`grep "^$$ws*:test-result:$$ws*ERROR" $$results | wc -l`; \
	if test `expr $$fail + $$xpass + $$error` -eq 0; then \
	  success=true; \
	else \
	  success=false; \
	fi; \
	br='==================='; br=$$br$$br$$br$$br; \
	result_count () \
	{ \
	    if test x"$$1" = x"--maybe-color"; then \
	      maybe_colorize=yes; \
	    elif test x"$$1" = x"--no-color"; then \
	      maybe_colorize=no; \
	    else \
	      echo "$@: invalid 'result_count' usage" >&2; exit 4; \
	    fi; \
	    shift; \
	    desc=$$1 count=$$2; \
	    if test $$maybe_colorize = yes && test $$count -gt 0; then \
	      color_start=$$3 color_end=$$std; \
	    else \
	      color_start= color_end=; \
	    fi; \
	    echo "$${color_start}# $$desc $$count$${color_end}"; \
	}; \
	create_testsuite_report () \
	{ \
	  result_count $$1 "TOTAL:" $$all   "$$brg"; \
	  result_count $$1 "PASS: " $$pass  "$$grn"; \
	  result_count $$1 "SKIP: " $$skip  "$$blu"; \
	  result_count $$1 "XFAIL:" $$xfail "$$lgn"; \
	  result_count $$1 "FAIL: " $$fail  "$$red"; \
	  result_count $$1 "XPASS:" $$xpass "$$red"; \
	  result_count $$1 "ERROR:" $$error "$$mgn"; \
	}; \
	{								\
	  echo "$(PACKAGE_STRING): $(subdir)/$(TEST_SUITE_LOG)" |	\
	    $(am__rst_title);						\
	  create_testsuite_report --no-color;				\
	  echo;								\
	  echo ".. contents:: :depth: 2";				\
	  echo;								\
	  for b in $$bases; do echo $$b; done				\
	    | $(am__create_global_log);					\
	} >$(TEST_SUITE_LOG).tmp || exit 1;				\
	mv $(TEST_SUITE_LOG).tmp $(TEST_SUITE_LOG);			\
	if $$success; then						\
	  col="$$grn";							\
	 else								\
	  col="$$red";							\
	  test x"$$VERBOSE" = x || cat $(TEST_SUITE_LOG);		\
	fi;								\
	echo "$${col}$$br$${std}"; 					\
	echo "$${col}Testsuite summary for $(PACKAGE_STRING)$${std}";	\
	echo "$${col}$$br$${std}"; 					\
	create_testsuite_report --maybe-color;				\
	echo "$$col$$br$$std";						\
	if $$success; then :; else					\
	  echo "$${col}See $(subdir)/$(TEST_SUITE_LOG)$${std}";		\
	  if test -n "$(PACKAGE_BUGREPORT)"; then			\
	    echo "$${col}Please report to $(PACKAGE_BUGREPORT)$${std}";	\
	  fi;								\
	  echo "$$col$$br$$std";					\
	fi;								\
	$$success || exit 1

check-TESTS:
	@list='$(RECHECK_LOGS)';           test -z "$$list" || rm -f $$list
	@list='$(RECHECK_LOGS:.log=.trs)'; test -z "$$list" || rm -f $$list
	@test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)
	@set +e; $(am__set_TESTS_bases); \
	log_list=`for i in $$bases; do echo $$i.log; done`; \
	trs_list=`for i in $$bases; do echo $$i.trs; done`; \
	log_list=`echo $$log_list`; trs_list=`echo $$trs_list`; \
	$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_LOG) TEST_LOGS="$$log_list"; \
	exit $$?;
recheck: all 
	@test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)
	@set +e; $(am__set_TESTS_bases); \
	bases=`for i in $$bases; do echo $$i; done \
	         | $(am__list_recheck_tests)` || exit 1; \
	log_list=`for i in $$bases; do echo $$i.log; done`; \
	log_list=`echo $$log_list`; \
	$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_LOG) \
	        am__force_recheck=am--force-recheck \
	        TEST_LOGS="$$log_list"; \
	exit $$?
qt/test/test_heptafranc-qt.log: qt/test/test_heptafranc-qt$(EXEEXT)
	@p='qt/test/test_heptafranc-qt$(EXEEXT)'; \
	b='qt/test/test_heptafranc-qt'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
.test.log:
	@p='$<'; \
	$(am__set_b); \
	$(am__check_pre) $(TEST_LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_TEST_LOG_DRIVER_FLAGS) $(TEST_LOG_DRIVER_FLAGS) -- $(TEST_LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
#.test$(EXEEXT).log:
#	@p='$<'; \
#	$(am__set_b); \
#	$(am__check_pre) $(TEST_LOG_DRIVER) --test-name "$$f" \
#	--log-file $$b.log --trs-file $$b.trs \
#	$(am__common_driver_flags) $(AM_TEST_LOG_DRIVER_FLAGS) $(TEST_LOG_DRIVER_FLAGS) -- $(TEST_LOG_COMPILE) \
#	"$$tst" $(AM_TESTS_FD_REDIRECT)

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
	@list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    $(am__make_dryrun) \
	      || test -d "$(distdir)/$$subdir" \
	      || $(MKDIR_P) "$(distdir)/$$subdir" \
	      || exit 1; \
	    dir1=$$subdir; dir2="$(distdir)/$$subdir"; \
	    $(am__relativize); \
	    new_distdir=$$reldir; \
	    dir1=$$subdir; dir2="$(top_distdir)"; \
	    $(am__relativize); \
	    new_top_distdir=$$reldir; \
	    echo " (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) top_distdir="$$new_top_distdir" distdir="$$new_distdir" \\"; \
	    echo "     am__remove_distdir=: am__skip_length_check=: am__skip_mode_fix=: distdir)"; \
	    ($(am__cd) $$subdir && \
	      $(MAKE) $(AM_MAKEFLAGS) \
	        top_distdir="$$new_top_distdir" \
	        distdir="$$new_distdir" \
		am__remove_distdir=: \
		am__skip_length_check=: \
		am__skip_mode_fix=: \
	        distdir) \
	      || exit 1; \
	  fi; \
	done
check-local:
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) check-TESTS check-local
check: check-recursive
all-am: Makefile $(LTLIBRARIES) $(PROGRAMS) $(HEADERS)
install-binPROGRAMS: install-libLTLIBRARIES

installdirs: installdirs-recursive
installdirs-am:
	for dir in "$(DESTDIR)$(libdir)" "$(DESTDIR)$(bindir)" "$(DESTDIR)$(includedir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-recursive
install-exec: install-exec-recursive
install-data: install-data-recursive
uninstall: uninstall-recursive

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-recursive
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:
	-test -z "$(TEST_LOGS)" || rm -f $(TEST_LOGS)
	-test -z "$(TEST_LOGS:.log=.trs)" || rm -f $(TEST_LOGS:.log=.trs)
	-test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)
	-rm -f bench/$(DEPDIR)/$(am__dirstamp)
	-rm -f bench/$(am__dirstamp)
	-rm -f compat/$(DEPDIR)/$(am__dirstamp)
	-rm -f compat/$(am__dirstamp)
	-rm -f consensus/$(DEPDIR)/$(am__dirstamp)
	-rm -f consensus/$(am__dirstamp)
	-rm -f crypto/$(DEPDIR)/$(am__dirstamp)
	-rm -f crypto/$(am__dirstamp)
	-rm -f index/$(DEPDIR)/$(am__dirstamp)
	-rm -f index/$(am__dirstamp)
	-rm -f interfaces/$(DEPDIR)/$(am__dirstamp)
	-rm -f interfaces/$(am__dirstamp)
	-rm -f leveldb/$(am__dirstamp)
	-rm -f leveldb/db/$(DEPDIR)/$(am__dirstamp)
	-rm -f leveldb/db/$(am__dirstamp)
	-rm -f leveldb/helpers/memenv/$(DEPDIR)/$(am__dirstamp)
	-rm -f leveldb/helpers/memenv/$(am__dirstamp)
	-rm -f leveldb/port/$(DEPDIR)/$(am__dirstamp)
	-rm -f leveldb/port/$(am__dirstamp)
	-rm -f leveldb/table/$(DEPDIR)/$(am__dirstamp)
	-rm -f leveldb/table/$(am__dirstamp)
	-rm -f leveldb/util/$(DEPDIR)/$(am__dirstamp)
	-rm -f leveldb/util/$(am__dirstamp)
	-rm -f policy/$(DEPDIR)/$(am__dirstamp)
	-rm -f policy/$(am__dirstamp)
	-rm -f primitives/$(DEPDIR)/$(am__dirstamp)
	-rm -f primitives/$(am__dirstamp)
	-rm -f qt/$(DEPDIR)/$(am__dirstamp)
	-rm -f qt/$(am__dirstamp)
	-rm -f qt/res/$(DEPDIR)/$(am__dirstamp)
	-rm -f qt/res/$(am__dirstamp)
	-rm -f qt/test/$(DEPDIR)/$(am__dirstamp)
	-rm -f qt/test/$(am__dirstamp)
	-rm -f rpc/$(DEPDIR)/$(am__dirstamp)
	-rm -f rpc/$(am__dirstamp)
	-rm -f script/$(DEPDIR)/$(am__dirstamp)
	-rm -f script/$(am__dirstamp)
	-rm -f support/$(DEPDIR)/$(am__dirstamp)
	-rm -f support/$(am__dirstamp)
	-rm -f test/$(DEPDIR)/$(am__dirstamp)
	-rm -f test/$(am__dirstamp)
	-rm -f wallet/$(DEPDIR)/$(am__dirstamp)
	-rm -f wallet/$(am__dirstamp)
	-rm -f wallet/test/$(DEPDIR)/$(am__dirstamp)
	-rm -f wallet/test/$(am__dirstamp)
	-rm -f zmq/$(DEPDIR)/$(am__dirstamp)
	-rm -f zmq/$(am__dirstamp)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-recursive

clean-am: clean-binPROGRAMS clean-generic clean-libLTLIBRARIES \
	clean-libtool clean-local clean-noinstPROGRAMS mostlyclean-am

distclean: distclean-recursive
	-rm -rf ./$(DEPDIR) bench/$(DEPDIR) compat/$(DEPDIR) consensus/$(DEPDIR) crypto/$(DEPDIR) index/$(DEPDIR) interfaces/$(DEPDIR) leveldb/db/$(DEPDIR) leveldb/helpers/memenv/$(DEPDIR) leveldb/port/$(DEPDIR) leveldb/table/$(DEPDIR) leveldb/util/$(DEPDIR) policy/$(DEPDIR) primitives/$(DEPDIR) qt/$(DEPDIR) qt/test/$(DEPDIR) rpc/$(DEPDIR) script/$(DEPDIR) support/$(DEPDIR) test/$(DEPDIR) wallet/$(DEPDIR) wallet/test/$(DEPDIR) zmq/$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-recursive

dvi-am:

html: html-recursive

html-am:

info: info-recursive

info-am:

install-data-am: install-includeHEADERS

install-dvi: install-dvi-recursive

install-dvi-am:

install-exec-am: install-binPROGRAMS install-libLTLIBRARIES

install-html: install-html-recursive

install-html-am:

install-info: install-info-recursive

install-info-am:

install-man:

install-pdf: install-pdf-recursive

install-pdf-am:

install-ps: install-ps-recursive

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-recursive
	-rm -rf ./$(DEPDIR) bench/$(DEPDIR) compat/$(DEPDIR) consensus/$(DEPDIR) crypto/$(DEPDIR) index/$(DEPDIR) interfaces/$(DEPDIR) leveldb/db/$(DEPDIR) leveldb/helpers/memenv/$(DEPDIR) leveldb/port/$(DEPDIR) leveldb/table/$(DEPDIR) leveldb/util/$(DEPDIR) policy/$(DEPDIR) primitives/$(DEPDIR) qt/$(DEPDIR) qt/test/$(DEPDIR) rpc/$(DEPDIR) script/$(DEPDIR) support/$(DEPDIR) test/$(DEPDIR) wallet/$(DEPDIR) wallet/test/$(DEPDIR) zmq/$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-recursive

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-recursive

pdf-am:

ps: ps-recursive

ps-am:

uninstall-am: uninstall-binPROGRAMS uninstall-includeHEADERS \
	uninstall-libLTLIBRARIES

.MAKE: $(am__recursive_targets) check-am install-am install-strip

.PHONY: $(am__recursive_targets) CTAGS GTAGS TAGS all all-am check \
	check-TESTS check-am check-local clean clean-binPROGRAMS \
	clean-generic clean-libLTLIBRARIES clean-libtool clean-local \
	clean-noinstPROGRAMS cscopelist-am ctags ctags-am distclean \
	distclean-compile distclean-generic distclean-libtool \
	distclean-tags distdir dvi dvi-am html html-am info info-am \
	install install-am install-binPROGRAMS install-data \
	install-data-am install-dvi install-dvi-am install-exec \
	install-exec-am install-html install-html-am \
	install-includeHEADERS install-info install-info-am \
	install-libLTLIBRARIES install-man install-pdf install-pdf-am \
	install-ps install-ps-am install-strip installcheck \
	installcheck-am installdirs installdirs-am maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	recheck tags tags-am uninstall uninstall-am \
	uninstall-binPROGRAMS uninstall-includeHEADERS \
	uninstall-libLTLIBRARIES

.PRECIOUS: Makefile


$(LIBUNIVALUE): $(wildcard univalue/lib/*) $(wildcard univalue/include/*)
	$(AM_V_at)$(MAKE) $(AM_MAKEFLAGS) -C $(@D) $(@F)

$(LIBSECP256K1): $(wildcard secp256k1/src/*.h) $(wildcard secp256k1/src/*.c) $(wildcard secp256k1/include/*)
	$(AM_V_at)$(MAKE) $(AM_MAKEFLAGS) -C $(@D) $(@F)

.PHONY: FORCE check-symbols check-security

obj/build.h: FORCE
	@$(MKDIR_P) $(builddir)/obj
	@$(top_srcdir)/share/genbuild.sh "$(abs_top_builddir)/src/obj/build.h" \
	  "$(abs_top_srcdir)"
libheptafranc_util_a-clientversion.$(OBJEXT): obj/build.h

config/heptafranc-config.h: config/stamp-h1
	@$(MAKE) -C $(top_builddir) $(subdir)/$(@)
config/stamp-h1: $(top_srcdir)/$(subdir)/config/heptafranc-config.h.in $(top_builddir)/config.status
	$(AM_V_at)$(MAKE) -C $(top_builddir) $(subdir)/$(@)
$(top_srcdir)/$(subdir)/config/heptafranc-config.h.in:  $(am__configure_deps)
	$(AM_V_at)$(MAKE) -C $(top_srcdir) $(subdir)/config/heptafranc-config.h.in

clean-local:
	-$(MAKE) -C secp256k1 clean
	-$(MAKE) -C univalue clean
	-rm -f leveldb/*/*.gcda leveldb/*/*.gcno leveldb/helpers/memenv/*.gcda leveldb/helpers/memenv/*.gcno
	-rm -f config.h
	-rm -rf test/__pycache__

.rc.o:
	@test -f $(WINDRES)
	$(AM_V_GEN) $(WINDRES) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(CPPFLAGS) -DWINDRES_PREPROC -i $< -o $@

check-symbols: $(bin_PROGRAMS)
#	@echo "Checking glibc back compat..."
#	$(AM_V_at) READELF=$(READELF) CPPFILT=$(CPPFILT) $(top_srcdir)/contrib/devtools/symbol-check.py < $(bin_PROGRAMS)

check-security: $(bin_PROGRAMS)
	@echo "Checking binary security..."
	$(AM_V_at) READELF=$(READELF) OBJDUMP=$(OBJDUMP) $(top_srcdir)/contrib/devtools/security-check.py < $(bin_PROGRAMS)

%.pb.cc %.pb.h: %.proto
	@test -f $(PROTOC)
	$(AM_V_GEN) $(PROTOC) --cpp_out=$(@D) --proto_path=$(<D) $<

#$(HEPTAFRANC_TESTS): $(GENERATED_TEST_FILES)

#heptafranc_test: $(TEST_BINARY)

#heptafranc_test_check: $(TEST_BINARY) FORCE
#	$(MAKE) check-TESTS TESTS=$^

#heptafranc_test_clean : FORCE
#	rm -f $(CLEAN_HEPTAFRANC_TEST) $(test_test_heptafranc_OBJECTS) $(TEST_BINARY)

#check-local: $(HEPTAFRANC_TESTS:.cpp=.cpp.test)
#	@echo "Running test/util/heptafranc-util-test.py..."
#	$(PYTHON) $(top_builddir)/test/util/heptafranc-util-test.py
#	@echo "Running test/util/rpcauth-test.py..."
#	$(PYTHON) $(top_builddir)/test/util/rpcauth-test.py
#	$(AM_V_at)$(MAKE) $(AM_MAKEFLAGS) -C secp256k1 check
#	$(AM_V_at)$(MAKE) $(AM_MAKEFLAGS) -C univalue check

#%.cpp.test: %.cpp
#	@echo Running tests: `cat $< | grep -E "(BOOST_FIXTURE_TEST_SUITE\\(|BOOST_AUTO_TEST_SUITE\\()" | cut -d '(' -f 2 | cut -d ',' -f 1 | cut -d ')' -f 1` from $<
#	$(AM_V_at)$(TEST_BINARY) -l test_suite -t "`cat $< | grep -E "(BOOST_FIXTURE_TEST_SUITE\\(|BOOST_AUTO_TEST_SUITE\\()" | cut -d '(' -f 2 | cut -d ',' -f 1 | cut -d ')' -f 1`" > $<.log 2>&1 || (cat $<.log && false)

#%.json.h: %.json
#	@$(MKDIR_P) $(@D)
#	@{ \
#	 echo "namespace json_tests{" && \
#	 echo "static unsigned const char $(*F)[] = {" && \
#	 $(HEXDUMP) -v -e '8/1 "0x%02x, "' -e '"\n"' $< | $(SED) -e 's/0x  ,//g' && \
#	 echo "};};"; \
#	} > "$@.new" && mv -f "$@.new" "$@"
#	@echo "Generated $@"

#bench/checkblock.cpp: bench/data/block413567.raw.h

#heptafranc_bench: $(BENCH_BINARY)

#bench: $(BENCH_BINARY) FORCE
#	$(BENCH_BINARY)

#heptafranc_bench_clean : FORCE
#	rm -f $(CLEAN_HEPTAFRANC_BENCH) $(bench_bench_heptafranc_OBJECTS) $(BENCH_BINARY)

#%.raw.h: %.raw
#	@$(MKDIR_P) $(@D)
#	@{ \
#	 echo "static unsigned const char $(*F)[] = {" && \
#	 $(HEXDUMP) -v -e '8/1 "0x%02x, "' -e '"\n"' $< | $(SED) -e 's/0x  ,//g' && \
#	 echo "};"; \
#	} > "$@.new" && mv -f "$@.new" "$@"
#	@echo "Generated $@"

# Most files will depend on the forms and moc files as includes. Generate them
# before anything else.
$(QT_MOC): $(QT_FORMS_H)
$(qt_libheptafrancqt_a_OBJECTS) $(qt_heptafranc_qt_OBJECTS) : | $(QT_MOC)

#Generating these with a half-written protobuf header leads to wacky results.
#This makes sure it's done.
$(QT_MOC): $(PROTOBUF_H)
$(QT_MOC_CPP): $(PROTOBUF_H)

SECONDARY: $(QT_QM)

$(srcdir)/qt/heptafrancstrings.cpp: $(libheptafranc_server_a_SOURCES) $(libheptafranc_wallet_a_SOURCES) $(libheptafranc_common_a_SOURCES) $(libheptafranc_zmq_a_SOURCES) $(libheptafranc_consensus_a_SOURCES) $(libheptafranc_util_a_SOURCES)
	@test -n $(XGETTEXT) || echo "xgettext is required for updating translations"
	$(AM_V_GEN) cd $(srcdir); XGETTEXT=$(XGETTEXT) PACKAGE_NAME="$(PACKAGE_NAME)" COPYRIGHT_HOLDERS="$(COPYRIGHT_HOLDERS)" COPYRIGHT_HOLDERS_SUBSTITUTION="$(COPYRIGHT_HOLDERS_SUBSTITUTION)" $(PYTHON) ../share/qt/extract_strings_qt.py $^

translate: $(srcdir)/qt/heptafrancstrings.cpp $(QT_FORMS_UI) $(QT_FORMS_UI) $(HEPTAFRANC_QT_BASE_CPP) qt/heptafranc.cpp $(HEPTAFRANC_QT_WINDOWS_CPP) $(HEPTAFRANC_QT_WALLET_CPP) $(HEPTAFRANC_QT_H) $(HEPTAFRANC_MM)
	@test -n $(LUPDATE) || echo "lupdate is required for updating translations"
	$(AM_V_GEN) QT_SELECT=$(QT_SELECT) $(LUPDATE) $^ -locations relative -no-obsolete -ts $(srcdir)/qt/locale/heptafranc_en.ts

$(QT_QRC_LOCALE_CPP): $(QT_QRC_LOCALE) $(QT_QM)
	@test -f $(RCC)
	@cp -f $< $(@D)/temp_$(<F)
	$(AM_V_GEN) QT_SELECT=$(QT_SELECT) $(RCC) -name heptafranc_locale $(@D)/temp_$(<F) | \
	  $(SED) -e '/^\*\*.*Created:/d' -e '/^\*\*.*by:/d' > $@
	@rm $(@D)/temp_$(<F)

$(QT_QRC_CPP): $(QT_QRC) $(QT_FORMS_H) $(RES_ICONS) $(RES_IMAGES) $(RES_MOVIES) $(PROTOBUF_H)
	@test -f $(RCC)
	$(AM_V_GEN) QT_SELECT=$(QT_SELECT) $(RCC) -name heptafranc $< | \
	  $(SED) -e '/^\*\*.*Created:/d' -e '/^\*\*.*by:/d' > $@

heptafranc_qt_clean: FORCE
	rm -f $(CLEAN_QT) $(qt_libheptafrancqt_a_OBJECTS) $(qt_heptafranc_qt_OBJECTS) qt/heptafranc-qt$(EXEEXT) $(LIBHEPTAFRANCQT)

heptafranc_qt : qt/heptafranc-qt$(EXEEXT)

ui_%.h: %.ui
	@test -f $(UIC)
	@$(MKDIR_P) $(@D)
	$(AM_V_GEN) QT_SELECT=$(QT_SELECT) $(UIC) -o $@ $< || (echo "Error creating $@"; false)

%.moc: %.cpp
	$(AM_V_GEN) QT_SELECT=$(QT_SELECT) $(MOC) $(DEFAULT_INCLUDES) $(QT_INCLUDES) $(MOC_DEFS) $< | \
	  $(SED) -e '/^\*\*.*Created:/d' -e '/^\*\*.*by:/d' > $@

moc_%.cpp: %.h
	$(AM_V_GEN) QT_SELECT=$(QT_SELECT) $(MOC) $(DEFAULT_INCLUDES) $(QT_INCLUDES) $(MOC_DEFS) $< | \
	  $(SED) -e '/^\*\*.*Created:/d' -e '/^\*\*.*by:/d' > $@

%.qm: %.ts
	@test -f $(LRELEASE)
	@$(MKDIR_P) $(@D)
	$(AM_V_GEN) QT_SELECT=$(QT_SELECT) $(LRELEASE) -silent $< -qm $@

#test_heptafranc_qt : qt/test/test_heptafranc-qt$(EXEEXT)

#test_heptafranc_qt_check : qt/test/test_heptafranc-qt$(EXEEXT) FORCE
#	$(MAKE) check-TESTS TESTS=$^

#test_heptafranc_qt_clean: FORCE
#	rm -f $(CLEAN_HEPTAFRANC_QT_TEST) $(qt_test_test_heptafranc_qt_OBJECTS)

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
